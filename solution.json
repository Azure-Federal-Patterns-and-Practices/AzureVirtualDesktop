{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "2440278690418895393"
    }
  },
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jamasten/AzureVirtualDesktop/main/artifacts/",
      "metadata": {
        "description": "The URL prefix for linked resources."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The SAS Token for the scripts if they are stored on an Azure Storage Account."
      }
    },
    "Availability": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "Set the desired availability / SLA with a pooled host pool.  Choose \"None\" if deploying a personal host pool."
      },
      "allowedValues": [
        "AvailabilitySet",
        "AvailabilityZones",
        "None"
      ]
    },
    "AvdObjectId": {
      "type": "string",
      "metadata": {
        "description": "The Object ID for the Windows Virtual Desktop Enterprise Application in Azure AD.  The Object ID can found by selecting Microsoft Applications using the Application type filter in the Enterprise Applications blade of Azure AD."
      }
    },
    "CustomRdpProperty": {
      "type": "string",
      "defaultValue": "audiocapturemode:i:1;camerastoredirect:s:*;use multimon:i:0;drivestoredirect:s:;",
      "metadata": {
        "description": "Input RDP properties to add or remove RDP functionality on the AVD host pool. Settings reference: https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/rdp-files?context=/azure/virtual-desktop/context/context"
      }
    },
    "DiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable BitLocker encrytion on the AVD session hosts and management VM."
      }
    },
    "DiskSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The storage SKU for the AVD session host disks.  Production deployments should use Premium_LRS."
      },
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ]
    },
    "DisaStigCompliance": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploys an Automation Account and uses State Configuration to deploy and monitor DSC compliance.  PowerSTIG is used for the STIG configurations that adhere to DISAs STIG compliance."
      }
    },
    "DomainJoinPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the privileged account to domain join the AVD session hosts to your domain"
      }
    },
    "DomainJoinUserPrincipalName": {
      "type": "string",
      "metadata": {
        "description": "The UPN of the privileged account to domain join the AVD session hosts to your domain. This should be an account the resides within the domain you are joining."
      }
    },
    "DomainName": {
      "type": "string",
      "defaultValue": "jasonmasten.com",
      "metadata": {
        "description": "The name of the domain that provides ADDS to the AVD session hosts and is synchronized with Azure AD"
      }
    },
    "DomainServices": {
      "type": "string",
      "defaultValue": "AzureActiveDirectory",
      "metadata": {
        "description": "The service providing domain services for Azure Virtual Desktop.  This is needed to determine the proper solution to domain join the Azure Storage Account."
      },
      "allowedValues": [
        "ActiveDirectory",
        "AzureActiveDirectory",
        "None",
        "NoneWithIntune"
      ]
    },
    "DrainMode": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable drain mode on sessions hosts during deployment to prevent users from accessing the session hosts."
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "d",
      "metadata": {
        "description": "The target environment for the solution."
      },
      "allowedValues": [
        "d",
        "p",
        "s",
        "t"
      ]
    },
    "EphemeralOsDisk": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choose whether the session host uses an ephemeral disk for the operating system.  Be sure to select a VM SKU that offers a temporary disk that meets your image requirements. Reference: https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks"
      }
    },
    "FslogixShareSizeInGB": {
      "type": "int",
      "metadata": {
        "description": "The file share size(s) in GB for the Fslogix storage solution."
      }
    },
    "FslogixSolution": {
      "type": "string",
      "defaultValue": "ProfileContainer",
      "allowedValues": [
        "CloudCacheProfileContainer",
        "CloudCacheProfileOfficeContainer",
        "ProfileContainer",
        "ProfileOfficeContainer"
      ]
    },
    "FslogixStorage": {
      "type": "string",
      "defaultValue": "AzureStorageAccount Standard PublicEndpoint",
      "metadata": {
        "description": "Enable an Fslogix storage option to manage user profiles for the AVD session hosts. The selected service & SKU should provide sufficient IOPS for all of your users. https://docs.microsoft.com/en-us/azure/architecture/example-scenario/wvd/windows-virtual-desktop-fslogix#performance-requirements"
      },
      "allowedValues": [
        "AzureNetAppFiles Premium",
        "AzureNetAppFiles Standard",
        "AzureNetAppFiles Ultra",
        "AzureStorageAccount Premium PublicEndpoint",
        "AzureStorageAccount Premium PrivateEndpoint",
        "AzureStorageAccount Premium ServiceEndpoint",
        "AzureStorageAccount Standard PublicEndpoint",
        "AzureStorageAccount Standard PrivateEndpoint",
        "AzureStorageAccount Standard ServiceEndpoint",
        "None"
      ]
    },
    "HostPoolType": {
      "type": "string",
      "defaultValue": "Pooled DepthFirst",
      "metadata": {
        "description": "These options specify the host pool type and depending on the type provides the load balancing options and assignment types."
      },
      "allowedValues": [
        "Pooled DepthFirst",
        "Pooled BreadthFirst",
        "Personal Automatic",
        "Personal Direct"
      ]
    },
    "HybridUseBenefit": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choose whether to enable the Hybrid Use Benefit on the DNS forwarder to support Private Endpoints.  Leave the default value if you are not deploying an Azure Storage Account with a Private Endpoint."
      }
    },
    "Identifier": {
      "type": "string",
      "defaultValue": "avd",
      "metadata": {
        "description": "The unique identifier between each business unit or project supporting AVD in your tenant. This is the unique naming component between each AVD stamp."
      },
      "maxLength": 3
    },
    "ImageOffer": {
      "type": "string",
      "defaultValue": "office-365",
      "metadata": {
        "description": "Offer for the virtual machine image"
      }
    },
    "ImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsDesktop",
      "metadata": {
        "description": "Publisher for the virtual machine image"
      }
    },
    "ImageSku": {
      "type": "string",
      "defaultValue": "21h1-evd-o365pp",
      "metadata": {
        "description": "SKU for the virtual machine image"
      }
    },
    "ImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Version for the virtual machine image"
      }
    },
    "KerberosEncryption": {
      "type": "string",
      "defaultValue": "RC4",
      "metadata": {
        "description": "The Active Directory computer object Kerberos encryption type for the Azure Storage Account or Azure NetApp Files Account."
      },
      "allowedValues": [
        "AES256",
        "RC4"
      ]
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "LogAnalyticsWorkspaceRetention": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "The retention for the Log Analytics Workspace to setup the AVD Monitoring solution"
      },
      "minValue": 30,
      "maxValue": 730
    },
    "LogAnalyticsWorkspaceSku": {
      "type": "string",
      "defaultValue": "PerGB2018",
      "metadata": {
        "description": "The SKU for the Log Analytics Workspace to setup the AVD Monitoring solution"
      },
      "allowedValues": [
        "Free",
        "Standard",
        "Premium",
        "PerNode",
        "PerGB2018",
        "Standalone",
        "CapacityReservation"
      ]
    },
    "MaxSessionLimit": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The maximum number of sessions per AVD session host."
      }
    },
    "Monitoring": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploys the required monitoring resources to enable AVD Insights and monitor features in the automation account."
      }
    },
    "OuPath": {
      "type": "string",
      "metadata": {
        "description": "The distinguished name for the target Organization Unit in Active Directory Domain Services."
      }
    },
    "RdpShortPath": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enables the RDP Short Path feature: https://docs.microsoft.com/en-us/azure/virtual-desktop/shortpath"
      }
    },
    "RecoveryServices": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable backups to an Azure Recovery Services vault.  For a pooled host pool this will enable backups on the Azure file share.  For a personal host pool this will enable backups on the AVD sessions hosts."
      }
    },
    "ScalingBeginPeakTime": {
      "type": "string",
      "defaultValue": "9:00",
      "metadata": {
        "description": "Time when session hosts will scale up and continue to stay on to support peak demand; Format 24 hours e.g. 9:00 for 9am"
      }
    },
    "ScalingEndPeakTime": {
      "type": "string",
      "defaultValue": "17:00",
      "metadata": {
        "description": "Time when session hosts will scale down and stay off to support low demand; Format 24 hours e.g. 17:00 for 5pm"
      }
    },
    "ScalingLimitSecondsToForceLogOffUser": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "The number of seconds to wait before automatically signing out users. If set to 0 any session host that has user sessions will be left untouched"
      }
    },
    "ScalingMinimumNumberOfRdsh": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "The minimum number of session host VMs to keep running during off-peak hours. The scaling tool will not work if all virtual machines are turned off and the Start VM On Connect solution is not enabled."
      }
    },
    "ScalingSessionThresholdPerCPU": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "The maximum number of sessions per CPU that will be used as a threshold to determine when new session host VMs need to be started during peak hours"
      }
    },
    "ScalingTool": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploys the required resources for the Scaling Tool. https://docs.microsoft.com/en-us/azure/virtual-desktop/scaling-automation-logic-apps"
      }
    },
    "ScreenCaptureProtection": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Determines whether the Screen Capture Protection feature is enabled.  As of 9/17/21 this is only supported in Azure Cloud. https://docs.microsoft.com/en-us/azure/virtual-desktop/screen-capture-protection"
      }
    },
    "SecurityPrincipalObjectIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of Object IDs for the Security Principals to assign to the AVD Application Group and FSLogix Storage."
      }
    },
    "SecurityPrincipalNames": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The name for the Security Principal to assign NTFS permissions on the Azure File Share to support Fslogix.  Any value can be input in this field if performing a deployment update or choosing a personal host pool."
      }
    },
    "SentinelLogAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the log analytics workspace used for Azure Sentinel."
      }
    },
    "SentinelLogAnalyticsWorkspaceResourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the resource group containing the log analytics workspace used for Azure Sentinel."
      }
    },
    "SentinelLogAnalyticsWorkspaceSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The ID of the subscription containing the log analytics workspace used for Azure Sentinel."
      }
    },
    "SessionHostCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of session hosts to deploy in the host pool.  The default values will allow you deploy 250 VMs using 4 nested deployments.  These integers may be modified to create a smaller deployment in a shard."
      }
    },
    "SessionHostIndex": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The session host number to begin with for the deployment. This is important when adding virtual machines to ensure the names do not conflict."
      }
    },
    "StampIndex": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The stamp index specifies the AVD stamp within an Azure environment."
      }
    },
    "StartVmOnConnect": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Determines whether the Start VM On Connect feature is enabled. https://docs.microsoft.com/en-us/azure/virtual-desktop/start-virtual-machine-connect"
      }
    },
    "StorageCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The Storage Count allows the deployment of one or more storage resources within an AVD stamp to shard for extra capacity. https://docs.microsoft.com/en-us/azure/architecture/patterns/sharding"
      }
    },
    "StorageIndex": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The Storage Index allows the deployment of one or more storage resources within an AVD stamp to shard for extra capacity. https://docs.microsoft.com/en-us/azure/architecture/patterns/sharding"
      }
    },
    "SubnetName": {
      "type": "string",
      "defaultValue": "Clients",
      "metadata": {
        "description": "The subnet for the AVD session hosts."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {
        "Owner": "Jason Masten",
        "Environment": "Development"
      },
      "metadata": {
        "description": "Key / value pairs of metadata for the Azure resources."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The timestamp is needed to differentiate deployments for certain Azure resources and must be set using a parameter."
      }
    },
    "ValidationEnvironment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "The value determines whether the hostpool should receive early AVD updates for testing."
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network for the AVD sessions hosts"
      }
    },
    "VirtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource group for the AVD sessions hosts"
      }
    },
    "VmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Local administrator password for the AVD session hosts"
      }
    },
    "VmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v4",
      "metadata": {
        "description": "The VM SKU for the AVD session hosts."
      }
    },
    "VmUsername": {
      "type": "string",
      "metadata": {
        "description": "The Local Administrator Username for the Session Hosts"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "australiacentral": {
        "acronym": "auc",
        "timeDifference": "+10:00",
        "timeZone": "AUS Eastern Standard Time"
      },
      "australiacentral2": {
        "acronym": "auc2",
        "timeDifference": "+10:00",
        "timeZone": "AUS Eastern Standard Time"
      },
      "australiaeast": {
        "acronym": "aue",
        "timeDifference": "+10:00",
        "timeZone": "AUS Eastern Standard Time"
      },
      "australiasoutheast": {
        "acronym": "ause",
        "timeDifference": "+10:00",
        "timeZone": "AUS Eastern Standard Time"
      },
      "brazilsouth": {
        "acronym": "brs",
        "timeDifference": "-3:00",
        "timeZone": "E. South America Standard Time"
      },
      "brazilsoutheast": {
        "acronym": "brse",
        "timeDifference": "-3:00",
        "timeZone": "E. South America Standard Time"
      },
      "canadacentral": {
        "acronym": "cac",
        "timeDifference": "-5:00",
        "timeZone": "Eastern Standard Time"
      },
      "canadaeast": {
        "acronym": "cae",
        "timeDifference": "-5:00",
        "timeZone": "Eastern Standard Time"
      },
      "centralindia": {
        "acronym": "inc",
        "timeDifference": "+5:30",
        "timeZone": "India Standard Time"
      },
      "centralus": {
        "acronym": "usc",
        "timeDifference": "-6:00",
        "timeZone": "Central Standard Time"
      },
      "chinaeast": {
        "acronym": "cne",
        "timeDifference": "+8:00",
        "timeZone": "China Standard Time"
      },
      "chinaeast2": {
        "acronym": "cne2",
        "timeDifference": "+8:00",
        "timeZone": "China Standard Time"
      },
      "chinanorth": {
        "acronym": "cnn",
        "timeDifference": "+8:00",
        "timeZone": "China Standard Time"
      },
      "chinanorth2": {
        "acronym": "cnn2",
        "timeDifference": "+8:00",
        "timeZone": "China Standard Time"
      },
      "eastasia": {
        "acronym": "ase",
        "timeDifference": "+8:00",
        "timeZone": "China Standard Time"
      },
      "eastus": {
        "acronym": "use",
        "timeDifference": "-5:00",
        "timeZone": "Eastern Standard Time"
      },
      "eastus2": {
        "acronym": "use2",
        "timeDifference": "-5:00",
        "timeZone": "Eastern Standard Time"
      },
      "francecentral": {
        "acronym": "frc",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "francesouth": {
        "acronym": "frs",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "germanynorth": {
        "acronym": "den",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "germanywestcentral": {
        "acronym": "dewc",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "japaneast": {
        "acronym": "jpe",
        "timeDifference": "+9:00",
        "timeZone": "Tokyo Standard Time"
      },
      "japanwest": {
        "acronym": "jpw",
        "timeDifference": "+9:00",
        "timeZone": "Tokyo Standard Time"
      },
      "jioindiacentral": {
        "acronym": "injc",
        "timeDifference": "+5:30",
        "timeZone": "India Standard Time"
      },
      "jioindiawest": {
        "acronym": "injw",
        "timeDifference": "+5:30",
        "timeZone": "India Standard Time"
      },
      "koreacentral": {
        "acronym": "krc",
        "timeDifference": "+9:00",
        "timeZone": "Korea Standard Time"
      },
      "koreasouth": {
        "acronym": "krs",
        "timeDifference": "+9:00",
        "timeZone": "Korea Standard Time"
      },
      "northcentralus": {
        "acronym": "usnc",
        "timeDifference": "-6:00",
        "timeZone": "Central Standard Time"
      },
      "northeurope": {
        "acronym": "eun",
        "timeDifference": "0:00",
        "timeZone": "GMT Standard Time"
      },
      "norwayeast": {
        "acronym": "noe",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "norwaywest": {
        "acronym": "now",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "southafricanorth": {
        "acronym": "zan",
        "timeDifference": "+2:00",
        "timeZone": "South Africa Standard Time"
      },
      "southafricawest": {
        "acronym": "zaw",
        "timeDifference": "+2:00",
        "timeZone": "South Africa Standard Time"
      },
      "southcentralus": {
        "acronym": "ussc",
        "timeDifference": "-6:00",
        "timeZone": "Central Standard Time"
      },
      "southeastasia": {
        "acronym": "asse",
        "timeDifference": "+8:00",
        "timeZone": "Singapore Standard Time"
      },
      "southindia": {
        "acronym": "ins",
        "timeDifference": "+5:30",
        "timeZone": "India Standard Time"
      },
      "swedencentral": {
        "acronym": "sec",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "switzerlandnorth": {
        "acronym": "chn",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "switzerlandwest": {
        "acronym": "chw",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "uaecentral": {
        "acronym": "aec",
        "timeDifference": "+3:00",
        "timeZone": "Arabian Standard Time"
      },
      "uaenorth": {
        "acronym": "aen",
        "timeDifference": "+3:00",
        "timeZone": "Arabian Standard Time"
      },
      "uksouth": {
        "acronym": "uks",
        "timeDifference": "0:00",
        "timeZone": "GMT Standard Time"
      },
      "ukwest": {
        "acronym": "ukw",
        "timeDifference": "0:00",
        "timeZone": "GMT Standard Time"
      },
      "usdodcentral": {
        "acronym": "dodc",
        "timeDifference": "-6:00",
        "timeZone": "Central Standard Time"
      },
      "usdodeast": {
        "acronym": "dode",
        "timeDifference": "-5:00",
        "timeZone": "Eastern Standard Time"
      },
      "usgovarizona": {
        "acronym": "az",
        "timeDifference": "-7:00",
        "timeZone": "Mountain Standard Time"
      },
      "usgovtexas": {
        "acronym": "tx",
        "timeDifference": "-6:00",
        "timeZone": "Central Standard Time"
      },
      "usgovvirginia": {
        "acronym": "va",
        "timeDifference": "-5:00",
        "timeZone": "Eastern Standard Time"
      },
      "westcentralus": {
        "acronym": "uswc",
        "timeDifference": "-7:00",
        "timeZone": "Mountain Standard Time"
      },
      "westeurope": {
        "acronym": "euw",
        "timeDifference": "+1:00",
        "timeZone": "Central Europe Standard Time"
      },
      "westindia": {
        "acronym": "inw",
        "timeDifference": "+5:30",
        "timeZone": "India Standard Time"
      },
      "westus": {
        "acronym": "usw",
        "timeDifference": "-8:00",
        "timeZone": "Pacific Standard Time"
      },
      "westus2": {
        "acronym": "usw2",
        "timeDifference": "-8:00",
        "timeZone": "Pacific Standard Time"
      },
      "westus3": {
        "acronym": "usw3",
        "timeDifference": "-7:00",
        "timeZone": "Mountain Standard Time"
      }
    },
    "MaxResourcesPerTemplateDeployment": 79,
    "DivisionValue": "[div(parameters('SessionHostCount'), variables('MaxResourcesPerTemplateDeployment'))]",
    "DivisionRemainderValue": "[mod(parameters('SessionHostCount'), variables('MaxResourcesPerTemplateDeployment'))]",
    "SessionHostBatchCount": "[if(greater(variables('DivisionRemainderValue'), 0), add(variables('DivisionValue'), 1), variables('DivisionValue'))]",
    "MaxAvSetMembers": 200,
    "BeginAvSetRange": "[div(parameters('SessionHostIndex'), variables('MaxAvSetMembers'))]",
    "EndAvSetRange": "[div(add(parameters('SessionHostCount'), parameters('SessionHostIndex')), variables('MaxAvSetMembers'))]",
    "AvailabilitySetCount": "[length(range(variables('BeginAvSetRange'), add(sub(variables('EndAvSetRange'), variables('BeginAvSetRange')), 1)))]",
    "AppGroupName": "[format('dag-{0}', variables('NamingStandard'))]",
    "AvailabilitySetPrefix": "[format('as-{0}', variables('NamingStandard'))]",
    "AutomationAccountName": "[format('aa-{0}', variables('NamingStandard'))]",
    "ConfigurationName": "Windows10",
    "DiskName": "[format('disk-{0}', variables('NamingStandard'))]",
    "FileShareNames": {
      "CloudCacheProfileContainer": [
        "profile-containers"
      ],
      "CloudCacheProfileOfficeContainer": [
        "office-containers",
        "profile-containers"
      ],
      "ProfileContainer": [
        "profile-containers"
      ],
      "ProfileOfficeContainer": [
        "office-containers",
        "profile-containers"
      ]
    },
    "FileShares": "[variables('FileShareNames')[parameters('FslogixSolution')]]",
    "Fslogix": "[if(or(equals(parameters('FslogixStorage'), 'None'), contains(parameters('DomainServices'), 'None')), false(), true())]",
    "HostPoolName": "[format('hp-{0}', variables('NamingStandard'))]",
    "KeyVaultName": "[format('kv-{0}', variables('NamingStandard'))]",
    "Locations": "[variables('$fxv#0')]",
    "LocationShortName": "[variables('Locations')[parameters('Location')].acronym]",
    "LogAnalyticsWorkspaceName": "[format('law-{0}', variables('NamingStandard'))]",
    "ManagedIdentityName": "[format('uami-{0}', variables('NamingStandard'))]",
    "ManagementVmName": "[format('{0}mgt', variables('VmName'))]",
    "NamingStandard": "[format('{0}-{1}-{2}-{3}', parameters('Identifier'), parameters('Environment'), variables('LocationShortName'), variables('StampIndexFull'))]",
    "NetAppAccountName": "[format('naa-{0}', variables('NamingStandard'))]",
    "NetAppCapacityPoolName": "[format('nacp-{0}', variables('NamingStandard'))]",
    "Netbios": "[split(parameters('DomainName'), '.')[0]]",
    "NetworkSecurityGroupName": "[format('nsg-{0}', variables('NamingStandard'))]",
    "PooledHostPool": "[if(equals(split(parameters('HostPoolType'), ' ')[0], 'Pooled'), true(), false())]",
    "PrivateDnsZoneName": "[format('privatelink.file.{0}', variables('StorageSuffix'))]",
    "PrivateEndpoint": "[if(contains(parameters('FslogixStorage'), 'PrivateEndpoint'), true(), false())]",
    "RecoveryServicesVaultName": "[format('rsv-{0}', variables('NamingStandard'))]",
    "ResourceGroupHosts": "[format('rg-{0}-hosts', variables('NamingStandard'))]",
    "ResourceGroupManagement": "[format('rg-{0}-management', variables('NamingStandard'))]",
    "ResourceGroupStorage": "[format('rg-{0}-storage', variables('NamingStandard'))]",
    "ResourceGroups": "[if(variables('Fslogix'), createArray(variables('ResourceGroupManagement'), variables('ResourceGroupHosts'), variables('ResourceGroupStorage')), createArray(variables('ResourceGroupManagement'), variables('ResourceGroupHosts')))]",
    "RoleDefinitionIds": {
      "contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
      "desktopVirtualizationPowerOnContributor": "489581de-a3bd-480d-9518-53dea7416b33",
      "desktopVirtualizationPowerOnOffContributor": "40c5ff49-9181-41f8-ae61-143b0e78555e",
      "desktopVirtualizationSessionHostOperator": "2ad6aaab-ead9-4eaa-8ac5-da422f562408",
      "desktopVirtualizationUser": "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
      "networkContributor": "4d97b98b-1d4f-4787-a291-c67834d212e7",
      "reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
      "storageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
      "storageFileDataSMBShareContributor": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
      "virtualMachineUserLogin": "fb879df8-f326-4884-b1cf-06f3ad86be52"
    },
    "Sentinel": "[if(or(empty(parameters('SentinelLogAnalyticsWorkspaceName')), empty(parameters('SentinelLogAnalyticsWorkspaceResourceGroupName'))), false(), true())]",
    "SentinelResourceGroup": "[if(variables('Sentinel'), parameters('SentinelLogAnalyticsWorkspaceResourceGroupName'), variables('ResourceGroupManagement'))]",
    "StampIndexFull": "[padLeft(parameters('StampIndex'), 2, '0')]",
    "StorageAccountPrefix": "[format('st{0}{1}{2}{3}', parameters('Identifier'), parameters('Environment'), variables('LocationShortName'), variables('StampIndexFull'))]",
    "StorageSolution": "[split(parameters('FslogixStorage'), ' ')[0]]",
    "StorageSku": "[if(equals(parameters('FslogixStorage'), 'None'), 'None', split(parameters('FslogixStorage'), ' ')[1])]",
    "StorageSuffix": "[environment().suffixes.storage]",
    "VmName": "[format('vm{0}{1}{2}{3}', parameters('Identifier'), parameters('Environment'), variables('LocationShortName'), variables('StampIndexFull'))]",
    "VmTemplate": "[format('{{\"domain\":\"{0}\",\"galleryImageOffer\":\"{1}\",\"galleryImagePublisher\":\"{2}\",\"galleryImageSKU\":\"{3}\",\"imageType\":\"Gallery\",\"imageUri\":null,\"customImageId\":null,\"namePrefix\":\"{4}\",\"osDiskType\":\"{5}\",\"useManagedDisks\":true,\"vmSize\":{{\"id\":\"{6}\",\"cores\":null,\"ram\":null}},\"galleryItemId\":\"{7}.{8}{9}\"}}', parameters('DomainName'), parameters('ImageOffer'), parameters('ImagePublisher'), parameters('ImageSku'), variables('VmName'), parameters('DiskSku'), parameters('VmSize'), parameters('ImagePublisher'), parameters('ImageOffer'), parameters('ImageSku'))]",
    "WorkspaceName": "[format('ws-{0}', variables('NamingStandard'))]"
  },
  "resources": [
    {
      "copy": {
        "name": "resourceGroups",
        "count": "[length(range(0, length(variables('ResourceGroups'))))]"
      },
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-10-01",
      "name": "[variables('ResourceGroups')[range(0, length(variables('ResourceGroups')))[copyIndex()]]]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]"
    },
    {
      "condition": "[parameters('StartVmOnConnect')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(parameters('AvdObjectId'), variables('RoleDefinitionIds').desktopVirtualizationPowerOnContributor, subscription().id)]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionIds').desktopVirtualizationPowerOnContributor)]",
        "principalId": "[parameters('AvdObjectId')]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ManagedIdentity_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DrainMode": {
            "value": "[parameters('DrainMode')]"
          },
          "FslogixStorage": {
            "value": "[parameters('FslogixStorage')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityName": {
            "value": "[variables('ManagedIdentityName')]"
          },
          "ResourceGroupManagement": {
            "value": "[variables('ResourceGroupManagement')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "VirtualNetworkResourceGroupName": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "11800387364043969251"
            }
          },
          "parameters": {
            "DrainMode": {
              "type": "bool"
            },
            "FslogixStorage": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ManagedIdentityName": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "VirtualNetworkResourceGroupName": {
              "type": "string"
            }
          },
          "variables": {
            "DrainModeRoleAssignment": "[if(parameters('DrainMode'), createArray(createObject('condition', parameters('DrainMode'), 'resourceGroup', parameters('ResourceGroupManagement'), 'roleDefinitionId', parameters('RoleDefinitionIds').desktopVirtualizationSessionHostOperator)), createArray())]",
            "PrivateEndpointRoleAssignment": "[if(contains(parameters('FslogixStorage'), 'PrivateEndpoint'), createArray(createObject('condition', contains(parameters('FslogixStorage'), 'PrivateEndpoint'), 'resourceGroup', parameters('VirtualNetworkResourceGroupName'), 'roleDefinitionId', parameters('RoleDefinitionIds').networkContributor)), createArray())]",
            "RoleAssignments": "[union(variables('DrainModeRoleAssignment'), variables('PrivateEndpointRoleAssignment'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('ManagedIdentityName'), parameters('RoleDefinitionIds').reader, subscription().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').reader)]",
                "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedManagedIdentity_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('UserAssignedManagedIdentity_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ManagedIdentityName": {
                    "value": "[parameters('ManagedIdentityName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "3182124165124529360"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "ManagedIdentityName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2018-11-30",
                      "name": "[parameters('ManagedIdentityName')]",
                      "location": "[parameters('Location')]"
                    }
                  ],
                  "outputs": {
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName')), '2018-11-30').principalId]"
                    },
                    "resourceIdentifier": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName'))]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(range(0, length(variables('RoleAssignments'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RoleAssignments_{0}_{1}', variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].resourceGroup, parameters('Timestamp'))]",
              "resourceGroup": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].resourceGroup]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrincipalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]"
                  },
                  "RoleDefinitionId": {
                    "value": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].roleDefinitionId)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7200534500754601917"
                    }
                  },
                  "parameters": {
                    "PrincipalId": {
                      "type": "string"
                    },
                    "RoleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                      "properties": {
                        "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                        "principalId": "[parameters('PrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedManagedIdentity_{0}', parameters('Timestamp')))]"
              ]
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]"
            },
            "resourceIdentifier": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceIdentifier.value]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroups"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Validation_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroups')[0]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "Availability": {
            "value": "[parameters('Availability')]"
          },
          "DiskEncryption": {
            "value": "[parameters('DiskEncryption')]"
          },
          "DiskSku": {
            "value": "[parameters('DiskSku')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "EphemeralOsDisk": {
            "value": "[parameters('EphemeralOsDisk')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "KerberosEncryption": {
            "value": "[parameters('KerberosEncryption')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityResourceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceIdentifier.value]"
          },
          "NamingStandard": {
            "value": "[variables('NamingStandard')]"
          },
          "PooledHostPool": {
            "value": "[variables('PooledHostPool')]"
          },
          "RecoveryServices": {
            "value": "[parameters('RecoveryServices')]"
          },
          "SecurityPrincipalIds": {
            "value": "[parameters('SecurityPrincipalObjectIds')]"
          },
          "SecurityPrincipalNames": {
            "value": "[parameters('SecurityPrincipalNames')]"
          },
          "SessionHostCount": {
            "value": "[parameters('SessionHostCount')]"
          },
          "SessionHostIndex": {
            "value": "[parameters('SessionHostIndex')]"
          },
          "StartVmOnConnect": {
            "value": "[parameters('StartVmOnConnect')]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageSolution": {
            "value": "[variables('StorageSolution')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "VirtualNetwork": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "VirtualNetworkResourceGroup": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          },
          "VmSize": {
            "value": "[parameters('VmSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "1546661280389584892"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "Availability": {
              "type": "string"
            },
            "DiskEncryption": {
              "type": "bool"
            },
            "DiskSku": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "DomainServices": {
              "type": "string"
            },
            "EphemeralOsDisk": {
              "type": "bool"
            },
            "ImageSku": {
              "type": "string"
            },
            "KerberosEncryption": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ManagedIdentityResourceId": {
              "type": "string"
            },
            "NamingStandard": {
              "type": "string"
            },
            "PooledHostPool": {
              "type": "bool"
            },
            "RecoveryServices": {
              "type": "bool"
            },
            "SecurityPrincipalIds": {
              "type": "array"
            },
            "SecurityPrincipalNames": {
              "type": "array"
            },
            "SessionHostCount": {
              "type": "int"
            },
            "SessionHostIndex": {
              "type": "int"
            },
            "StartVmOnConnect": {
              "type": "bool"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageSolution": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "VirtualNetwork": {
              "type": "string"
            },
            "VirtualNetworkResourceGroup": {
              "type": "string"
            },
            "VmSize": {
              "type": "string"
            }
          },
          "variables": {
            "SecurityPrincipalIdsCount": "[length(parameters('SecurityPrincipalIds'))]",
            "SecurityPrincipalNamesCount": "[length(parameters('SecurityPrincipalNames'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('ds-{0}-validation', parameters('NamingStandard'))]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('ManagedIdentityResourceId'))]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('Timestamp')]",
                "azPowerShellVersion": "5.4",
                "arguments": "[format('-Availability {0} -DiskEncryption {1} -DiskSku {2} -DomainName {3} -DomainServices {4} -Environment {5} -EphemeralOsDisk {6} -ImageSku {7} -KerberosEncryption {8} -Location {9} -PooledHostPool {10} -RecoveryServices {11} -SecurityPrincipalIdsCount {12} -SecurityPrincipalNamesCount {13} -SessionHostCount {14} -SessionHostIndex {15} -StartVmOnConnect {16} -StorageCount {17} -StorageSolution {18} -VmSize {19} -VnetName {20} -VnetResourceGroupName {21}', parameters('Availability'), parameters('DiskEncryption'), parameters('DiskSku'), parameters('DomainName'), parameters('DomainServices'), environment().name, parameters('EphemeralOsDisk'), parameters('ImageSku'), parameters('KerberosEncryption'), parameters('Location'), parameters('PooledHostPool'), parameters('RecoveryServices'), variables('SecurityPrincipalIdsCount'), variables('SecurityPrincipalNamesCount'), parameters('SessionHostCount'), parameters('SessionHostIndex'), parameters('StartVmOnConnect'), parameters('StorageCount'), parameters('StorageSolution'), parameters('VmSize'), parameters('VirtualNetwork'), parameters('VirtualNetworkResourceGroup'))]",
                "primaryScriptUri": "[format('{0}Get-Validation.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                "timeout": "PT2H",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
              }
            }
          ],
          "outputs": {
            "acceleratedNetworking": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.acceleratedNetworking]"
            },
            "anfActiveDirectory": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.anfActiveDirectory]"
            },
            "anfDnsServers": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.anfDnsServers]"
            },
            "anfSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.anfSubnetId]"
            },
            "dnsForwarders": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.dnsForwarders]"
            },
            "dnsServerSize": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.dnsServerSize]"
            },
            "ephemeralOsDisk": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.ephemeralOsDisk]"
            },
            "trustedLaunch": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('ds-{0}-validation', parameters('NamingStandard'))), '2020-10-01').outputs.trustedLaunch]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp')))]",
        "resourceGroups"
      ]
    },
    {
      "condition": "[or(variables('PooledHostPool'), parameters('DisaStigCompliance'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('AutomationAccount_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountName": {
            "value": "[variables('AutomationAccountName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": "[if(parameters('Monitoring'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp'))), '2022-09-01').outputs.LogAnalyticsWorkspaceResourceId.value), createObject('value', ''))]",
          "Monitoring": {
            "value": "[parameters('Monitoring')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "11774451295155844685"
            }
          },
          "parameters": {
            "AutomationAccountName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "Monitoring": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('AutomationAccountName')]",
              "location": "[parameters('Location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Free"
                }
              }
            },
            {
              "condition": "[parameters('Monitoring')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
              "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "JobLogs",
                    "enabled": true
                  },
                  {
                    "category": "JobStreams",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp')))]",
        "resourceGroups"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('HostPool_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AppGroupName": {
            "value": "[variables('AppGroupName')]"
          },
          "CustomRdpProperty": {
            "value": "[parameters('CustomRdpProperty')]"
          },
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "HostPoolName": {
            "value": "[variables('HostPoolName')]"
          },
          "HostPoolType": {
            "value": "[parameters('HostPoolType')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "MaxSessionLimit": {
            "value": "[parameters('MaxSessionLimit')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "SecurityPrincipalIds": {
            "value": "[parameters('SecurityPrincipalObjectIds')]"
          },
          "StartVmOnConnect": {
            "value": "[parameters('StartVmOnConnect')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "ValidationEnvironment": {
            "value": "[parameters('ValidationEnvironment')]"
          },
          "VmTemplate": {
            "value": "[variables('VmTemplate')]"
          },
          "WorkspaceName": {
            "value": "[variables('WorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "14672308393214617196"
            }
          },
          "parameters": {
            "AppGroupName": {
              "type": "string"
            },
            "CustomRdpProperty": {
              "type": "string"
            },
            "DomainServices": {
              "type": "string"
            },
            "HostPoolName": {
              "type": "string"
            },
            "HostPoolType": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "MaxSessionLimit": {
              "type": "int"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "SecurityPrincipalIds": {
              "type": "array"
            },
            "StartVmOnConnect": {
              "type": "bool"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string",
              "defaultValue": "[utcNow('u')]"
            },
            "ValidationEnvironment": {
              "type": "bool"
            },
            "VmTemplate": {
              "type": "string"
            },
            "WorkspaceName": {
              "type": "string"
            }
          },
          "variables": {
            "CustomRdpProperty_Complete": "[if(contains(parameters('DomainServices'), 'None'), format('{0}targetisaadjoined:i:1', parameters('CustomRdpProperty')), parameters('CustomRdpProperty'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DesktopVirtualization/hostPools",
              "apiVersion": "2021-03-09-preview",
              "name": "[parameters('HostPoolName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "hostPoolType": "[split(parameters('HostPoolType'), ' ')[0]]",
                "maxSessionLimit": "[parameters('MaxSessionLimit')]",
                "loadBalancerType": "[if(contains(parameters('HostPoolType'), 'Pooled'), split(parameters('HostPoolType'), ' ')[1], 'Persistent')]",
                "validationEnvironment": "[parameters('ValidationEnvironment')]",
                "registrationInfo": {
                  "expirationTime": "[dateTimeAdd(parameters('Timestamp'), 'PT2H')]",
                  "registrationTokenOperation": "Update"
                },
                "preferredAppGroupType": "Desktop",
                "customRdpProperty": "[variables('CustomRdpProperty_Complete')]",
                "personalDesktopAssignmentType": "[if(contains(parameters('HostPoolType'), 'Personal'), split(parameters('HostPoolType'), ' ')[1], null())]",
                "startVMOnConnect": "[parameters('StartVmOnConnect')]",
                "vmTemplate": "[parameters('VmTemplate')]"
              }
            },
            {
              "type": "Microsoft.DesktopVirtualization/applicationGroups",
              "apiVersion": "2021-03-09-preview",
              "name": "[parameters('AppGroupName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "hostPoolArmPath": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName'))]",
                "applicationGroupType": "Desktop"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName'))]"
              ]
            },
            {
              "copy": {
                "name": "appGroupAssignment",
                "count": "[length(range(0, length(parameters('SecurityPrincipalIds'))))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.DesktopVirtualization/applicationGroups/{0}', parameters('AppGroupName'))]",
              "name": "[guid(parameters('SecurityPrincipalIds')[range(0, length(parameters('SecurityPrincipalIds')))[copyIndex()]], parameters('RoleDefinitionIds').desktopVirtualizationUser, parameters('AppGroupName'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').desktopVirtualizationUser)]",
                "principalId": "[parameters('SecurityPrincipalIds')[range(0, length(parameters('SecurityPrincipalIds')))[copyIndex()]]]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('AppGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.DesktopVirtualization/workspaces",
              "apiVersion": "2021-03-09-preview",
              "name": "[parameters('WorkspaceName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "applicationGroupReferences": [
                  "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('AppGroupName'))]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('AppGroupName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "resourceGroups"
      ]
    },
    {
      "condition": "[parameters('Monitoring')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Monitoring_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountName": {
            "value": "[variables('AutomationAccountName')]"
          },
          "HostPoolName": {
            "value": "[variables('HostPoolName')]"
          },
          "LogAnalyticsWorkspaceName": {
            "value": "[variables('LogAnalyticsWorkspaceName')]"
          },
          "LogAnalyticsWorkspaceRetention": {
            "value": "[parameters('LogAnalyticsWorkspaceRetention')]"
          },
          "LogAnalyticsWorkspaceSku": {
            "value": "[parameters('LogAnalyticsWorkspaceSku')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "PooledHostPool": {
            "value": "[variables('PooledHostPool')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "WorkspaceName": {
            "value": "[variables('WorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "15570121872368972228"
            }
          },
          "parameters": {
            "AutomationAccountName": {
              "type": "string"
            },
            "HostPoolName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceRetention": {
              "type": "int"
            },
            "LogAnalyticsWorkspaceSku": {
              "type": "string"
            },
            "PooledHostPool": {
              "type": "bool"
            },
            "Tags": {
              "type": "object"
            },
            "WorkspaceName": {
              "type": "string"
            }
          },
          "variables": {
            "HostPoolLogs": [
              {
                "category": "Checkpoint",
                "enabled": true
              },
              {
                "category": "Error",
                "enabled": true
              },
              {
                "category": "Management",
                "enabled": true
              },
              {
                "category": "Connection",
                "enabled": true
              },
              {
                "category": "HostRegistration",
                "enabled": true
              },
              {
                "category": "AgentHealthStatus",
                "enabled": true
              }
            ],
            "WindowsEvents": [
              {
                "name": "Microsoft-FSLogix-Apps/Operational",
                "types": [
                  {
                    "eventType": "Error"
                  },
                  {
                    "eventType": "Warning"
                  },
                  {
                    "eventType": "Information"
                  }
                ]
              },
              {
                "name": "Microsoft-Windows-TerminalServices-LocalSessionManager/Operational",
                "types": [
                  {
                    "eventType": "Error"
                  },
                  {
                    "eventType": "Warning"
                  },
                  {
                    "eventType": "Information"
                  }
                ]
              },
              {
                "name": "System",
                "types": [
                  {
                    "eventType": "Error"
                  },
                  {
                    "eventType": "Warning"
                  }
                ]
              },
              {
                "name": "Microsoft-Windows-TerminalServices-RemoteConnectionManager/Admin",
                "types": [
                  {
                    "eventType": "Error"
                  },
                  {
                    "eventType": "Warning"
                  },
                  {
                    "eventType": "Information"
                  }
                ]
              },
              {
                "name": "Microsoft-FSLogix-Apps/Admin",
                "types": [
                  {
                    "eventType": "Error"
                  },
                  {
                    "eventType": "Warning"
                  },
                  {
                    "eventType": "Information"
                  }
                ]
              },
              {
                "name": "Application",
                "types": [
                  {
                    "eventType": "Error"
                  },
                  {
                    "eventType": "Warning"
                  }
                ]
              }
            ],
            "WindowsPerformanceCounters": [
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Disk Transfers/sec"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Current Disk Queue Length"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Disk Reads/sec"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "% Free Space"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk sec/Read"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Disk Writes/sec"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk sec/Write"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Free Megabytes"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "C:",
                "intervalSeconds": 60,
                "counterName": "% Free Space"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "C:",
                "intervalSeconds": 30,
                "counterName": "Avg. Disk Queue Length"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "C:",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk sec/Transfer"
              },
              {
                "objectName": "LogicalDisk",
                "instanceName": "C:",
                "intervalSeconds": 30,
                "counterName": "Current Disk Queue Length"
              },
              {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "% Committed Bytes In Use"
              },
              {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Available MBytes"
              },
              {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": 30,
                "counterName": "Available Mbytes"
              },
              {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": 30,
                "counterName": "Page Faults/sec"
              },
              {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": 30,
                "counterName": "Pages/sec"
              },
              {
                "objectName": "Network Adapter",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Bytes Sent/sec"
              },
              {
                "objectName": "Network Adapter",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Bytes Received/sec"
              },
              {
                "objectName": "Network Interface",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Bytes Total/sec"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk Bytes/Transfer"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk Bytes/Read"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk sec/Write"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk sec/Read"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk Bytes/Write"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Avg. Disk sec/Transfer"
              },
              {
                "objectName": "PhysicalDisk",
                "instanceName": "*",
                "intervalSeconds": 30,
                "counterName": "Avg. Disk Queue Length"
              },
              {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "IO Write Operations/sec"
              },
              {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "IO Read Operations/sec"
              },
              {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Thread Count"
              },
              {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "% User Time"
              },
              {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Working Set"
              },
              {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "% Processor Time"
              },
              {
                "objectName": "Processor",
                "instanceName": "_Total",
                "intervalSeconds": 60,
                "counterName": "% Processor Time"
              },
              {
                "objectName": "Processor Information",
                "instanceName": "_Total",
                "intervalSeconds": 30,
                "counterName": "% Processor Time"
              },
              {
                "objectName": "RemoteFX Graphics",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Frames Skipped/Second - Insufficient Server Resources"
              },
              {
                "objectName": "RemoteFX Graphics",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Average Encoding Time"
              },
              {
                "objectName": "RemoteFX Graphics",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Frames Skipped/Second - Insufficient Client Resources"
              },
              {
                "objectName": "RemoteFX Graphics",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Frames Skipped/Second - Insufficient Network Resources"
              },
              {
                "objectName": "RemoteFX Network",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Current UDP Bandwidth"
              },
              {
                "objectName": "RemoteFX Network",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Current TCP Bandwidth"
              },
              {
                "objectName": "RemoteFX Network",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Current TCP RTT"
              },
              {
                "objectName": "RemoteFX Network",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Current UDP RTT"
              },
              {
                "objectName": "System",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Processor Queue Length"
              },
              {
                "objectName": "Terminal Services",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Inactive Sessions"
              },
              {
                "objectName": "Terminal Services",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Total Sessions"
              },
              {
                "objectName": "Terminal Services",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "Active Sessions"
              },
              {
                "objectName": "Terminal Services Session",
                "instanceName": "*",
                "intervalSeconds": 60,
                "counterName": "% Processor Time"
              },
              {
                "objectName": "User Input Delay per Process",
                "instanceName": "*",
                "intervalSeconds": 30,
                "counterName": "Max Input Delay"
              },
              {
                "objectName": "User Input Delay per Session",
                "instanceName": "*",
                "intervalSeconds": 30,
                "counterName": "Max Input Delay"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('LogAnalyticsWorkspaceName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "sku": {
                  "name": "[parameters('LogAnalyticsWorkspaceSku')]"
                },
                "retentionInDays": "[parameters('LogAnalyticsWorkspaceRetention')]",
                "workspaceCapping": {
                  "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "copy": {
                "name": "windowsEvents",
                "count": "[length(variables('WindowsEvents'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.OperationalInsights/workspaces/dataSources",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('LogAnalyticsWorkspaceName'), format('WindowsEvent{0}', copyIndex()))]",
              "tags": "[parameters('Tags')]",
              "kind": "WindowsEvent",
              "properties": {
                "eventLogName": "[variables('WindowsEvents')[copyIndex()].name]",
                "eventTypes": "[variables('WindowsEvents')[copyIndex()].types]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "copy": {
                "name": "windowsPerformanceCounters",
                "count": "[length(variables('WindowsPerformanceCounters'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.OperationalInsights/workspaces/dataSources",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('LogAnalyticsWorkspaceName'), format('WindowsPerformanceCounter{0}', copyIndex()))]",
              "tags": "[parameters('Tags')]",
              "kind": "WindowsPerformanceCounter",
              "properties": {
                "objectName": "[variables('WindowsPerformanceCounters')[copyIndex()].objectName]",
                "instanceName": "[variables('WindowsPerformanceCounters')[copyIndex()].instanceName]",
                "intervalSeconds": "[variables('WindowsPerformanceCounters')[copyIndex()].intervalSeconds]",
                "counterName": "[variables('WindowsPerformanceCounters')[copyIndex()].counterName]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]",
                "windowsEvents"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DesktopVirtualization/workspaces/{0}', parameters('WorkspaceName'))]",
              "name": "[format('diag-{0}', parameters('WorkspaceName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "Checkpoint",
                    "enabled": true
                  },
                  {
                    "category": "Error",
                    "enabled": true
                  },
                  {
                    "category": "Management",
                    "enabled": true
                  },
                  {
                    "category": "Feed",
                    "enabled": true
                  }
                ],
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('HostPoolName'))]",
              "name": "[format('diag-{0}', parameters('HostPoolName'))]",
              "properties": {
                "logs": "[variables('HostPoolLogs')]",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "condition": "[parameters('PooledHostPool')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
              "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "JobLogs",
                    "enabled": true
                  },
                  {
                    "category": "JobStreams",
                    "enabled": true
                  }
                ],
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
              ]
            }
          ],
          "outputs": {
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('HostPool_{0}', parameters('Timestamp')))]",
        "resourceGroups"
      ]
    },
    {
      "condition": "[parameters('DiskEncryption')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('BitLocker_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "DeploymentResourceGroup": {
            "value": "[variables('ResourceGroups')[0]]"
          },
          "KeyVaultName": {
            "value": "[variables('KeyVaultName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "ManagedIdentityPrincipalId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]"
          },
          "ManagedIdentityResourceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceIdentifier.value]"
          },
          "NamingStandard": {
            "value": "[variables('NamingStandard')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "10185823531375884618"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "DeploymentResourceGroup": {
              "type": "string"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ManagedIdentityPrincipalId": {
              "type": "string"
            },
            "ManagedIdentityResourceId": {
              "type": "string"
            },
            "NamingStandard": {
              "type": "string"
            },
            "Timestamp": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2016-10-01",
              "name": "[parameters('KeyVaultName')]",
              "location": "[parameters('Location')]",
              "tags": {},
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('ManagedIdentityPrincipalId')]",
                    "permissions": {
                      "keys": [
                        "get",
                        "list",
                        "create"
                      ],
                      "secrets": []
                    }
                  }
                ],
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": false,
                "enabledForDiskEncryption": true
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('DeploymentScript_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('DeploymentResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                  },
                  "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                  },
                  "KeyVaultName": {
                    "value": "[parameters('KeyVaultName')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ManagedIdentityResourceId": {
                    "value": "[parameters('ManagedIdentityResourceId')]"
                  },
                  "NamingStandard": {
                    "value": "[parameters('NamingStandard')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "3508807971310196156"
                    }
                  },
                  "parameters": {
                    "_artifactsLocation": {
                      "type": "string"
                    },
                    "_artifactsLocationSasToken": {
                      "type": "securestring"
                    },
                    "KeyVaultName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "NamingStandard": {
                      "type": "string"
                    },
                    "Timestamp": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2019-10-01-preview",
                      "name": "[format('ds-{0}-bitlockerKek', parameters('NamingStandard'))]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('ManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[parameters('Location')]",
                      "kind": "AzurePowerShell",
                      "tags": {},
                      "properties": {
                        "azPowerShellVersion": "5.4",
                        "cleanupPreference": "OnSuccess",
                        "primaryScriptUri": "[format('{0}New-AzureKeyEncryptionKey.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                        "arguments": "[format(' -KeyVault {0}', parameters('KeyVaultName'))]",
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "retentionInterval": "P1D",
                        "timeout": "PT30M"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "condition": "[parameters('DisaStigCompliance')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('STIG_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "AutomationAccountName": {
            "value": "[variables('AutomationAccountName')]"
          },
          "ConfigurationName": {
            "value": "[variables('ConfigurationName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "3034570479106216808"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "ConfigurationName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "Timestamp": {
              "type": "string"
            }
          },
          "variables": {
            "Modules": [
              {
                "name": "AccessControlDSC",
                "uri": "https://www.powershellgallery.com/api/v2/package/AccessControlDSC/1.4.1"
              },
              {
                "name": "AuditPolicyDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/AuditPolicyDsc/1.4.0.0"
              },
              {
                "name": "AuditSystemDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/AuditSystemDsc/1.1.0"
              },
              {
                "name": "CertificateDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/CertificateDsc/5.0.0"
              },
              {
                "name": "ComputerManagementDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/ComputerManagementDsc/8.4.0"
              },
              {
                "name": "FileContentDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/FileContentDsc/1.3.0.151"
              },
              {
                "name": "GPRegistryPolicyDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/GPRegistryPolicyDsc/1.2.0"
              },
              {
                "name": "nx",
                "uri": "https://www.powershellgallery.com/api/v2/package/nx/1.0"
              },
              {
                "name": "PSDscResources",
                "uri": "https://www.powershellgallery.com/api/v2/package/PSDscResources/2.12.0.0"
              },
              {
                "name": "SecurityPolicyDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/SecurityPolicyDsc/2.10.0.0"
              },
              {
                "name": "SqlServerDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/SqlServerDsc/13.3.0"
              },
              {
                "name": "WindowsDefenderDsc",
                "uri": "https://www.powershellgallery.com/api/v2/package/WindowsDefenderDsc/2.1.0"
              },
              {
                "name": "xDnsServer",
                "uri": "https://www.powershellgallery.com/api/v2/package/xDnsServer/1.16.0.0"
              },
              {
                "name": "xWebAdministration",
                "uri": "https://www.powershellgallery.com/api/v2/package/xWebAdministration/3.2.0"
              },
              {
                "name": "PowerSTIG",
                "uri": "https://www.powershellgallery.com/api/v2/package/PowerSTIG/4.10.1"
              }
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "modules",
                "count": "[length(variables('Modules'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('Modules')[copyIndex()].name)]",
              "location": "[parameters('Location')]",
              "properties": {
                "contentLink": {
                  "uri": "[variables('Modules')[copyIndex()].uri]"
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/configurations",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('ConfigurationName'))]",
              "location": "[parameters('Location')]",
              "properties": {
                "source": {
                  "type": "uri",
                  "value": "[format('{0}Windows10.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                  "version": "[parameters('Timestamp')]"
                },
                "parameters": {},
                "description": "Hardens the VM using the Azure STIG Template"
              },
              "dependsOn": [
                "modules"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/compilationjobs",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('ConfigurationName'), parameters('AutomationAccountName'), resourceGroup().id))]",
              "location": "[parameters('Location')]",
              "properties": {
                "configuration": {
                  "name": "[parameters('ConfigurationName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/configurations', parameters('AutomationAccountName'), parameters('ConfigurationName'))]",
                "modules"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]",
        "resourceGroups"
      ]
    },
    {
      "condition": "[variables('Fslogix')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('FSLogix_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "ActiveDirectoryConnection": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.anfActiveDirectory.value]"
          },
          "DelegatedSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.anfSubnetId.value]"
          },
          "DiskEncryption": {
            "value": "[parameters('DiskEncryption')]"
          },
          "DnsServerForwarderIPAddresses": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.dnsForwarders.value]"
          },
          "DnsServers": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.anfDnsServers.value]"
          },
          "DnsServerSize": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.dnsServerSize.value]"
          },
          "DomainJoinPassword": {
            "value": "[parameters('DomainJoinPassword')]"
          },
          "DomainJoinUserPrincipalName": {
            "value": "[parameters('DomainJoinUserPrincipalName')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "FileShares": {
            "value": "[variables('FileShares')]"
          },
          "FslogixShareSizeInGB": {
            "value": "[parameters('FslogixShareSizeInGB')]"
          },
          "FslogixSolution": {
            "value": "[parameters('FslogixSolution')]"
          },
          "FslogixStorage": {
            "value": "[parameters('FslogixStorage')]"
          },
          "HybridUseBenefit": {
            "value": "[parameters('HybridUseBenefit')]"
          },
          "Identifier": {
            "value": "[parameters('Identifier')]"
          },
          "KerberosEncryption": {
            "value": "[parameters('KerberosEncryption')]"
          },
          "KeyVaultName": {
            "value": "[variables('KeyVaultName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LocationShortName": {
            "value": "[variables('LocationShortName')]"
          },
          "ManagedIdentityResourceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceIdentifier.value]"
          },
          "ManagementVmName": {
            "value": "[variables('ManagementVmName')]"
          },
          "NamingStandard": {
            "value": "[variables('NamingStandard')]"
          },
          "NetAppAccountName": {
            "value": "[variables('NetAppAccountName')]"
          },
          "NetAppCapacityPoolName": {
            "value": "[variables('NetAppCapacityPoolName')]"
          },
          "Netbios": {
            "value": "[variables('Netbios')]"
          },
          "OuPath": {
            "value": "[parameters('OuPath')]"
          },
          "PrivateDnsZoneName": {
            "value": "[variables('PrivateDnsZoneName')]"
          },
          "PrivateEndpoint": {
            "value": "[variables('PrivateEndpoint')]"
          },
          "ResourceGroups": {
            "value": "[variables('ResourceGroups')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "SecurityPrincipalIds": {
            "value": "[parameters('SecurityPrincipalObjectIds')]"
          },
          "SecurityPrincipalNames": {
            "value": "[parameters('SecurityPrincipalNames')]"
          },
          "SmbServerLocation": {
            "value": "[variables('LocationShortName')]"
          },
          "StampIndexFull": {
            "value": "[variables('StampIndexFull')]"
          },
          "StorageAccountPrefix": {
            "value": "[variables('StorageAccountPrefix')]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageIndex": {
            "value": "[parameters('StorageIndex')]"
          },
          "StorageSku": {
            "value": "[variables('StorageSku')]"
          },
          "StorageSolution": {
            "value": "[variables('StorageSolution')]"
          },
          "StorageSuffix": {
            "value": "[variables('StorageSuffix')]"
          },
          "Subnet": {
            "value": "[parameters('SubnetName')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "VirtualNetwork": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "VirtualNetworkResourceGroup": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          },
          "VmPassword": {
            "value": "[parameters('VmPassword')]"
          },
          "VmUsername": {
            "value": "[parameters('VmUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "14283312547343692093"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "ActiveDirectoryConnection": {
              "type": "string"
            },
            "DelegatedSubnetId": {
              "type": "string"
            },
            "DiskEncryption": {
              "type": "bool"
            },
            "DnsServerForwarderIPAddresses": {
              "type": "array"
            },
            "DnsServers": {
              "type": "string"
            },
            "DnsServerSize": {
              "type": "string"
            },
            "DomainJoinPassword": {
              "type": "securestring"
            },
            "DomainJoinUserPrincipalName": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "DomainServices": {
              "type": "string"
            },
            "Environment": {
              "type": "string"
            },
            "FileShares": {
              "type": "array"
            },
            "FslogixShareSizeInGB": {
              "type": "int"
            },
            "FslogixSolution": {
              "type": "string"
            },
            "FslogixStorage": {
              "type": "string"
            },
            "HybridUseBenefit": {
              "type": "bool"
            },
            "Identifier": {
              "type": "string"
            },
            "KerberosEncryption": {
              "type": "string"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LocationShortName": {
              "type": "string"
            },
            "ManagedIdentityResourceId": {
              "type": "string"
            },
            "ManagementVmName": {
              "type": "string"
            },
            "NamingStandard": {
              "type": "string"
            },
            "NetAppAccountName": {
              "type": "string"
            },
            "NetAppCapacityPoolName": {
              "type": "string"
            },
            "Netbios": {
              "type": "string"
            },
            "OuPath": {
              "type": "string"
            },
            "PrivateDnsZoneName": {
              "type": "string"
            },
            "PrivateEndpoint": {
              "type": "bool"
            },
            "SecurityPrincipalIds": {
              "type": "array"
            },
            "SecurityPrincipalNames": {
              "type": "array"
            },
            "SmbServerLocation": {
              "type": "string"
            },
            "StampIndexFull": {
              "type": "string"
            },
            "StorageAccountPrefix": {
              "type": "string"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageIndex": {
              "type": "int"
            },
            "StorageSku": {
              "type": "string"
            },
            "StorageSolution": {
              "type": "string"
            },
            "StorageSuffix": {
              "type": "string"
            },
            "Subnet": {
              "type": "string"
            },
            "ResourceGroups": {
              "type": "array"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "VirtualNetwork": {
              "type": "string"
            },
            "VirtualNetworkResourceGroup": {
              "type": "string"
            },
            "VmPassword": {
              "type": "securestring"
            },
            "VmUsername": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[not(contains(parameters('DomainServices'), 'None'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ManagementVirtualMachine_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroups')[0]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "DiskEncryption": {
                    "value": "[parameters('DiskEncryption')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "KeyVaultName": {
                    "value": "[parameters('KeyVaultName')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ManagementVmName": {
                    "value": "[parameters('ManagementVmName')]"
                  },
                  "NamingStandard": {
                    "value": "[parameters('NamingStandard')]"
                  },
                  "ResourceGroups": {
                    "value": "[parameters('ResourceGroups')]"
                  },
                  "Subnet": {
                    "value": "[parameters('Subnet')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "VirtualNetwork": {
                    "value": "[parameters('VirtualNetwork')]"
                  },
                  "VirtualNetworkResourceGroup": {
                    "value": "[parameters('VirtualNetworkResourceGroup')]"
                  },
                  "VmPassword": {
                    "value": "[parameters('VmPassword')]"
                  },
                  "VmUsername": {
                    "value": "[parameters('VmUsername')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "817348492097930115"
                    }
                  },
                  "parameters": {
                    "DiskEncryption": {
                      "type": "bool"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "KeyVaultName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ManagementVmName": {
                      "type": "string"
                    },
                    "NamingStandard": {
                      "type": "string"
                    },
                    "ResourceGroups": {
                      "type": "array"
                    },
                    "Subnet": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "VirtualNetwork": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroup": {
                      "type": "string"
                    },
                    "VmPassword": {
                      "type": "securestring"
                    },
                    "VmUsername": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "DeploymentResourceGroup": "[parameters('ResourceGroups')[0]]",
                    "ManagementResourceGroup": "[parameters('ResourceGroups')[2]]",
                    "NicName": "[format('nic-{0}-mgt', parameters('NamingStandard'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2020-05-01",
                      "name": "[variables('NicName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": false,
                        "enableIPForwarding": false
                      }
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-11-01",
                      "name": "[parameters('ManagementVmName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "Standard_B2s"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "2019-Datacenter",
                            "version": "latest"
                          },
                          "osDisk": {
                            "deleteOption": "Delete",
                            "osType": "Windows",
                            "createOption": "FromImage",
                            "caching": "None",
                            "managedDisk": {
                              "storageAccountType": "Standard_LRS"
                            },
                            "name": "[format('disk-{0}-mgt', parameters('NamingStandard'))]"
                          },
                          "dataDisks": []
                        },
                        "osProfile": {
                          "computerName": "[parameters('ManagementVmName')]",
                          "adminUsername": "[parameters('VmUsername')]",
                          "adminPassword": "[parameters('VmPassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": true
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": false
                          }
                        },
                        "licenseType": "Windows_Server"
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-07-01",
                      "name": "[format('{0}/{1}', parameters('ManagementVmName'), 'JsonADDomainExtension')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "Name": "[parameters('DomainName')]",
                          "User": "[parameters('DomainJoinUserPrincipalName')]",
                          "Restart": "true",
                          "Options": "3"
                        },
                        "protectedSettings": {
                          "Password": "[parameters('DomainJoinPassword')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('ManagementVmName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('DiskEncryption')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2017-03-30",
                      "name": "[format('{0}/{1}', parameters('ManagementVmName'), 'AzureDiskEncryption')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "2.2",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "settings": {
                          "EncryptionOperation": "EnableEncryption",
                          "KeyVaultURL": "[if(parameters('DiskEncryption'), reference(resourceId(variables('ManagementResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName')), '2016-10-01', 'Full').properties.vaultUri, null())]",
                          "KeyVaultResourceId": "[resourceId(variables('ManagementResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]",
                          "KeyEncryptionKeyURL": "[if(parameters('DiskEncryption'), reference(resourceId(variables('DeploymentResourceGroup'), 'Microsoft.Resources/deploymentScripts', format('ds-{0}-bitlockerKek', parameters('NamingStandard'))), '2019-10-01-preview', 'Full').properties.outputs.text, null())]",
                          "KekVaultResourceId": "[resourceId(variables('ManagementResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]",
                          "KeyEncryptionAlgorithm": "RSA-OAEP",
                          "VolumeType": "All",
                          "ResizeOSDisk": false
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('ManagementVmName'), 'JsonADDomainExtension')]",
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('ManagementVmName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "condition": "[and(equals(parameters('StorageSolution'), 'AzureNetAppFiles'), not(contains(parameters('DomainServices'), 'None')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AzureNetAppFiles_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroups')[3]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                  },
                  "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                  },
                  "ActiveDirectoryConnection": {
                    "value": "[parameters('ActiveDirectoryConnection')]"
                  },
                  "DelegatedSubnetId": {
                    "value": "[parameters('DelegatedSubnetId')]"
                  },
                  "DnsServers": {
                    "value": "[parameters('DnsServers')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "FileShares": {
                    "value": "[parameters('FileShares')]"
                  },
                  "FslogixSolution": {
                    "value": "[parameters('FslogixSolution')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ManagementVmName": {
                    "value": "[parameters('ManagementVmName')]"
                  },
                  "NamingStandard": {
                    "value": "[parameters('NamingStandard')]"
                  },
                  "NetAppAccountName": {
                    "value": "[parameters('NetAppAccountName')]"
                  },
                  "NetAppCapacityPoolName": {
                    "value": "[parameters('NetAppCapacityPoolName')]"
                  },
                  "OuPath": {
                    "value": "[parameters('OuPath')]"
                  },
                  "ResourceGroups": {
                    "value": "[parameters('ResourceGroups')]"
                  },
                  "SecurityPrincipalNames": {
                    "value": "[parameters('SecurityPrincipalNames')]"
                  },
                  "SmbServerLocation": {
                    "value": "[parameters('SmbServerLocation')]"
                  },
                  "StorageSku": {
                    "value": "[parameters('StorageSku')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "UserAssignedIdentityResourceId": {
                    "value": "[parameters('ManagedIdentityResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "4917227902639426867"
                    }
                  },
                  "parameters": {
                    "_artifactsLocation": {
                      "type": "string"
                    },
                    "_artifactsLocationSasToken": {
                      "type": "securestring"
                    },
                    "ActiveDirectoryConnection": {
                      "type": "string"
                    },
                    "DelegatedSubnetId": {
                      "type": "string"
                    },
                    "DnsServers": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "FileShares": {
                      "type": "array"
                    },
                    "FslogixSolution": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ManagementVmName": {
                      "type": "string"
                    },
                    "NamingStandard": {
                      "type": "string"
                    },
                    "NetAppAccountName": {
                      "type": "string"
                    },
                    "NetAppCapacityPoolName": {
                      "type": "string"
                    },
                    "OuPath": {
                      "type": "string"
                    },
                    "ResourceGroups": {
                      "type": "array"
                    },
                    "SecurityPrincipalNames": {
                      "type": "array"
                    },
                    "SmbServerLocation": {
                      "type": "string"
                    },
                    "StorageSku": {
                      "type": "string"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "UserAssignedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.NetApp/netAppAccounts",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('NetAppAccountName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "activeDirectories": "[if(equals(parameters('ActiveDirectoryConnection'), 'false'), null(), createArray(createObject('aesEncryption', false(), 'domain', parameters('DomainName'), 'dns', parameters('DnsServers'), 'organizationalUnit', parameters('OuPath'), 'password', parameters('DomainJoinPassword'), 'smbServerName', format('anf-{0}', parameters('SmbServerLocation')), 'username', split(parameters('DomainJoinUserPrincipalName'), '@')[0])))]",
                        "encryption": {
                          "keySource": "Microsoft.NetApp"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "coolAccess": false,
                        "encryptionType": "Single",
                        "qosType": "Auto",
                        "serviceLevel": "[parameters('StorageSku')]",
                        "size": 4398046511104
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.NetApp/netAppAccounts', parameters('NetAppAccountName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "volumes",
                        "count": "[length(range(0, length(parameters('FileShares'))))]"
                      },
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[copyIndex()]])]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "avsDataStore": "Disabled",
                        "coolAccess": false,
                        "creationToken": "[parameters('FileShares')[range(0, length(parameters('FileShares')))[copyIndex()]]]",
                        "defaultGroupQuotaInKiBs": 0,
                        "defaultUserQuotaInKiBs": 0,
                        "encryptionKeySource": "Microsoft.NetApp",
                        "isDefaultQuotaEnabled": false,
                        "kerberosEnabled": false,
                        "ldapEnabled": false,
                        "networkFeatures": "Basic",
                        "protocolTypes": [
                          "CIFS"
                        ],
                        "securityStyle": "ntfs",
                        "serviceLevel": "[parameters('StorageSku')]",
                        "smbEncryption": true,
                        "snapshotDirectoryVisible": true,
                        "subnetId": "[parameters('DelegatedSubnetId')]",
                        "usageThreshold": 107374182400
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.NetApp/netAppAccounts/capacityPools', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('FslogixNtfsPermissions_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroups')[0]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "_artifactsLocation": {
                            "value": "[parameters('_artifactsLocation')]"
                          },
                          "_artifactsLocationSasToken": {
                            "value": "[parameters('_artifactsLocationSasToken')]"
                          },
                          "CommandToExecute": {
                            "value": "[format('powershell -ExecutionPolicy Unrestricted -File Set-NtfsPermissions.ps1 -DomainJoinPassword \"{0}\" -DomainJoinUserPrincipalName {1} -FslogixSolution {2} -SecurityPrincipalNames \"{3}\" -SmbServerLocation {4} -StorageSolution {5}', parameters('DomainJoinPassword'), parameters('DomainJoinUserPrincipalName'), parameters('FslogixSolution'), parameters('SecurityPrincipalNames'), parameters('SmbServerLocation'), parameters('StorageSolution'))]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "ManagementVmName": {
                            "value": "[parameters('ManagementVmName')]"
                          },
                          "NamingStandard": {
                            "value": "[parameters('NamingStandard')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          },
                          "UserAssignedIdentityResourceId": {
                            "value": "[parameters('UserAssignedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "14280348576657789691"
                            }
                          },
                          "parameters": {
                            "_artifactsLocation": {
                              "type": "string"
                            },
                            "_artifactsLocationSasToken": {
                              "type": "securestring"
                            },
                            "CommandToExecute": {
                              "type": "securestring"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "ManagementVmName": {
                              "type": "string"
                            },
                            "NamingStandard": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            },
                            "UserAssignedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2020-12-01",
                              "name": "[format('{0}/CustomScriptExtension', parameters('ManagementVmName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.10",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "fileUris": [
                                    "[format('{0}Set-NtfsPermissions.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]"
                                  ],
                                  "timestamp": "[parameters('Timestamp')]"
                                },
                                "protectedSettings": {
                                  "commandToExecute": "[parameters('CommandToExecute')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('DeploymentScript_FSLogixCleanUp_{0}', parameters('Timestamp'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "Arguments": {
                                    "value": "[format('-VirtualMachineName {0} -ResourceGroupName {1}', parameters('ManagementVmName'), resourceGroup().name)]"
                                  },
                                  "Location": {
                                    "value": "[parameters('Location')]"
                                  },
                                  "Name": {
                                    "value": "[format('ds-{0}-fslogixCleanUp', parameters('NamingStandard'))]"
                                  },
                                  "ScriptContainerSasToken": {
                                    "value": "[parameters('_artifactsLocationSasToken')]"
                                  },
                                  "ScriptContainerUri": {
                                    "value": "[parameters('_artifactsLocation')]"
                                  },
                                  "ScriptName": {
                                    "value": "Remove-AzureVirtualMachine.ps1"
                                  },
                                  "Timestamp": {
                                    "value": "[parameters('Timestamp')]"
                                  },
                                  "UserAssignedIdentityResourceId": {
                                    "value": "[parameters('UserAssignedIdentityResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.16.2.56959",
                                      "templateHash": "7158975045101659830"
                                    }
                                  },
                                  "parameters": {
                                    "Arguments": {
                                      "type": "string"
                                    },
                                    "Location": {
                                      "type": "string"
                                    },
                                    "Name": {
                                      "type": "string"
                                    },
                                    "ScriptContainerUri": {
                                      "type": "string"
                                    },
                                    "ScriptContainerSasToken": {
                                      "type": "securestring"
                                    },
                                    "ScriptName": {
                                      "type": "string"
                                    },
                                    "Timestamp": {
                                      "type": "string"
                                    },
                                    "UserAssignedIdentityResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deploymentScripts",
                                      "apiVersion": "2020-10-01",
                                      "name": "[parameters('Name')]",
                                      "identity": {
                                        "type": "UserAssigned",
                                        "userAssignedIdentities": {
                                          "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                                        }
                                      },
                                      "location": "[parameters('Location')]",
                                      "kind": "AzurePowerShell",
                                      "tags": {},
                                      "properties": {
                                        "azPowerShellVersion": "9.4",
                                        "cleanupPreference": "Always",
                                        "primaryScriptUri": "[format('{0}{1}?{2}', parameters('ScriptContainerUri'), parameters('ScriptName'), parameters('ScriptContainerSasToken'))]",
                                        "arguments": "[parameters('Arguments')]",
                                        "forceUpdateTag": "[parameters('Timestamp')]",
                                        "retentionInterval": "PT2H",
                                        "timeout": "PT30M"
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/CustomScriptExtension', parameters('ManagementVmName')), '/')[0], split(format('{0}/CustomScriptExtension', parameters('ManagementVmName')), '/')[1])]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "volumes"
                      ]
                    }
                  ],
                  "outputs": {
                    "fileShares": {
                      "type": "array",
                      "value": "[if(contains(parameters('FslogixSolution'), 'Office'), createArray(reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[0]]), '2021-06-01').mountTargets[0].smbServerFqdn, reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[1]]), '2021-06-01').mountTargets[0].smbServerFqdn), createArray(reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[0]]), '2021-06-01').mountTargets[0].smbServerFqdn))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('ManagementVirtualMachine_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "condition": "[and(equals(parameters('StorageSolution'), 'AzureStorageAccount'), not(contains(parameters('DomainServices'), 'None')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AzureFiles_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroups')[3]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                  },
                  "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                  },
                  "DnsServerForwarderIPAddresses": {
                    "value": "[parameters('DnsServerForwarderIPAddresses')]"
                  },
                  "DnsServerSize": {
                    "value": "[parameters('DnsServerSize')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "DomainServices": {
                    "value": "[parameters('DomainServices')]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "FileShares": {
                    "value": "[parameters('FileShares')]"
                  },
                  "FslogixShareSizeInGB": {
                    "value": "[parameters('FslogixShareSizeInGB')]"
                  },
                  "FslogixSolution": {
                    "value": "[parameters('FslogixSolution')]"
                  },
                  "FslogixStorage": {
                    "value": "[parameters('FslogixStorage')]"
                  },
                  "HybridUseBenefit": {
                    "value": "[parameters('HybridUseBenefit')]"
                  },
                  "Identifier": {
                    "value": "[parameters('Identifier')]"
                  },
                  "KerberosEncryption": {
                    "value": "[parameters('KerberosEncryption')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "LocationShortName": {
                    "value": "[parameters('LocationShortName')]"
                  },
                  "ManagedIdentityResourceId": {
                    "value": "[parameters('ManagedIdentityResourceId')]"
                  },
                  "ManagementVmName": {
                    "value": "[parameters('ManagementVmName')]"
                  },
                  "NamingStandard": {
                    "value": "[parameters('NamingStandard')]"
                  },
                  "Netbios": {
                    "value": "[parameters('Netbios')]"
                  },
                  "OuPath": {
                    "value": "[parameters('OuPath')]"
                  },
                  "PrivateDnsZoneName": {
                    "value": "[parameters('PrivateDnsZoneName')]"
                  },
                  "PrivateEndpoint": {
                    "value": "[parameters('PrivateEndpoint')]"
                  },
                  "ResourceGroups": {
                    "value": "[parameters('ResourceGroups')]"
                  },
                  "RoleDefinitionIds": {
                    "value": "[parameters('RoleDefinitionIds')]"
                  },
                  "SecurityPrincipalIds": {
                    "value": "[parameters('SecurityPrincipalIds')]"
                  },
                  "SecurityPrincipalNames": {
                    "value": "[parameters('SecurityPrincipalNames')]"
                  },
                  "StampIndexFull": {
                    "value": "[parameters('StampIndexFull')]"
                  },
                  "StorageAccountPrefix": {
                    "value": "[parameters('StorageAccountPrefix')]"
                  },
                  "StorageCount": {
                    "value": "[parameters('StorageCount')]"
                  },
                  "StorageIndex": {
                    "value": "[parameters('StorageIndex')]"
                  },
                  "StorageSku": {
                    "value": "[parameters('StorageSku')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "StorageSuffix": {
                    "value": "[parameters('StorageSuffix')]"
                  },
                  "Subnet": {
                    "value": "[parameters('Subnet')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "VirtualNetwork": {
                    "value": "[parameters('VirtualNetwork')]"
                  },
                  "VirtualNetworkResourceGroup": {
                    "value": "[parameters('VirtualNetworkResourceGroup')]"
                  },
                  "VmPassword": {
                    "value": "[parameters('VmPassword')]"
                  },
                  "VmUsername": {
                    "value": "[parameters('VmUsername')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "14886467892395729579"
                    }
                  },
                  "parameters": {
                    "_artifactsLocation": {
                      "type": "string"
                    },
                    "_artifactsLocationSasToken": {
                      "type": "securestring"
                    },
                    "DnsServerForwarderIPAddresses": {
                      "type": "array"
                    },
                    "DnsServerSize": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "DomainServices": {
                      "type": "string"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "FileShares": {
                      "type": "array"
                    },
                    "FslogixShareSizeInGB": {
                      "type": "int"
                    },
                    "FslogixSolution": {
                      "type": "string"
                    },
                    "FslogixStorage": {
                      "type": "string"
                    },
                    "HybridUseBenefit": {
                      "type": "bool"
                    },
                    "Identifier": {
                      "type": "string"
                    },
                    "KerberosEncryption": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LocationShortName": {
                      "type": "string"
                    },
                    "ManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "ManagementVmName": {
                      "type": "string"
                    },
                    "NamingStandard": {
                      "type": "string"
                    },
                    "Netbios": {
                      "type": "string"
                    },
                    "OuPath": {
                      "type": "string"
                    },
                    "PrivateDnsZoneName": {
                      "type": "string"
                    },
                    "PrivateEndpoint": {
                      "type": "bool"
                    },
                    "ResourceGroups": {
                      "type": "array"
                    },
                    "RoleDefinitionIds": {
                      "type": "object"
                    },
                    "SecurityPrincipalIds": {
                      "type": "array"
                    },
                    "SecurityPrincipalNames": {
                      "type": "array"
                    },
                    "StampIndexFull": {
                      "type": "string"
                    },
                    "StorageAccountPrefix": {
                      "type": "string"
                    },
                    "StorageCount": {
                      "type": "int"
                    },
                    "StorageIndex": {
                      "type": "int"
                    },
                    "StorageSku": {
                      "type": "string"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "StorageSuffix": {
                      "type": "string"
                    },
                    "Subnet": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "VirtualNetwork": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroup": {
                      "type": "string"
                    },
                    "VmPassword": {
                      "type": "securestring"
                    },
                    "VmUsername": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "DeploymentResourceGroup": "[parameters('ResourceGroups')[0]]",
                    "Endpoint": "[split(parameters('FslogixStorage'), ' ')[2]]",
                    "ResourceGroupName": "[resourceGroup().name]",
                    "SmbMultiChannel": {
                      "multichannel": {
                        "enabled": true
                      }
                    },
                    "SmbSettings": {
                      "versions": "SMB3.0;SMB3.1.1;",
                      "authenticationMethods": "NTLMv2;Kerberos;",
                      "kerberosTicketEncryption": "[if(equals(parameters('KerberosEncryption'), 'RC4'), 'RC4-HMAC;', 'AES-256;')]",
                      "channelEncryption": "AES-128-CCM;AES-128-GCM;AES-256-GCM;"
                    },
                    "SubnetId": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]",
                    "VirtualNetworkRules": {
                      "PrivateEndpoint": [],
                      "PublicEndpoint": [],
                      "ServiceEndpoint": [
                        {
                          "id": "[variables('SubnetId')]",
                          "action": "Allow"
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "storageAccounts",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "[if(equals(parameters('StorageSku'), 'Standard'), 'Standard_LRS', 'Premium_LRS')]"
                      },
                      "kind": "[if(equals(parameters('StorageSku'), 'Standard'), 'StorageV2', 'FileStorage')]",
                      "properties": {
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "virtualNetworkRules": "[variables('VirtualNetworkRules')[variables('Endpoint')]]",
                          "ipRules": [],
                          "defaultAction": "[if(equals(variables('Endpoint'), 'PublicEndpoint'), 'Allow', 'Deny')]"
                        },
                        "supportsHttpsTrafficOnly": true,
                        "encryption": {
                          "services": {
                            "file": {
                              "keyType": "Account",
                              "enabled": true
                            }
                          },
                          "keySource": "Microsoft.Storage"
                        },
                        "azureFilesIdentityBasedAuthentication": {
                          "directoryServiceOptions": "[if(equals(parameters('DomainServices'), 'AzureActiveDirectory'), 'AADDS', 'None')]"
                        },
                        "largeFileSharesState": "[if(equals(parameters('StorageSku'), 'Standard'), 'Enabled', null())]"
                      }
                    },
                    {
                      "copy": {
                        "name": "roleAssignment_Vm",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                      "name": "[guid(format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), parameters('RoleDefinitionIds').contributor, parameters('ManagementVmName'))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').contributor)]",
                        "principalId": "[reference(resourceId(variables('DeploymentResourceGroup'), 'Microsoft.Compute/virtualMachines', parameters('ManagementVmName')), '2020-12-01', 'Full').identity.principalId]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "roleAssignment_Users",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                      "name": "[guid(parameters('SecurityPrincipalIds')[range(0, parameters('StorageCount'))[copyIndex()]], parameters('RoleDefinitionIds').storageFileDataSMBShareContributor, format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').storageFileDataSMBShareContributor)]",
                        "principalId": "[parameters('SecurityPrincipalIds')[range(0, parameters('StorageCount'))[copyIndex()]]]"
                      },
                      "dependsOn": [
                        "roleAssignment_Vm",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "fileServices",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), 'default')]",
                      "properties": {
                        "protocolSettings": {
                          "smb": "[if(equals(parameters('StorageSku'), 'Standard'), variables('SmbSettings'), union(variables('SmbSettings'), variables('SmbMultiChannel')))]"
                        },
                        "shareDeleteRetentionPolicy": {
                          "enabled": false
                        }
                      },
                      "dependsOn": [
                        "roleAssignment_Vm",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "shares",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('FileShares_{0}_{1}', range(0, parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroups')[3]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "FileShares": {
                            "value": "[parameters('FileShares')]"
                          },
                          "FslogixShareSizeInGB": {
                            "value": "[parameters('FslogixShareSizeInGB')]"
                          },
                          "StorageAccountName": {
                            "value": "[format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))]"
                          },
                          "StorageSku": {
                            "value": "[parameters('StorageSku')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "4112134168902288181"
                            }
                          },
                          "parameters": {
                            "FileShares": {
                              "type": "array"
                            },
                            "FslogixShareSizeInGB": {
                              "type": "int"
                            },
                            "StorageAccountName": {
                              "type": "string"
                            },
                            "StorageSku": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "shares",
                                "count": "[length(range(0, length(parameters('FileShares'))))]"
                              },
                              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                              "apiVersion": "2021-02-01",
                              "name": "[format('{0}/default/{1}', parameters('StorageAccountName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[copyIndex()]])]",
                              "properties": {
                                "accessTier": "[if(equals(parameters('StorageSku'), 'Premium'), 'Premium', 'TransactionOptimized')]",
                                "shareQuota": "[parameters('FslogixShareSizeInGB')]",
                                "enabledProtocols": "SMB"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "roleAssignment_Users",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "privateEndpoint",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "condition": "[parameters('PrivateEndpoint')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('PrivateEndpoints_{0}_{1}', range(0, parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
                      "resourceGroup": "[variables('ResourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "PrivateDnsZoneName": {
                            "value": "[parameters('PrivateDnsZoneName')]"
                          },
                          "StorageAccountId": {
                            "value": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                          },
                          "StorageAccountName": {
                            "value": "[format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))]"
                          },
                          "Subnet": {
                            "value": "[parameters('Subnet')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "VirtualNetwork": {
                            "value": "[parameters('VirtualNetwork')]"
                          },
                          "VirtualNetworkResourceGroup": {
                            "value": "[parameters('VirtualNetworkResourceGroup')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "5857421079554590352"
                            }
                          },
                          "parameters": {
                            "Location": {
                              "type": "string"
                            },
                            "PrivateDnsZoneName": {
                              "type": "string"
                            },
                            "StorageAccountId": {
                              "type": "string"
                            },
                            "StorageAccountName": {
                              "type": "string"
                            },
                            "Subnet": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "VirtualNetwork": {
                              "type": "string"
                            },
                            "VirtualNetworkResourceGroup": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "SubnetId": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2018-09-01",
                              "name": "[parameters('PrivateDnsZoneName')]",
                              "location": "global",
                              "tags": "[parameters('Tags')]",
                              "properties": {}
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2020-05-01",
                              "name": "[format('pe-{0}', parameters('StorageAccountName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "subnet": {
                                  "id": "[variables('SubnetId')]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[format('pe-{0}_{1}', parameters('StorageAccountName'), guid(parameters('StorageAccountName')))]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('StorageAccountId')]",
                                      "groupIds": [
                                        "file"
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2021-08-01",
                              "name": "[format('{0}/{1}', format('pe-{0}', parameters('StorageAccountName')), parameters('StorageAccountName'))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateDnsZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateDnsZoneName'))]",
                                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', parameters('StorageAccountName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2018-09-01",
                              "name": "[format('{0}/{1}', parameters('PrivateDnsZoneName'), format('link-{0}', parameters('VirtualNetwork')))]",
                              "location": "global",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetwork'))]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateDnsZoneName'))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('PrivateEndpoint')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('DnsForwarder_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[variables('ResourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "_artifactsLocation": {
                            "value": "[parameters('_artifactsLocation')]"
                          },
                          "_artifactsLocationSasToken": {
                            "value": "[parameters('_artifactsLocationSasToken')]"
                          },
                          "DnsServerForwarderIPAddresses": {
                            "value": "[parameters('DnsServerForwarderIPAddresses')]"
                          },
                          "DnsServerSize": {
                            "value": "[parameters('DnsServerSize')]"
                          },
                          "DomainJoinPassword": {
                            "value": "[parameters('DomainJoinPassword')]"
                          },
                          "DomainJoinUserPrincipalName": {
                            "value": "[parameters('DomainJoinUserPrincipalName')]"
                          },
                          "DomainName": {
                            "value": "[parameters('DomainName')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "HybridUseBenefit": {
                            "value": "[parameters('HybridUseBenefit')]"
                          },
                          "Identifier": {
                            "value": "[parameters('Identifier')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "LocationShortName": {
                            "value": "[parameters('LocationShortName')]"
                          },
                          "ManagedIdentityResourceId": {
                            "value": "[parameters('ManagedIdentityResourceId')]"
                          },
                          "NamingStandard": {
                            "value": "[parameters('NamingStandard')]"
                          },
                          "StampIndexFull": {
                            "value": "[parameters('StampIndexFull')]"
                          },
                          "StorageSuffix": {
                            "value": "[parameters('StorageSuffix')]"
                          },
                          "Subnet": {
                            "value": "[parameters('Subnet')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          },
                          "VirtualNetwork": {
                            "value": "[parameters('VirtualNetwork')]"
                          },
                          "VirtualNetworkResourceGroup": {
                            "value": "[parameters('VirtualNetworkResourceGroup')]"
                          },
                          "VmPassword": {
                            "value": "[parameters('VmPassword')]"
                          },
                          "VmUsername": {
                            "value": "[parameters('VmUsername')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "15955603054722864770"
                            }
                          },
                          "parameters": {
                            "_artifactsLocation": {
                              "type": "string"
                            },
                            "_artifactsLocationSasToken": {
                              "type": "securestring"
                            },
                            "DnsServerForwarderIPAddresses": {
                              "type": "array"
                            },
                            "DnsServerSize": {
                              "type": "string"
                            },
                            "DomainJoinPassword": {
                              "type": "securestring"
                            },
                            "DomainJoinUserPrincipalName": {
                              "type": "string"
                            },
                            "DomainName": {
                              "type": "string"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "HybridUseBenefit": {
                              "type": "bool"
                            },
                            "Identifier": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "LocationShortName": {
                              "type": "string"
                            },
                            "ManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "NamingStandard": {
                              "type": "string"
                            },
                            "StampIndexFull": {
                              "type": "string"
                            },
                            "StorageSuffix": {
                              "type": "string"
                            },
                            "Subnet": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            },
                            "VirtualNetwork": {
                              "type": "string"
                            },
                            "VirtualNetworkResourceGroup": {
                              "type": "string"
                            },
                            "VmPassword": {
                              "type": "securestring"
                            },
                            "VmUsername": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "SubnetId": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]",
                            "VmName": "[format('vm{0}{1}{2}{3}dns', parameters('Identifier'), parameters('Environment'), parameters('LocationShortName'), parameters('StampIndexFull'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "[format('ds-{0}-getDns', parameters('NamingStandard'))]",
                              "location": "[parameters('Location')]",
                              "kind": "AzurePowerShell",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('ManagedIdentityResourceId'))]": {}
                                }
                              },
                              "properties": {
                                "forceUpdateTag": "[parameters('Timestamp')]",
                                "azPowerShellVersion": "5.4",
                                "arguments": "[format('-Subnet {0} -VirtualNetwork {1} -VirtualNetworkResourceGroup {2}', parameters('Subnet'), parameters('VirtualNetwork'), parameters('VirtualNetworkResourceGroup'))]",
                                "primaryScriptUri": "[format('{0}Get-AzureVirtualNetworkDns.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                                "timeout": "PT4H",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2020-05-01",
                              "name": "[format('nic-{0}-dns', parameters('NamingStandard'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[variables('SubnetId')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4"
                                    }
                                  }
                                ],
                                "enableAcceleratedNetworking": true,
                                "enableIPForwarding": false
                              }
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2019-07-01",
                              "name": "[variables('VmName')]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "hardwareProfile": {
                                  "vmSize": "[parameters('DnsServerSize')]"
                                },
                                "storageProfile": {
                                  "imageReference": {
                                    "publisher": "MicrosoftWindowsServer",
                                    "offer": "WindowsServer",
                                    "sku": "2019-Datacenter-Core",
                                    "version": "latest"
                                  },
                                  "osDisk": {
                                    "osType": "Windows",
                                    "name": "[format('disk-{0}-dns', parameters('NamingStandard'))]",
                                    "createOption": "FromImage",
                                    "caching": "ReadWrite",
                                    "managedDisk": {
                                      "storageAccountType": "Premium_LRS"
                                    }
                                  }
                                },
                                "osProfile": {
                                  "computerName": "[variables('VmName')]",
                                  "adminUsername": "[parameters('VmUsername')]",
                                  "adminPassword": "[parameters('VmPassword')]",
                                  "windowsConfiguration": {
                                    "provisionVMAgent": true,
                                    "enableAutomaticUpdates": true
                                  },
                                  "secrets": [],
                                  "allowExtensionOperations": true
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-dns', parameters('NamingStandard')))]"
                                    }
                                  ]
                                },
                                "licenseType": "[if(parameters('HybridUseBenefit'), 'Windows_Server', json('null'))]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-dns', parameters('NamingStandard')))]",
                                "[resourceId('Microsoft.Resources/deployments', 'staticIpAddress')]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-07-01",
                              "name": "[format('{0}/JsonADDomainExtension', variables('VmName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "forceUpdateTag": "[parameters('Timestamp')]",
                                "publisher": "Microsoft.Compute",
                                "type": "JsonADDomainExtension",
                                "typeHandlerVersion": "1.3",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "Name": "[parameters('DomainName')]",
                                  "User": "[parameters('DomainJoinUserPrincipalName')]",
                                  "Restart": "true",
                                  "Options": "3"
                                },
                                "protectedSettings": {
                                  "Password": "[parameters('DomainJoinPassword')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('VmName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-07-01",
                              "name": "[format('{0}/DSC', variables('VmName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "forceUpdateTag": "[parameters('Timestamp')]",
                                "autoUpgradeMinorVersion": true,
                                "publisher": "Microsoft.Powershell",
                                "type": "DSC",
                                "typeHandlerVersion": "2.77",
                                "settings": {
                                  "modulesUrl": "[format('{0}dnsForwarder.zip{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                                  "configurationFunction": "dnsForwarder.ps1\\dnsForwarder",
                                  "configurationArguments": {
                                    "ActionAfterReboot": "ContinueConfiguration",
                                    "ConfigurationMode": "ApplyandAutoCorrect",
                                    "RebootNodeIfNeeded": true
                                  },
                                  "properties": [
                                    {
                                      "Name": "ForwarderIPAddresses",
                                      "Value": "[parameters('DnsServerForwarderIPAddresses')]",
                                      "TypeName": "System.Array"
                                    },
                                    {
                                      "Name": "StorageSuffix",
                                      "Value": "[parameters('StorageSuffix')]",
                                      "TypeName": "System.String"
                                    }
                                  ]
                                },
                                "protectedSettings": {}
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/JsonADDomainExtension', variables('VmName')), '/')[0], split(format('{0}/JsonADDomainExtension', variables('VmName')), '/')[1])]",
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('VmName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "[format('ds-{0}-setDns', parameters('NamingStandard'))]",
                              "location": "[parameters('Location')]",
                              "kind": "AzurePowerShell",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('ManagedIdentityResourceId'))]": {}
                                }
                              },
                              "properties": {
                                "forceUpdateTag": "[parameters('Timestamp')]",
                                "azPowerShellVersion": "5.4",
                                "arguments": "[format('-Dns {0} -VirtualNetwork {1} -VirtualNetworkResourceGroup {2}', reference(resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-dns', parameters('NamingStandard'))), '2020-05-01').ipConfigurations[0].properties.privateIPAddress, parameters('VirtualNetwork'), parameters('VirtualNetworkResourceGroup'))]",
                                "primaryScriptUri": "[format('{0}Set-AzureVirtualNetworkDns.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                                "timeout": "PT4H",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/DSC', variables('VmName')), '/')[0], split(format('{0}/DSC', variables('VmName')), '/')[1])]",
                                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-dns', parameters('NamingStandard')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "staticIpAddress",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "IpAddress": {
                                    "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-dns', parameters('NamingStandard'))), '2020-05-01').ipConfigurations[0].properties.privateIPAddress]"
                                  },
                                  "Location": {
                                    "value": "[parameters('Location')]"
                                  },
                                  "NicName": {
                                    "value": "[format('nic-{0}-dns', parameters('NamingStandard'))]"
                                  },
                                  "SubnetId": {
                                    "value": "[variables('SubnetId')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.16.2.56959",
                                      "templateHash": "17283689106698295743"
                                    }
                                  },
                                  "parameters": {
                                    "IpAddress": {
                                      "type": "string"
                                    },
                                    "Location": {
                                      "type": "string"
                                    },
                                    "NicName": {
                                      "type": "string"
                                    },
                                    "SubnetId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/networkInterfaces",
                                      "apiVersion": "2021-08-01",
                                      "name": "[parameters('NicName')]",
                                      "location": "[parameters('Location')]",
                                      "tags": "[parameters('Tags')]",
                                      "properties": {
                                        "ipConfigurations": [
                                          {
                                            "name": "ipconfig1",
                                            "properties": {
                                              "privateIPAddress": "[parameters('IpAddress')]",
                                              "privateIPAllocationMethod": "Static",
                                              "subnet": {
                                                "id": "[parameters('SubnetId')]"
                                              },
                                              "primary": true,
                                              "privateIPAddressVersion": "IPv4"
                                            }
                                          }
                                        ],
                                        "enableAcceleratedNetworking": true,
                                        "enableIPForwarding": false
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-dns', parameters('NamingStandard')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "condition": "[not(contains(parameters('DomainServices'), 'None'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('FslogixNtfsPermissions_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroups')[0]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "_artifactsLocation": {
                            "value": "[parameters('_artifactsLocation')]"
                          },
                          "_artifactsLocationSasToken": {
                            "value": "[parameters('_artifactsLocationSasToken')]"
                          },
                          "CommandToExecute": {
                            "value": "[format('powershell -ExecutionPolicy Unrestricted -File Set-NtfsPermissions.ps1 -DomainJoinPassword \"{0}\" -DomainJoinUserPrincipalName {1} -DomainServices {2} -Environment {3} -FslogixSolution {4} -KerberosEncryptionType {5} -Netbios {6} -OuPath \"{7}\" -SecurityPrincipalNames \"{8}\" -StorageAccountPrefix {9} -StorageAccountResourceGroupName {10} -StorageCount {11} -StorageIndex {12} -StorageSolution {13} -StorageSuffix {14} -SubscriptionId {15} -TenantId {16}', parameters('DomainJoinPassword'), parameters('DomainJoinUserPrincipalName'), parameters('DomainServices'), environment().name, parameters('FslogixSolution'), parameters('KerberosEncryption'), parameters('Netbios'), parameters('OuPath'), parameters('SecurityPrincipalNames'), parameters('StorageAccountPrefix'), parameters('ResourceGroups')[3], parameters('StorageCount'), parameters('StorageIndex'), parameters('StorageSolution'), environment().suffixes.storage, subscription().subscriptionId, subscription().tenantId)]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "ManagementVmName": {
                            "value": "[parameters('ManagementVmName')]"
                          },
                          "NamingStandard": {
                            "value": "[parameters('NamingStandard')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          },
                          "UserAssignedIdentityResourceId": {
                            "value": "[parameters('ManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "14280348576657789691"
                            }
                          },
                          "parameters": {
                            "_artifactsLocation": {
                              "type": "string"
                            },
                            "_artifactsLocationSasToken": {
                              "type": "securestring"
                            },
                            "CommandToExecute": {
                              "type": "securestring"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "ManagementVmName": {
                              "type": "string"
                            },
                            "NamingStandard": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            },
                            "UserAssignedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2020-12-01",
                              "name": "[format('{0}/CustomScriptExtension', parameters('ManagementVmName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.10",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "fileUris": [
                                    "[format('{0}Set-NtfsPermissions.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]"
                                  ],
                                  "timestamp": "[parameters('Timestamp')]"
                                },
                                "protectedSettings": {
                                  "commandToExecute": "[parameters('CommandToExecute')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('DeploymentScript_FSLogixCleanUp_{0}', parameters('Timestamp'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "Arguments": {
                                    "value": "[format('-VirtualMachineName {0} -ResourceGroupName {1}', parameters('ManagementVmName'), resourceGroup().name)]"
                                  },
                                  "Location": {
                                    "value": "[parameters('Location')]"
                                  },
                                  "Name": {
                                    "value": "[format('ds-{0}-fslogixCleanUp', parameters('NamingStandard'))]"
                                  },
                                  "ScriptContainerSasToken": {
                                    "value": "[parameters('_artifactsLocationSasToken')]"
                                  },
                                  "ScriptContainerUri": {
                                    "value": "[parameters('_artifactsLocation')]"
                                  },
                                  "ScriptName": {
                                    "value": "Remove-AzureVirtualMachine.ps1"
                                  },
                                  "Timestamp": {
                                    "value": "[parameters('Timestamp')]"
                                  },
                                  "UserAssignedIdentityResourceId": {
                                    "value": "[parameters('UserAssignedIdentityResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.16.2.56959",
                                      "templateHash": "7158975045101659830"
                                    }
                                  },
                                  "parameters": {
                                    "Arguments": {
                                      "type": "string"
                                    },
                                    "Location": {
                                      "type": "string"
                                    },
                                    "Name": {
                                      "type": "string"
                                    },
                                    "ScriptContainerUri": {
                                      "type": "string"
                                    },
                                    "ScriptContainerSasToken": {
                                      "type": "securestring"
                                    },
                                    "ScriptName": {
                                      "type": "string"
                                    },
                                    "Timestamp": {
                                      "type": "string"
                                    },
                                    "UserAssignedIdentityResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deploymentScripts",
                                      "apiVersion": "2020-10-01",
                                      "name": "[parameters('Name')]",
                                      "identity": {
                                        "type": "UserAssigned",
                                        "userAssignedIdentities": {
                                          "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                                        }
                                      },
                                      "location": "[parameters('Location')]",
                                      "kind": "AzurePowerShell",
                                      "tags": {},
                                      "properties": {
                                        "azPowerShellVersion": "9.4",
                                        "cleanupPreference": "Always",
                                        "primaryScriptUri": "[format('{0}{1}?{2}', parameters('ScriptContainerUri'), parameters('ScriptName'), parameters('ScriptContainerSasToken'))]",
                                        "arguments": "[parameters('Arguments')]",
                                        "forceUpdateTag": "[parameters('Timestamp')]",
                                        "retentionInterval": "PT2H",
                                        "timeout": "PT30M"
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/CustomScriptExtension', parameters('ManagementVmName')), '/')[0], split(format('{0}/CustomScriptExtension', parameters('ManagementVmName')), '/')[1])]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupName')), 'Microsoft.Resources/deployments', format('DnsForwarder_{0}', parameters('Timestamp')))]",
                        "privateEndpoint",
                        "shares"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('ManagementVirtualMachine_{0}', parameters('Timestamp')))]"
              ]
            }
          ],
          "outputs": {
            "netAppShares": {
              "type": "array",
              "value": "[if(equals(parameters('StorageSolution'), 'AzureNetAppFiles'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroups')[3]), 'Microsoft.Resources/deployments', format('AzureNetAppFiles_{0}', parameters('Timestamp'))), '2022-09-01').outputs.fileShares.value, createArray('None'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('BitLocker_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('STIG_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Sentinel_{0}', parameters('Timestamp'))]",
      "subscriptionId": "[parameters('SentinelLogAnalyticsWorkspaceSubscriptionId')]",
      "resourceGroup": "[variables('SentinelResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Sentinel": {
            "value": "[variables('Sentinel')]"
          },
          "SentinelLogAnalyticsWorkspaceName": {
            "value": "[parameters('SentinelLogAnalyticsWorkspaceName')]"
          },
          "SentinelLogAnalyticsWorkspaceResourceGroupName": {
            "value": "[parameters('SentinelLogAnalyticsWorkspaceResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "6575993801646639334"
            }
          },
          "parameters": {
            "Sentinel": {
              "type": "bool"
            },
            "SentinelLogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "SentinelLogAnalyticsWorkspaceResourceGroupName": {
              "type": "string"
            }
          },
          "resources": [],
          "outputs": {
            "sentinelWorkspaceId": {
              "type": "string",
              "value": "[if(parameters('Sentinel'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('SentinelLogAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', parameters('SentinelLogAnalyticsWorkspaceName')), '2021-06-01').customerId, 'NotApplicable')]"
            },
            "sentinelWorkspaceResourceId": {
              "type": "string",
              "value": "[if(parameters('Sentinel'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('SentinelLogAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', parameters('SentinelLogAnalyticsWorkspaceName')), 'NotApplicable')]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroups"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('SessionHosts_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroups')[1]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "AcceleratedNetworking": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.acceleratedNetworking.value]"
          },
          "AutomationAccountName": {
            "value": "[variables('AutomationAccountName')]"
          },
          "Availability": {
            "value": "[parameters('Availability')]"
          },
          "AvailabilitySetCount": {
            "value": "[variables('AvailabilitySetCount')]"
          },
          "AvailabilitySetPrefix": {
            "value": "[variables('AvailabilitySetPrefix')]"
          },
          "AvailabilitySetIndex": {
            "value": "[variables('BeginAvSetRange')]"
          },
          "ConfigurationName": {
            "value": "[variables('ConfigurationName')]"
          },
          "DisaStigCompliance": {
            "value": "[parameters('DisaStigCompliance')]"
          },
          "DiskEncryption": {
            "value": "[parameters('DiskEncryption')]"
          },
          "DiskName": {
            "value": "[variables('DiskName')]"
          },
          "DiskSku": {
            "value": "[parameters('DiskSku')]"
          },
          "DivisionRemainderValue": {
            "value": "[variables('DivisionRemainderValue')]"
          },
          "DomainJoinPassword": {
            "value": "[parameters('DomainJoinPassword')]"
          },
          "DomainJoinUserPrincipalName": {
            "value": "[parameters('DomainJoinUserPrincipalName')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "DomainServices": {
            "value": "[parameters('DomainServices')]"
          },
          "DrainMode": {
            "value": "[parameters('DrainMode')]"
          },
          "EphemeralOsDisk": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ephemeralOsDisk.value]"
          },
          "Fslogix": {
            "value": "[variables('Fslogix')]"
          },
          "FslogixSolution": {
            "value": "[parameters('FslogixSolution')]"
          },
          "HostPoolName": {
            "value": "[variables('HostPoolName')]"
          },
          "HostPoolType": {
            "value": "[parameters('HostPoolType')]"
          },
          "ImageOffer": {
            "value": "[parameters('ImageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('ImagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "ImageVersion": {
            "value": "[parameters('ImageVersion')]"
          },
          "KeyVaultName": {
            "value": "[variables('KeyVaultName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceName": {
            "value": "[variables('LogAnalyticsWorkspaceName')]"
          },
          "ManagedIdentityResourceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.resourceIdentifier.value]"
          },
          "MaxResourcesPerTemplateDeployment": {
            "value": "[variables('MaxResourcesPerTemplateDeployment')]"
          },
          "Monitoring": {
            "value": "[parameters('Monitoring')]"
          },
          "NamingStandard": {
            "value": "[variables('NamingStandard')]"
          },
          "NetAppFileShares": "[if(variables('Fslogix'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('FSLogix_{0}', parameters('Timestamp'))), '2022-09-01').outputs.netAppShares.value), createObject('value', createArray('None')))]",
          "NetworkSecurityGroupName": {
            "value": "[variables('NetworkSecurityGroupName')]"
          },
          "OuPath": {
            "value": "[parameters('OuPath')]"
          },
          "PooledHostPool": {
            "value": "[variables('PooledHostPool')]"
          },
          "RdpShortPath": {
            "value": "[parameters('RdpShortPath')]"
          },
          "ResourceGroupHosts": {
            "value": "[variables('ResourceGroupHosts')]"
          },
          "ResourceGroupManagement": {
            "value": "[variables('ResourceGroupManagement')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "ScreenCaptureProtection": {
            "value": "[parameters('ScreenCaptureProtection')]"
          },
          "SecurityPrincipalObjectIds": {
            "value": "[parameters('SecurityPrincipalObjectIds')]"
          },
          "Sentinel": {
            "value": "[variables('Sentinel')]"
          },
          "SentinelWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SentinelLogAnalyticsWorkspaceSubscriptionId'), variables('SentinelResourceGroup')), 'Microsoft.Resources/deployments', format('Sentinel_{0}', parameters('Timestamp'))), '2022-09-01').outputs.sentinelWorkspaceId.value]"
          },
          "SentinelWorkspaceResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SentinelLogAnalyticsWorkspaceSubscriptionId'), variables('SentinelResourceGroup')), 'Microsoft.Resources/deployments', format('Sentinel_{0}', parameters('Timestamp'))), '2022-09-01').outputs.sentinelWorkspaceResourceId.value]"
          },
          "SessionHostBatchCount": {
            "value": "[variables('SessionHostBatchCount')]"
          },
          "SessionHostIndex": {
            "value": "[parameters('SessionHostIndex')]"
          },
          "StorageAccountPrefix": {
            "value": "[variables('StorageAccountPrefix')]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageIndex": {
            "value": "[parameters('StorageIndex')]"
          },
          "StorageSolution": {
            "value": "[variables('StorageSolution')]"
          },
          "StorageSuffix": {
            "value": "[variables('StorageSuffix')]"
          },
          "Subnet": {
            "value": "[parameters('SubnetName')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "TrustedLaunch": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp'))), '2022-09-01').outputs.trustedLaunch.value]"
          },
          "VirtualNetwork": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "VirtualNetworkResourceGroup": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          },
          "VmName": {
            "value": "[variables('VmName')]"
          },
          "VmPassword": {
            "value": "[parameters('VmPassword')]"
          },
          "VmSize": {
            "value": "[parameters('VmSize')]"
          },
          "VmUsername": {
            "value": "[parameters('VmUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "14795850312544391984"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "AcceleratedNetworking": {
              "type": "string"
            },
            "AvailabilitySetCount": {
              "type": "int"
            },
            "AvailabilitySetIndex": {
              "type": "int"
            },
            "AvailabilitySetPrefix": {
              "type": "string"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "Availability": {
              "type": "string"
            },
            "ConfigurationName": {
              "type": "string"
            },
            "DisaStigCompliance": {
              "type": "bool"
            },
            "DiskEncryption": {
              "type": "bool"
            },
            "DiskName": {
              "type": "string"
            },
            "DiskSku": {
              "type": "string"
            },
            "DivisionRemainderValue": {
              "type": "int"
            },
            "DomainJoinPassword": {
              "type": "securestring"
            },
            "DomainJoinUserPrincipalName": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "DomainServices": {
              "type": "string"
            },
            "DrainMode": {
              "type": "bool"
            },
            "EphemeralOsDisk": {
              "type": "string"
            },
            "FslogixSolution": {
              "type": "string"
            },
            "Fslogix": {
              "type": "bool"
            },
            "HostPoolName": {
              "type": "string"
            },
            "HostPoolType": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "ImageVersion": {
              "type": "string"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "ManagedIdentityResourceId": {
              "type": "string"
            },
            "MaxResourcesPerTemplateDeployment": {
              "type": "int"
            },
            "Monitoring": {
              "type": "bool"
            },
            "NamingStandard": {
              "type": "string"
            },
            "NetworkSecurityGroupName": {
              "type": "string"
            },
            "NetAppFileShares": {
              "type": "array"
            },
            "OuPath": {
              "type": "string"
            },
            "PooledHostPool": {
              "type": "bool"
            },
            "RdpShortPath": {
              "type": "bool"
            },
            "ResourceGroupHosts": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "ScreenCaptureProtection": {
              "type": "bool"
            },
            "SecurityPrincipalObjectIds": {
              "type": "array"
            },
            "Sentinel": {
              "type": "bool"
            },
            "SentinelWorkspaceId": {
              "type": "string"
            },
            "SentinelWorkspaceResourceId": {
              "type": "string"
            },
            "SessionHostBatchCount": {
              "type": "int"
            },
            "SessionHostIndex": {
              "type": "int"
            },
            "StorageAccountPrefix": {
              "type": "string"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageIndex": {
              "type": "int"
            },
            "StorageSolution": {
              "type": "string"
            },
            "StorageSuffix": {
              "type": "string"
            },
            "Subnet": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "TrustedLaunch": {
              "type": "string"
            },
            "VirtualNetwork": {
              "type": "string"
            },
            "VirtualNetworkResourceGroup": {
              "type": "string"
            },
            "VmName": {
              "type": "string"
            },
            "VmPassword": {
              "type": "securestring"
            },
            "VmSize": {
              "type": "string"
            },
            "VmUsername": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[and(parameters('PooledHostPool'), equals(parameters('Availability'), 'AvailabilitySet'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AvailabilitySets_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupHosts')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AvailabilitySetCount": {
                    "value": "[parameters('AvailabilitySetCount')]"
                  },
                  "AvailabilitySetIndex": {
                    "value": "[parameters('AvailabilitySetIndex')]"
                  },
                  "AvailabilitySetPrefix": {
                    "value": "[parameters('AvailabilitySetPrefix')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "4422451848864963649"
                    }
                  },
                  "parameters": {
                    "AvailabilitySetCount": {
                      "type": "int"
                    },
                    "AvailabilitySetIndex": {
                      "type": "int"
                    },
                    "AvailabilitySetPrefix": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "availabilitySet",
                        "count": "[length(range(0, parameters('AvailabilitySetCount')))]"
                      },
                      "type": "Microsoft.Compute/availabilitySets",
                      "apiVersion": "2019-07-01",
                      "name": "[format('{0}{1}', parameters('AvailabilitySetPrefix'), padLeft(add(range(0, parameters('AvailabilitySetCount'))[copyIndex()], parameters('AvailabilitySetIndex')), 2, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "Aligned"
                      },
                      "properties": {
                        "platformUpdateDomainCount": 5,
                        "platformFaultDomainCount": 2
                      }
                    }
                  ]
                }
              }
            },
            {
              "condition": "[contains(parameters('DomainServices'), 'None')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RoleAssignments_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupHosts')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "RoleDefinitionId": {
                    "value": "[parameters('RoleDefinitionIds').virtualMachineUserLogin]"
                  },
                  "SecurityPrincipalIds": {
                    "value": "[parameters('SecurityPrincipalObjectIds')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "16455348711434609869"
                    }
                  },
                  "parameters": {
                    "RoleDefinitionId": {
                      "type": "string"
                    },
                    "SecurityPrincipalIds": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(range(0, length(parameters('SecurityPrincipalIds'))))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(string(range(0, length(parameters('SecurityPrincipalIds')))[copyIndex()]), parameters('RoleDefinitionId'), resourceGroup().id)]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                        "principalId": "[parameters('SecurityPrincipalIds')[range(0, length(parameters('SecurityPrincipalIds')))[copyIndex()]]]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "copy": {
                "name": "virtualMachines",
                "count": "[length(range(1, parameters('SessionHostBatchCount')))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VirtualMachines_{0}_{1}', sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupHosts')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                  },
                  "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                  },
                  "AcceleratedNetworking": {
                    "value": "[parameters('AcceleratedNetworking')]"
                  },
                  "AutomationAccountName": {
                    "value": "[parameters('AutomationAccountName')]"
                  },
                  "Availability": {
                    "value": "[parameters('Availability')]"
                  },
                  "AvailabilitySetPrefix": {
                    "value": "[parameters('AvailabilitySetPrefix')]"
                  },
                  "ConfigurationName": {
                    "value": "[parameters('ConfigurationName')]"
                  },
                  "DisaStigCompliance": {
                    "value": "[parameters('DisaStigCompliance')]"
                  },
                  "DiskEncryption": {
                    "value": "[parameters('DiskEncryption')]"
                  },
                  "DiskName": {
                    "value": "[parameters('DiskName')]"
                  },
                  "DiskSku": {
                    "value": "[parameters('DiskSku')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "DomainServices": {
                    "value": "[parameters('DomainServices')]"
                  },
                  "DrainMode": {
                    "value": "[parameters('DrainMode')]"
                  },
                  "EphemeralOsDisk": {
                    "value": "[parameters('EphemeralOsDisk')]"
                  },
                  "Fslogix": {
                    "value": "[parameters('Fslogix')]"
                  },
                  "FslogixSolution": {
                    "value": "[parameters('FslogixSolution')]"
                  },
                  "HostPoolName": {
                    "value": "[parameters('HostPoolName')]"
                  },
                  "HostPoolType": {
                    "value": "[parameters('HostPoolType')]"
                  },
                  "ImageOffer": {
                    "value": "[parameters('ImageOffer')]"
                  },
                  "ImagePublisher": {
                    "value": "[parameters('ImagePublisher')]"
                  },
                  "ImageSku": {
                    "value": "[parameters('ImageSku')]"
                  },
                  "ImageVersion": {
                    "value": "[parameters('ImageVersion')]"
                  },
                  "KeyVaultName": {
                    "value": "[parameters('KeyVaultName')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "LogAnalyticsWorkspaceName": {
                    "value": "[parameters('LogAnalyticsWorkspaceName')]"
                  },
                  "ManagedIdentityResourceId": {
                    "value": "[parameters('ManagedIdentityResourceId')]"
                  },
                  "Monitoring": {
                    "value": "[parameters('Monitoring')]"
                  },
                  "NamingStandard": {
                    "value": "[parameters('NamingStandard')]"
                  },
                  "NetworkSecurityGroupName": {
                    "value": "[parameters('NetworkSecurityGroupName')]"
                  },
                  "NetAppFileShares": {
                    "value": "[parameters('NetAppFileShares')]"
                  },
                  "OuPath": {
                    "value": "[parameters('OuPath')]"
                  },
                  "RdpShortPath": {
                    "value": "[parameters('RdpShortPath')]"
                  },
                  "ResourceGroupManagement": {
                    "value": "[parameters('ResourceGroupManagement')]"
                  },
                  "ScreenCaptureProtection": {
                    "value": "[parameters('ScreenCaptureProtection')]"
                  },
                  "Sentinel": {
                    "value": "[parameters('Sentinel')]"
                  },
                  "SentinelWorkspaceId": {
                    "value": "[parameters('SentinelWorkspaceId')]"
                  },
                  "SentinelWorkspaceResourceId": {
                    "value": "[parameters('SentinelWorkspaceResourceId')]"
                  },
                  "SessionHostCount": "[if(and(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], parameters('SessionHostBatchCount')), greater(parameters('DivisionRemainderValue'), 0)), createObject('value', parameters('DivisionRemainderValue')), createObject('value', parameters('MaxResourcesPerTemplateDeployment')))]",
                  "SessionHostIndex": "[if(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), createObject('value', parameters('SessionHostIndex')), createObject('value', add(mul(sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('MaxResourcesPerTemplateDeployment')), parameters('SessionHostIndex'))))]",
                  "StorageAccountPrefix": {
                    "value": "[parameters('StorageAccountPrefix')]"
                  },
                  "StorageCount": {
                    "value": "[parameters('StorageCount')]"
                  },
                  "StorageIndex": {
                    "value": "[parameters('StorageIndex')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "StorageSuffix": {
                    "value": "[parameters('StorageSuffix')]"
                  },
                  "Subnet": {
                    "value": "[parameters('Subnet')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "TrustedLaunch": {
                    "value": "[parameters('TrustedLaunch')]"
                  },
                  "VirtualNetwork": {
                    "value": "[parameters('VirtualNetwork')]"
                  },
                  "VirtualNetworkResourceGroup": {
                    "value": "[parameters('VirtualNetworkResourceGroup')]"
                  },
                  "VmName": {
                    "value": "[parameters('VmName')]"
                  },
                  "VmPassword": {
                    "value": "[parameters('VmPassword')]"
                  },
                  "VmSize": {
                    "value": "[parameters('VmSize')]"
                  },
                  "VmUsername": {
                    "value": "[parameters('VmUsername')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7457494807007828409"
                    }
                  },
                  "parameters": {
                    "_artifactsLocation": {
                      "type": "string"
                    },
                    "_artifactsLocationSasToken": {
                      "type": "securestring"
                    },
                    "AcceleratedNetworking": {
                      "type": "string"
                    },
                    "AvailabilitySetPrefix": {
                      "type": "string"
                    },
                    "AutomationAccountName": {
                      "type": "string"
                    },
                    "Availability": {
                      "type": "string"
                    },
                    "ConfigurationName": {
                      "type": "string"
                    },
                    "DisaStigCompliance": {
                      "type": "bool"
                    },
                    "DiskEncryption": {
                      "type": "bool"
                    },
                    "DiskName": {
                      "type": "string"
                    },
                    "DiskSku": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "DomainServices": {
                      "type": "string"
                    },
                    "DrainMode": {
                      "type": "bool"
                    },
                    "EphemeralOsDisk": {
                      "type": "string"
                    },
                    "Fslogix": {
                      "type": "bool"
                    },
                    "FslogixSolution": {
                      "type": "string"
                    },
                    "HostPoolName": {
                      "type": "string"
                    },
                    "HostPoolType": {
                      "type": "string"
                    },
                    "ImageOffer": {
                      "type": "string"
                    },
                    "ImagePublisher": {
                      "type": "string"
                    },
                    "ImageSku": {
                      "type": "string"
                    },
                    "ImageVersion": {
                      "type": "string"
                    },
                    "KeyVaultName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceName": {
                      "type": "string"
                    },
                    "ManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "Monitoring": {
                      "type": "bool"
                    },
                    "NamingStandard": {
                      "type": "string"
                    },
                    "NetworkSecurityGroupName": {
                      "type": "string"
                    },
                    "NetAppFileShares": {
                      "type": "array"
                    },
                    "OuPath": {
                      "type": "string"
                    },
                    "RdpShortPath": {
                      "type": "bool"
                    },
                    "ResourceGroupManagement": {
                      "type": "string"
                    },
                    "ScreenCaptureProtection": {
                      "type": "bool"
                    },
                    "Sentinel": {
                      "type": "bool"
                    },
                    "SentinelWorkspaceId": {
                      "type": "string"
                    },
                    "SentinelWorkspaceResourceId": {
                      "type": "string"
                    },
                    "SessionHostCount": {
                      "type": "int"
                    },
                    "SessionHostIndex": {
                      "type": "int"
                    },
                    "StorageAccountPrefix": {
                      "type": "string"
                    },
                    "StorageCount": {
                      "type": "int"
                    },
                    "StorageIndex": {
                      "type": "int"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "StorageSuffix": {
                      "type": "string"
                    },
                    "Subnet": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "TrustedLaunch": {
                      "type": "string"
                    },
                    "UserAssignedIdentity": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "VirtualNetwork": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroup": {
                      "type": "string"
                    },
                    "VmName": {
                      "type": "string"
                    },
                    "VmPassword": {
                      "type": "securestring"
                    },
                    "VmSize": {
                      "type": "string"
                    },
                    "VmUsername": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "AmdVmSizes": [
                      "Standard_NV4as_v4",
                      "Standard_NV8as_v4",
                      "Standard_NV16as_v4",
                      "Standard_NV32as_v4"
                    ],
                    "AmdVmSize": "[contains(variables('AmdVmSizes'), parameters('VmSize'))]",
                    "Intune": "[if(equals(parameters('DomainServices'), 'NoneWithIntune'), true(), false())]",
                    "NvidiaVmSizes": [
                      "Standard_NV6",
                      "Standard_NV12",
                      "Standard_NV24",
                      "Standard_NV12s_v3",
                      "Standard_NV24s_v3",
                      "Standard_NV48s_v3",
                      "Standard_NC4as_T4_v3",
                      "Standard_NC8as_T4_v3",
                      "Standard_NC16as_T4_v3",
                      "Standard_NC64as_T4_v3",
                      "Standard_NV6ads_A10_v5",
                      "Standard_NV12ads_A10_v5",
                      "Standard_NV18ads_A10_v5",
                      "Standard_NV36ads_A10_v5",
                      "Standard_NV36adms_A10_v5",
                      "Standard_NV72ads_A10_v5"
                    ],
                    "NvidiaVmSize": "[contains(variables('NvidiaVmSizes'), parameters('VmSize'))]",
                    "PooledHostPool": "[equals(split(parameters('HostPoolType'), ' ')[0], 'Pooled')]",
                    "VmIdentityType": "[if(contains(parameters('DomainServices'), 'None'), if(not(empty(parameters('UserAssignedIdentity'))), 'SystemAssigned, UserAssigned', 'SystemAssigned'), if(not(empty(parameters('UserAssignedIdentity'))), 'UserAssigned', 'None'))]",
                    "VmIdentityTypeProperty": {
                      "type": "[variables('VmIdentityType')]"
                    },
                    "VmUserAssignedIdentityProperty": {
                      "userAssignedIdentities": {
                        "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('UserAssignedIdentity')))]": {}
                      }
                    },
                    "VmIdentity": "[if(not(empty(parameters('UserAssignedIdentity'))), union(variables('VmIdentityTypeProperty'), variables('VmUserAssignedIdentityProperty')), variables('VmIdentityTypeProperty'))]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('RdpShortPath')]",
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('NetworkSecurityGroupName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowRdpShortPath",
                            "properties": {
                              "access": "Allow",
                              "destinationAddressPrefix": "*",
                              "destinationPortRange": "3390",
                              "direction": "Inbound",
                              "priority": 3390,
                              "protocol": "Udp",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "sourcePortRange": "*"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "copy": {
                        "name": "networkInterface",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2020-05-01",
                      "name": "[format('nic-{0}-{1}', parameters('NamingStandard'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[resourceId(subscription().subscriptionId, parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[if(equals(parameters('AcceleratedNetworking'), 'True'), true(), false())]",
                        "enableIPForwarding": false,
                        "networkSecurityGroup": "[if(parameters('RdpShortPath'), createObject('id', resourceId('Microsoft.Network/networkSecurityGroups', parameters('NetworkSecurityGroupName'))), null())]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NetworkSecurityGroupName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "virtualMachine",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "zones": "[if(equals(parameters('Availability'), 'AvailabilityZones'), createArray(string(add(mod(range(0, parameters('SessionHostCount'))[copyIndex()], 3), 1))), null())]",
                      "identity": "[variables('VmIdentity')]",
                      "properties": {
                        "availabilitySet": "[if(equals(parameters('Availability'), 'AvailabilitySet'), createObject('id', resourceId('Microsoft.Compute/availabilitySets', format('{0}-{1}', parameters('AvailabilitySetPrefix'), div(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 200)))), null())]",
                        "hardwareProfile": {
                          "vmSize": "[parameters('VmSize')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "[parameters('ImagePublisher')]",
                            "offer": "[parameters('ImageOffer')]",
                            "sku": "[parameters('ImageSku')]",
                            "version": "[parameters('ImageVersion')]"
                          },
                          "osDisk": {
                            "name": "[format('{0}{1}', parameters('DiskName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                            "osType": "Windows",
                            "createOption": "FromImage",
                            "caching": "[if(equals(parameters('EphemeralOsDisk'), 'None'), 'ReadWrite', 'ReadOnly')]",
                            "deleteOption": "Delete",
                            "managedDisk": "[if(equals(parameters('EphemeralOsDisk'), 'None'), createObject('storageAccountType', parameters('DiskSku')), null())]",
                            "diffDiskSettings": "[if(equals(parameters('EphemeralOsDisk'), 'None'), null(), createObject('option', 'Local', 'placement', parameters('EphemeralOsDisk')))]"
                          },
                          "dataDisks": []
                        },
                        "osProfile": {
                          "computerName": "[format('{0}{1}', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                          "adminUsername": "[parameters('VmUsername')]",
                          "adminPassword": "[parameters('VmPassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": false
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}-{1}', parameters('NamingStandard'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0')))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "securityProfile": {
                          "uefiSettings": "[if(equals(parameters('TrustedLaunch'), 'true'), createObject('secureBootEnabled', true(), 'vTpmEnabled', true()), null())]",
                          "securityType": "[if(equals(parameters('TrustedLaunch'), 'true'), 'TrustedLaunch', null())]"
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": false
                          }
                        },
                        "licenseType": "[if(equals(parameters('ImagePublisher'), 'MicrosoftWindowsServer'), 'Windows_Server', 'Windows_Client')]"
                      },
                      "dependsOn": [
                        "networkInterface"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_MicrosoftMonitoringAgent",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[parameters('Monitoring')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}/MicrosoftMonitoringAgent', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "workspaceId": "[if(parameters('Monitoring'), reference(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName')), '2015-03-20').customerId, null())]"
                        },
                        "protectedSettings": {
                          "workspaceKey": "[if(parameters('Monitoring'), listKeys(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName')), '2015-03-20').primarySharedKey, null())]"
                        }
                      },
                      "dependsOn": [
                        "virtualMachine"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_CustomScriptExtension",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}/CustomScriptExtension', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [
                            "[format('{0}Set-SessionHostConfiguration.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]"
                          ],
                          "timestamp": "[parameters('Timestamp')]"
                        },
                        "protectedSettings": {
                          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File Set-SessionHostConfiguration.ps1 -AmdVmSize {0} -DisaStigCompliance {1} -DomainName {2} -DomainServices {3} -Environment {4} -FSLogix {5} -FslogixSolution {6} -HostPoolName {7} -HostPoolRegistrationToken {8} -ImageOffer {9} -ImagePublisher {10} -NetAppFileShares {11} -NvidiaVmSize {12} -PooledHostPool {13} -RdpShortPath {14} -ScreenCaptureProtection {15} -Sentinel {16} -SentinelWorkspaceId {17} -SentinelWorkspaceKey {18} -StorageAccountPrefix {19} -StorageCount {20} -StorageIndex {21} -StorageSolution {22} -StorageSuffix {23}', variables('AmdVmSize'), parameters('DisaStigCompliance'), parameters('DomainName'), parameters('DomainServices'), environment().name, parameters('Fslogix'), parameters('FslogixSolution'), parameters('HostPoolName'), reference(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.DesktopVirtualization/hostpools', parameters('HostPoolName')), '2019-12-10-preview').registrationInfo.token, parameters('ImageOffer'), parameters('ImagePublisher'), parameters('NetAppFileShares'), variables('NvidiaVmSize'), variables('PooledHostPool'), parameters('RdpShortPath'), parameters('ScreenCaptureProtection'), parameters('Sentinel'), parameters('SentinelWorkspaceId'), if(parameters('Sentinel'), listKeys(parameters('SentinelWorkspaceResourceId'), '2021-06-01').primarySharedKey, 'NotApplicable'), parameters('StorageAccountPrefix'), parameters('StorageCount'), parameters('StorageIndex'), parameters('StorageSolution'), parameters('StorageSuffix'))]"
                        }
                      },
                      "dependsOn": [
                        "extension_MicrosoftMonitoringAgent",
                        "virtualMachine"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_JsonADDomainExtension",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[contains(parameters('DomainServices'), 'ActiveDirectory')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}/JsonADDomainExtension', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "Name": "[parameters('DomainName')]",
                          "User": "[parameters('DomainJoinUserPrincipalName')]",
                          "Restart": "true",
                          "Options": "3",
                          "OUPath": "[parameters('OuPath')]"
                        },
                        "protectedSettings": {
                          "Password": "[parameters('DomainJoinPassword')]"
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('DrainMode_{0}', parameters('Timestamp')))]",
                        "virtualMachine"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_AADLoginForWindows",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[contains(parameters('DomainServices'), 'None')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}/AADLoginForWindows', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.ActiveDirectory",
                        "type": "AADLoginForWindows",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": "[if(variables('Intune'), createObject('mdmId', '0000000a-0000-0000-c000-000000000000'), null())]"
                      },
                      "dependsOn": [
                        "extension_CustomScriptExtension",
                        "virtualMachine"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_AmdGpuDriverWindows",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[variables('AmdVmSize')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}/AmdGpuDriverWindows', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "publisher": "Microsoft.HpcCompute",
                        "type": "AmdGpuDriverWindows",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {}
                      },
                      "dependsOn": [
                        "extension_AADLoginForWindows",
                        "extension_JsonADDomainExtension",
                        "virtualMachine"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_NvidiaGpuDriverWindows",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[variables('NvidiaVmSize')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}/NvidiaGpuDriverWindows', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "publisher": "Microsoft.HpcCompute",
                        "type": "NvidiaGpuDriverWindows",
                        "typeHandlerVersion": "1.2",
                        "autoUpgradeMinorVersion": true,
                        "settings": {}
                      },
                      "dependsOn": [
                        "extension_AADLoginForWindows",
                        "extension_JsonADDomainExtension",
                        "virtualMachine"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_AzureDiskEncryption",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[parameters('DiskEncryption')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2017-03-30",
                      "name": "[format('{0}{1}/AzureDiskEncryption', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "2.2",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "settings": {
                          "EncryptionOperation": "EnableEncryption",
                          "KeyVaultURL": "[if(parameters('DiskEncryption'), reference(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName')), '2016-10-01', 'Full').properties.vaultUri, null())]",
                          "KeyVaultResourceId": "[resourceId(parameters('ResourceGroupManagement'), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]",
                          "KeyEncryptionKeyURL": "[if(parameters('DiskEncryption'), reference(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.Resources/deploymentScripts', format('ds-{0}-bitlockerKek', parameters('NamingStandard'))), '2019-10-01-preview', 'Full').properties.outputs.text, null())]",
                          "KekVaultResourceId": "[resourceId(parameters('ResourceGroupManagement'), 'Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]",
                          "KeyEncryptionAlgorithm": "RSA-OAEP",
                          "VolumeType": "All",
                          "ResizeOSDisk": false
                        }
                      },
                      "dependsOn": [
                        "extension_AmdGpuDriverWindows",
                        "extension_NvidiaGpuDriverWindows"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_DSC",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[parameters('DisaStigCompliance')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-07-01",
                      "name": "[format('{0}{1}/DSC', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.77",
                        "autoUpgradeMinorVersion": true,
                        "protectedSettings": {
                          "Items": {
                            "registrationKeyPrivate": "[if(parameters('DisaStigCompliance'), listKeys(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2018-06-30').Keys[0].value, null())]"
                          }
                        },
                        "settings": {
                          "Properties": [
                            {
                              "Name": "RegistrationKey",
                              "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                              },
                              "TypeName": "System.Management.Automation.PSCredential"
                            },
                            {
                              "Name": "RegistrationUrl",
                              "Value": "[if(parameters('DisaStigCompliance'), reference(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2018-06-30').registrationUrl, null())]",
                              "TypeName": "System.String"
                            },
                            {
                              "Name": "NodeConfigurationName",
                              "Value": "[format('{0}.localhost', parameters('ConfigurationName'))]",
                              "TypeName": "System.String"
                            },
                            {
                              "Name": "ConfigurationMode",
                              "Value": "ApplyandAutoCorrect",
                              "TypeName": "System.String"
                            },
                            {
                              "Name": "RebootNodeIfNeeded",
                              "Value": true,
                              "TypeName": "System.Boolean"
                            },
                            {
                              "Name": "ActionAfterReboot",
                              "Value": "ContinueConfiguration",
                              "TypeName": "System.String"
                            },
                            {
                              "Name": "Timestamp",
                              "Value": "[parameters('Timestamp')]",
                              "TypeName": "System.String"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "extension_AzureDiskEncryption"
                      ]
                    },
                    {
                      "condition": "[parameters('DrainMode')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('DrainMode_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "Arguments": {
                            "value": "[format('-ResourceGroup {0} -HostPool {1}', parameters('ResourceGroupManagement'), parameters('HostPoolName'))]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Name": {
                            "value": "[format('ds-{0}-drainMode', parameters('NamingStandard'))]"
                          },
                          "ScriptContainerSasToken": {
                            "value": "[parameters('_artifactsLocationSasToken')]"
                          },
                          "ScriptContainerUri": {
                            "value": "[parameters('_artifactsLocation')]"
                          },
                          "ScriptName": {
                            "value": "Set-AvdDrainMode.ps1"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          },
                          "UserAssignedIdentityResourceId": {
                            "value": "[parameters('ManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.16.2.56959",
                              "templateHash": "7158975045101659830"
                            }
                          },
                          "parameters": {
                            "Arguments": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Name": {
                              "type": "string"
                            },
                            "ScriptContainerUri": {
                              "type": "string"
                            },
                            "ScriptContainerSasToken": {
                              "type": "securestring"
                            },
                            "ScriptName": {
                              "type": "string"
                            },
                            "Timestamp": {
                              "type": "string"
                            },
                            "UserAssignedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "[parameters('Name')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[parameters('Location')]",
                              "kind": "AzurePowerShell",
                              "tags": {},
                              "properties": {
                                "azPowerShellVersion": "9.4",
                                "cleanupPreference": "Always",
                                "primaryScriptUri": "[format('{0}{1}?{2}', parameters('ScriptContainerUri'), parameters('ScriptName'), parameters('ScriptContainerSasToken'))]",
                                "arguments": "[parameters('Arguments')]",
                                "forceUpdateTag": "[parameters('Timestamp')]",
                                "retentionInterval": "PT2H",
                                "timeout": "PT30M"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "extension_CustomScriptExtension",
                        "virtualMachine"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupHosts')), 'Microsoft.Resources/deployments', format('AvailabilitySets_{0}', parameters('Timestamp')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('BitLocker_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('FSLogix_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ManagedIdentity_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp')))]",
        "resourceGroups",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('SentinelLogAnalyticsWorkspaceSubscriptionId'), variables('SentinelResourceGroup')), 'Microsoft.Resources/deployments', format('Sentinel_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('STIG_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[0]), 'Microsoft.Resources/deployments', format('Validation_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "condition": "[parameters('RecoveryServices')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Backup_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DivisionRemainderValue": {
            "value": "[variables('DivisionRemainderValue')]"
          },
          "FileShares": {
            "value": "[variables('FileShares')]"
          },
          "Fslogix": {
            "value": "[variables('Fslogix')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "MaxResourcesPerTemplateDeployment": {
            "value": "[variables('MaxResourcesPerTemplateDeployment')]"
          },
          "RecoveryServicesVaultName": {
            "value": "[variables('RecoveryServicesVaultName')]"
          },
          "SessionHostBatchCount": {
            "value": "[variables('SessionHostBatchCount')]"
          },
          "SessionHostIndex": {
            "value": "[parameters('SessionHostIndex')]"
          },
          "StorageAccountPrefix": {
            "value": "[variables('StorageAccountPrefix')]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageIndex": {
            "value": "[parameters('StorageIndex')]"
          },
          "StorageResourceGroupName": {
            "value": "[variables('ResourceGroupStorage')]"
          },
          "StorageSolution": {
            "value": "[variables('StorageSolution')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "TimeZone": {
            "value": "[variables('Locations')[parameters('Location')].timeZone]"
          },
          "VmName": {
            "value": "[variables('VmName')]"
          },
          "VmResourceGroupName": {
            "value": "[variables('ResourceGroups')[1]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "17271659887004609437"
            }
          },
          "parameters": {
            "DivisionRemainderValue": {
              "type": "int"
            },
            "FileShares": {
              "type": "array"
            },
            "Fslogix": {
              "type": "bool"
            },
            "Location": {
              "type": "string"
            },
            "MaxResourcesPerTemplateDeployment": {
              "type": "int"
            },
            "RecoveryServicesVaultName": {
              "type": "string"
            },
            "SessionHostBatchCount": {
              "type": "int"
            },
            "SessionHostIndex": {
              "type": "int"
            },
            "StorageAccountPrefix": {
              "type": "string"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageIndex": {
              "type": "int"
            },
            "StorageResourceGroupName": {
              "type": "string"
            },
            "StorageSolution": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "TimeZone": {
              "type": "string"
            },
            "VmName": {
              "type": "string"
            },
            "VmResourceGroupName": {
              "type": "string"
            }
          },
          "variables": {
            "BackupSchedulePolicy": {
              "scheduleRunFrequency": "Daily",
              "scheduleRunTimes": [
                "23:00"
              ],
              "schedulePolicyType": "SimpleSchedulePolicy"
            },
            "BackupRetentionPolicy": {
              "retentionPolicyType": "LongTermRetentionPolicy",
              "dailySchedule": {
                "retentionTimes": [
                  "23:00"
                ],
                "retentionDuration": {
                  "count": 30,
                  "durationType": "Days"
                }
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.RecoveryServices/vaults",
              "apiVersion": "2022-03-01",
              "name": "[parameters('RecoveryServicesVaultName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "RS0",
                "tier": "Standard"
              },
              "properties": {}
            },
            {
              "condition": "[and(parameters('Fslogix'), equals(parameters('StorageSolution'), 'AzureStorageAccount'))]",
              "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('RecoveryServicesVaultName'), 'AvdPolicyStorage')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "backupManagementType": "AzureStorage",
                "schedulePolicy": "[variables('BackupSchedulePolicy')]",
                "retentionPolicy": "[variables('BackupRetentionPolicy')]",
                "timeZone": "[parameters('TimeZone')]",
                "workLoadType": "AzureFileShare"
              },
              "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('RecoveryServicesVaultName'))]"
              ]
            },
            {
              "condition": "[not(parameters('Fslogix'))]",
              "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('RecoveryServicesVaultName'), 'AvdPolicyVm')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "backupManagementType": "AzureIaasVM",
                "schedulePolicy": "[variables('BackupSchedulePolicy')]",
                "retentionPolicy": "[variables('BackupRetentionPolicy')]",
                "timeZone": "[parameters('TimeZone')]",
                "instantRpRetentionRangeInDays": 2
              },
              "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('RecoveryServicesVaultName'))]"
              ]
            },
            {
              "copy": {
                "name": "protectionContainers",
                "count": "[length(range(0, parameters('StorageCount')))]"
              },
              "condition": "[and(parameters('Fslogix'), equals(parameters('StorageSolution'), 'AzureStorageAccount'))]",
              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('StorageResourceGroupName'), parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0'))]",
              "properties": {
                "backupManagementType": "AzureStorage",
                "containerType": "StorageContainer",
                "sourceResourceId": "[resourceId(parameters('StorageResourceGroupName'), 'Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyStorage')]",
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('RecoveryServicesVaultName'))]"
              ]
            },
            {
              "copy": {
                "name": "protectedItems_FileShares",
                "count": "[length(range(0, parameters('StorageCount')))]"
              },
              "condition": "[and(parameters('Fslogix'), equals(parameters('StorageSolution'), 'AzureStorageAccount'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('BackupProtectedItems_FileShares_{0}_{1}', add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), parameters('Timestamp'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "FileShares": {
                    "value": "[parameters('FileShares')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ProtectionContainerName": {
                    "value": "[format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('StorageResourceGroupName'), parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))]"
                  },
                  "PolicyId": {
                    "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyStorage')]"
                  },
                  "SourceResourceId": {
                    "value": "[resourceId(parameters('StorageResourceGroupName'), 'Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0')))]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "3351981388323888843"
                    }
                  },
                  "parameters": {
                    "FileShares": {
                      "type": "array"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "PolicyId": {
                      "type": "string"
                    },
                    "ProtectionContainerName": {
                      "type": "string"
                    },
                    "SourceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "protectedItems_FileShare",
                        "count": "[length(parameters('FileShares'))]"
                      },
                      "condition": "[contains(parameters('FileShares')[copyIndex()], 'profile')]",
                      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/AzureFileShare;{1}', parameters('ProtectionContainerName'), parameters('FileShares')[copyIndex()])]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "protectedItemType": "AzureFileShareProtectedItem",
                        "policyId": "[parameters('PolicyId')]",
                        "sourceResourceId": "[parameters('SourceResourceId')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyStorage')]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers', split(format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('StorageResourceGroupName'), parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), '/')[0], split(format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('StorageResourceGroupName'), parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), '/')[1], split(format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('StorageResourceGroupName'), parameters('StorageAccountPrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), '/')[2])]"
              ]
            },
            {
              "copy": {
                "name": "protectedItems_Vm",
                "count": "[length(range(1, parameters('SessionHostBatchCount')))]"
              },
              "condition": "[not(parameters('Fslogix'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('BackupProtectedItems_VirtualMachines_{0}_{1}', sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('Timestamp'))]",
              "resourceGroup": "[resourceGroup().name]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "PolicyId": {
                    "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyVm')]"
                  },
                  "RecoveryServicesVaultName": {
                    "value": "[parameters('RecoveryServicesVaultName')]"
                  },
                  "SessionHostCount": "[if(and(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], parameters('SessionHostBatchCount')), greater(parameters('DivisionRemainderValue'), 0)), createObject('value', parameters('DivisionRemainderValue')), createObject('value', parameters('MaxResourcesPerTemplateDeployment')))]",
                  "SessionHostIndex": "[if(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), createObject('value', parameters('SessionHostIndex')), createObject('value', add(mul(sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('MaxResourcesPerTemplateDeployment')), parameters('SessionHostIndex'))))]",
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "VmName": {
                    "value": "[parameters('VmName')]"
                  },
                  "VmResourceGroupName": {
                    "value": "[parameters('VmResourceGroupName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "15265769520551500270"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "PolicyId": {
                      "type": "string"
                    },
                    "RecoveryServicesVaultName": {
                      "type": "string"
                    },
                    "SessionHostCount": {
                      "type": "int"
                    },
                    "SessionHostIndex": {
                      "type": "int"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "VmName": {
                      "type": "string"
                    },
                    "VmResourceGroupName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                    "v2Vm": "vm;iaasvmcontainerv2;"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "protectedItems_Vm",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                      "apiVersion": "2021-08-01",
                      "name": "[format('{0}/Azure/{1}{2};{3}{4}/{5}{6};{7}{8}', parameters('RecoveryServicesVaultName'), variables('v2VmContainer'), parameters('VmResourceGroupName'), parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'), variables('v2Vm'), parameters('VmResourceGroupName'), parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "protectedItemType": "Microsoft.Compute/virtualMachines",
                        "policyId": "[parameters('PolicyId')]",
                        "sourceResourceId": "[resourceId(parameters('VmResourceGroupName'), 'Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VmName'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 3, '0')))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyVm')]",
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('RecoveryServicesVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('FSLogix_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[1]), 'Microsoft.Resources/deployments', format('SessionHosts_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "condition": "[and(parameters('ScalingTool'), variables('PooledHostPool'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ScalingTool_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "AutomationAccountName": {
            "value": "[variables('AutomationAccountName')]"
          },
          "BeginPeakTime": {
            "value": "[parameters('ScalingBeginPeakTime')]"
          },
          "EndPeakTime": {
            "value": "[parameters('ScalingEndPeakTime')]"
          },
          "HostPoolName": {
            "value": "[variables('HostPoolName')]"
          },
          "HostPoolResourceGroupName": {
            "value": "[variables('ResourceGroupManagement')]"
          },
          "LimitSecondsToForceLogOffUser": {
            "value": "[parameters('ScalingLimitSecondsToForceLogOffUser')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "MinimumNumberOfRdsh": {
            "value": "[parameters('ScalingMinimumNumberOfRdsh')]"
          },
          "ResourceGroupHosts": {
            "value": "[variables('ResourceGroupHosts')]"
          },
          "ResourceGroupManagement": {
            "value": "[variables('ResourceGroupManagement')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "SessionThresholdPerCPU": {
            "value": "[parameters('ScalingSessionThresholdPerCPU')]"
          },
          "TimeDifference": {
            "value": "[variables('Locations')[parameters('Location')].timeDifference]"
          },
          "TimeZone": {
            "value": "[variables('Locations')[parameters('Location')].timeZone]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "6820882369985144424"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "BeginPeakTime": {
              "type": "string"
            },
            "EndPeakTime": {
              "type": "string"
            },
            "HostPoolName": {
              "type": "string"
            },
            "HostPoolResourceGroupName": {
              "type": "string"
            },
            "LimitSecondsToForceLogOffUser": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "MinimumNumberOfRdsh": {
              "type": "string"
            },
            "ResourceGroupHosts": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "SessionThresholdPerCPU": {
              "type": "string"
            },
            "TimeDifference": {
              "type": "string"
            },
            "Time": {
              "type": "string",
              "defaultValue": "[utcNow('u')]"
            },
            "TimeZone": {
              "type": "string"
            }
          },
          "variables": {
            "RoleAssignments": [
              "[parameters('ResourceGroupHosts')]",
              "[parameters('ResourceGroupManagement')]"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), 'AVD-Scaling-Tool')]",
              "location": "[parameters('Location')]",
              "properties": {
                "runbookType": "PowerShell",
                "logProgress": false,
                "logVerbose": false,
                "publishContentLink": {
                  "uri": "[format('{0}Set-HostPoolScaling.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                  "version": "1.0.0.0"
                }
              }
            },
            {
              "copy": {
                "name": "schedules",
                "count": "[length(range(0, 4))]"
              },
              "type": "Microsoft.Automation/automationAccounts/schedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
              "properties": {
                "advancedSchedule": {},
                "description": null,
                "expiryTime": null,
                "frequency": "Hour",
                "interval": 1,
                "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                "timeZone": "[parameters('TimeZone')]"
              }
            },
            {
              "copy": {
                "name": "jobSchedules",
                "count": "[length(range(0, 4))]"
              },
              "type": "Microsoft.Automation/automationAccounts/jobSchedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Time'), 'AVD-Scaling-Tool', parameters('HostPoolName'), string(range(0, 4)[copyIndex()])))]",
              "properties": {
                "parameters": {
                  "TenantId": "[subscription().tenantId]",
                  "SubscriptionId": "[subscription().subscriptionId]",
                  "EnvironmentName": "[environment().name]",
                  "ResourceGroupName": "[parameters('HostPoolResourceGroupName')]",
                  "HostPoolName": "[parameters('HostPoolName')]",
                  "MaintenanceTagName": "Maintenance",
                  "TimeDifference": "[parameters('TimeDifference')]",
                  "BeginPeakTime": "[parameters('BeginPeakTime')]",
                  "EndPeakTime": "[parameters('EndPeakTime')]",
                  "SessionThresholdPerCPU": "[parameters('SessionThresholdPerCPU')]",
                  "MinimumNumberOfRDSH": "[parameters('MinimumNumberOfRdsh')]",
                  "LimitSecondsToForceLogOffUser": "[parameters('LimitSecondsToForceLogOffUser')]",
                  "LogOffMessageTitle": "Machine is about to shutdown.",
                  "LogOffMessageBody": "Your session will be logged off. Please save and close everything."
                },
                "runbook": {
                  "name": "AVD-Scaling-Tool"
                },
                "runOn": null,
                "schedule": {
                  "name": "[format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[range(0, 4)[copyIndex()]], 1), 15))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), 'AVD-Scaling-Tool')]",
                "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('AutomationAccountName'), format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[range(0, 4)[copyIndex()]], 1), 15)))]"
              ]
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(range(0, length(variables('RoleAssignments'))))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RoleAssignment_{0}_{1}', range(0, length(variables('RoleAssignments')))[copyIndex()], variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]])]",
              "resourceGroup": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2022-08-08', 'full').identity.principalId]"
                  },
                  "RoleDefinitionId": {
                    "value": "[parameters('RoleDefinitionIds').desktopVirtualizationPowerOnOffContributor]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7200534500754601917"
                    }
                  },
                  "parameters": {
                    "PrincipalId": {
                      "type": "string"
                    },
                    "RoleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                      "properties": {
                        "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                        "principalId": "[parameters('PrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Backup_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroups')[1]), 'Microsoft.Resources/deployments', format('SessionHosts_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "condition": "[and(contains(parameters('FslogixStorage'), 'AzureStorageAccount Premium'), greater(parameters('StorageCount'), 0))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('AutoIncreasePremiumFileShareQuota_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroupManagement')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "AutomationAccountName": {
            "value": "[variables('AutomationAccountName')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "RoleDefinitionIds": {
            "value": "[variables('RoleDefinitionIds')]"
          },
          "StorageAccountPrefix": {
            "value": "[variables('StorageAccountPrefix')]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageIndex": {
            "value": "[parameters('StorageIndex')]"
          },
          "StorageResourceGroupName": {
            "value": "[variables('ResourceGroupStorage')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "TimeZone": {
            "value": "[variables('Locations')[parameters('Location')].timeZone]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "12575327241792374753"
            }
          },
          "parameters": {
            "_artifactsLocation": {
              "type": "string"
            },
            "_artifactsLocationSasToken": {
              "type": "securestring"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "Environment": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "RoleDefinitionIds": {
              "type": "object"
            },
            "StorageAccountPrefix": {
              "type": "string"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageIndex": {
              "type": "int"
            },
            "StorageResourceGroupName": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "TimeZone": {
              "type": "string"
            }
          },
          "variables": {
            "RunbookName": "Set-FileShareQuota",
            "SubscriptionId": "[subscription().subscriptionId]"
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('RunbookName'))]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "runbookType": "PowerShell",
                "logProgress": false,
                "logVerbose": false,
                "publishContentLink": {
                  "uri": "[format('{0}Set-FileShareScaling.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
                  "version": "1.0.0.0"
                }
              }
            },
            {
              "copy": {
                "name": "schedules",
                "count": "[length(range(parameters('StorageIndex'), parameters('StorageCount')))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Schedules_{0}_{1}', range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AutomationAccountName": {
                    "value": "[parameters('AutomationAccountName')]"
                  },
                  "StorageAccountName": {
                    "value": "[format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], 2, '0'))]"
                  },
                  "TimeZone": {
                    "value": "[parameters('TimeZone')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "17507518577105002864"
                    }
                  },
                  "parameters": {
                    "AutomationAccountName": {
                      "type": "string"
                    },
                    "StorageAccountName": {
                      "type": "string"
                    },
                    "Time": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "TimeZone": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "schedules_ProfileContainers",
                        "count": "[length(range(0, 4))]"
                      },
                      "type": "Microsoft.Automation/automationAccounts/schedules",
                      "apiVersion": "2022-08-08",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_ProfileContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                      "properties": {
                        "advancedSchedule": {},
                        "description": null,
                        "expiryTime": null,
                        "frequency": "Hour",
                        "interval": 1,
                        "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                        "timeZone": "[parameters('TimeZone')]"
                      }
                    },
                    {
                      "copy": {
                        "name": "schedules_OfficeContainers",
                        "count": "[length(range(0, 4))]"
                      },
                      "type": "Microsoft.Automation/automationAccounts/schedules",
                      "apiVersion": "2022-08-08",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_OfficeContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                      "properties": {
                        "advancedSchedule": {},
                        "description": null,
                        "expiryTime": null,
                        "frequency": "Hour",
                        "interval": 1,
                        "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                        "timeZone": "[parameters('TimeZone')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "copy": {
                "name": "jobSchedules",
                "count": "[length(range(parameters('StorageIndex'), parameters('StorageCount')))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('JobSchedules_{0}_{1}', range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AutomationAccountName": {
                    "value": "[parameters('AutomationAccountName')]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "RunbookName": {
                    "value": "[variables('RunbookName')]"
                  },
                  "ResourceGroupName": {
                    "value": "[parameters('StorageResourceGroupName')]"
                  },
                  "StorageAccountName": {
                    "value": "[format('{0}{1}', parameters('StorageAccountPrefix'), padLeft(range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], 2, '0'))]"
                  },
                  "SubscriptionId": {
                    "value": "[variables('SubscriptionId')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "17728388296541635599"
                    }
                  },
                  "parameters": {
                    "AutomationAccountName": {
                      "type": "string"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "ResourceGroupName": {
                      "type": "string"
                    },
                    "RunbookName": {
                      "type": "string"
                    },
                    "StorageAccountName": {
                      "type": "string"
                    },
                    "SubscriptionId": {
                      "type": "string"
                    },
                    "Timestamp": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "jobSchedules_ProfileContainers",
                        "count": "[length(range(0, 4))]"
                      },
                      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                      "apiVersion": "2022-08-08",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Timestamp'), parameters('RunbookName'), parameters('StorageAccountName'), 'ProfileContainers', string(range(0, 4)[copyIndex()])))]",
                      "properties": {
                        "parameters": {
                          "Environment": "[parameters('Environment')]",
                          "FileShareName": "profilecontainers",
                          "ResourceGroupName": "[parameters('ResourceGroupName')]",
                          "StorageAccountName": "[parameters('StorageAccountName')]",
                          "SubscriptionId": "[parameters('SubscriptionId')]"
                        },
                        "runbook": {
                          "name": "[parameters('RunbookName')]"
                        },
                        "runOn": null,
                        "schedule": {
                          "name": "[format('{0}_ProfileContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15))]"
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "jobSchedules_OfficeContainers",
                        "count": "[length(range(0, 4))]"
                      },
                      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                      "apiVersion": "2022-08-08",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Timestamp'), parameters('RunbookName'), parameters('StorageAccountName'), 'OfficeContainers', string(range(0, 4)[copyIndex()])))]",
                      "properties": {
                        "parameters": {
                          "Environment": "[parameters('Environment')]",
                          "FileShareName": "officecontainers",
                          "ResourceGroupName": "[parameters('ResourceGroupName')]",
                          "StorageAccountName": "[parameters('StorageAccountName')]",
                          "SubscriptionId": "[parameters('SubscriptionId')]"
                        },
                        "runbook": {
                          "name": "[parameters('RunbookName')]"
                        },
                        "runOn": null,
                        "schedule": {
                          "name": "[format('{0}_OfficeContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15))]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), variables('RunbookName'))]",
                "schedules"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RoleAssignment_{0}_{1}', parameters('StorageResourceGroupName'), parameters('Timestamp'))]",
              "resourceGroup": "[parameters('StorageResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2022-08-08', 'full').identity.principalId]"
                  },
                  "RoleDefinitionId": {
                    "value": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionIds').storageAccountContributor)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "7200534500754601917"
                    }
                  },
                  "parameters": {
                    "PrincipalId": {
                      "type": "string"
                    },
                    "RoleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                      "properties": {
                        "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                        "principalId": "[parameters('PrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Backup_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('FSLogix_{0}', parameters('Timestamp')))]"
      ]
    }
  ]
}