{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "17719965852750151179"
    }
  },
  "parameters": {
    "ArtifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jamasten/AzureVirtualDesktop/main/artifacts/",
      "metadata": {
        "description": "The URL prefix for the scripts required in this solution. If you do not have public internet access to the default value below, you need to host the scripts in the \"Artifacts\" folder in Azure Blobs and provide the URL prefix below."
      }
    },
    "ArtifactsStorageAccountResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID for the storage account hosting the artifacts."
      }
    },
    "ActiveDirectorySolution": {
      "type": "string",
      "allowedValues": [
        "ActiveDirectoryDomainServices",
        "AzureActiveDirectoryDomainServices",
        "AzureActiveDirectory",
        "AzureActiveDirectoryIntuneEnrollment"
      ],
      "metadata": {
        "description": "The service providing domain services for Azure Virtual Desktop.  This is needed to properly configure the session hosts and if applicable, the Azure Storage Account."
      }
    },
    "Availability": {
      "type": "string",
      "defaultValue": "AvailabilityZones",
      "allowedValues": [
        "AvailabilitySets",
        "AvailabilityZones",
        "None"
      ],
      "metadata": {
        "description": "Set the desired availability / SLA with a pooled host pool.  The best practice is to deploy to Availability Zones for resilency."
      }
    },
    "AvdObjectId": {
      "type": "string",
      "metadata": {
        "description": "The Object ID for the Windows Virtual Desktop Enterprise Application in Azure AD.  The Object ID can found by selecting Microsoft Applications using the Application type filter in the Enterprise Applications blade of Azure AD."
      }
    },
    "AzureFilesPrivateDnsZoneResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If using private endpoints with Azure Files, input the Resource ID for the Private DNS Zone linked to your hub virtual network."
      }
    },
    "AzurePowerShellAzModuleMsiLink": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/azure-powershell/releases/download/v10.2.0-August2023/Az-Cmdlets-10.2.0.37547-x64.msi",
      "metadata": {
        "description": "The link to the Azure PowerShell Az Module MSI file to install the modules on the management VM.  If you do not have public internet access to the default value below, you need to host the MSI file in Azure Blobs and provide the URL below."
      }
    },
    "CustomRdpProperty": {
      "type": "string",
      "defaultValue": "audiocapturemode:i:1;camerastoredirect:s:*;use multimon:i:0;drivestoredirect:s:;",
      "metadata": {
        "description": "Input RDP properties to add or remove RDP functionality on the AVD host pool. Settings reference: https://learn.microsoft.com/windows-server/remote/remote-desktop-services/clients/rdp-files"
      }
    },
    "DiskEncryption": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Server-Side Encrytion and Encryption at Host on the AVD session hosts and management VM."
      }
    },
    "DiskSku": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage SKU for the AVD session host disks.  Production deployments should use Premium_LRS."
      }
    },
    "DomainJoinPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The password of the privileged account to domain join the AVD session hosts to your domain"
      }
    },
    "DomainJoinUserPrincipalName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The UPN of the privileged account to domain join the AVD session hosts to your domain. This should be an account the resides within the domain you are joining."
      }
    },
    "DomainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the domain that provides ADDS to the AVD session hosts and is synchronized with Azure AD"
      }
    },
    "DrainMode": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable drain mode on new sessions hosts to prevent users from accessing them until they are validated."
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "d",
      "allowedValues": [
        "d",
        "p",
        "s",
        "t"
      ],
      "metadata": {
        "description": "The target environment for the solution."
      }
    },
    "FslogixShareSizeInGB": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "The file share size(s) in GB for the Fslogix storage solution."
      }
    },
    "FslogixSolution": {
      "type": "string",
      "defaultValue": "ProfileContainer",
      "allowedValues": [
        "CloudCacheProfileContainer",
        "CloudCacheProfileOfficeContainer",
        "ProfileContainer",
        "ProfileOfficeContainer"
      ]
    },
    "FslogixStorage": {
      "type": "string",
      "defaultValue": "AzureStorageAccount Standard PublicEndpoint",
      "allowedValues": [
        "AzureNetAppFiles Premium",
        "AzureNetAppFiles Standard",
        "AzureStorageAccount Premium PublicEndpoint",
        "AzureStorageAccount Premium PrivateEndpoint",
        "AzureStorageAccount Premium ServiceEndpoint",
        "AzureStorageAccount Standard PublicEndpoint",
        "AzureStorageAccount Standard PrivateEndpoint",
        "AzureStorageAccount Standard ServiceEndpoint",
        "None"
      ],
      "metadata": {
        "description": "Enable an Fslogix storage option to manage user profiles for the AVD session hosts. The selected service & SKU should provide sufficient IOPS for all of your users. https://docs.microsoft.com/en-us/azure/architecture/example-scenario/wvd/windows-virtual-desktop-fslogix#performance-requirements"
      }
    },
    "HostPoolType": {
      "type": "string",
      "defaultValue": "Pooled DepthFirst",
      "allowedValues": [
        "Pooled DepthFirst",
        "Pooled BreadthFirst",
        "Personal Automatic",
        "Personal Direct"
      ],
      "metadata": {
        "description": "These options specify the host pool type and depending on the type provides the load balancing options and assignment types."
      }
    },
    "Identifier": {
      "type": "string",
      "defaultValue": "avd",
      "maxLength": 3,
      "metadata": {
        "description": "The unique identifier between each business unit or project supporting AVD in your tenant. This is the unique naming component between each AVD stamp."
      }
    },
    "ImageOffer": {
      "type": "string",
      "defaultValue": "office-365",
      "metadata": {
        "description": "Offer for the virtual machine image"
      }
    },
    "ImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsDesktop",
      "metadata": {
        "description": "Publisher for the virtual machine image"
      }
    },
    "ImageSku": {
      "type": "string",
      "defaultValue": "win11-22h2-avd-m365",
      "metadata": {
        "description": "SKU for the virtual machine image"
      }
    },
    "ImageVersionResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID for the Compute Gallery Image Version. Do not set this value if using a marketplace image."
      }
    },
    "KerberosEncryption": {
      "type": "string",
      "defaultValue": "RC4",
      "allowedValues": [
        "AES256",
        "RC4"
      ],
      "metadata": {
        "description": "The Active Directory computer object Kerberos encryption type for the Azure Storage Account or Azure NetApp Files Account."
      }
    },
    "LocationControlPlane": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The deployment location for the AVD management resources."
      }
    },
    "LogAnalyticsWorkspaceRetention": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 30,
      "maxValue": 730,
      "metadata": {
        "description": "The retention for the Log Analytics Workspace to setup the AVD Monitoring solution"
      }
    },
    "LogAnalyticsWorkspaceSku": {
      "type": "string",
      "defaultValue": "PerGB2018",
      "allowedValues": [
        "Free",
        "Standard",
        "Premium",
        "PerNode",
        "PerGB2018",
        "Standalone",
        "CapacityReservation"
      ],
      "metadata": {
        "description": "The SKU for the Log Analytics Workspace to setup the AVD Monitoring solution"
      }
    },
    "MaxSessionLimit": {
      "type": "int",
      "metadata": {
        "description": "The maximum number of sessions per AVD session host."
      }
    },
    "Monitoring": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploys the required monitoring resources to enable AVD Insights and monitor features in the automation account."
      }
    },
    "OuPath": {
      "type": "string",
      "metadata": {
        "description": "The distinguished name for the target Organization Unit in Active Directory Domain Services."
      }
    },
    "RecoveryServices": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable backups to an Azure Recovery Services vault.  For a pooled host pool this will enable backups on the Azure file share.  For a personal host pool this will enable backups on the AVD sessions hosts."
      }
    },
    "ScalingBeginPeakTime": {
      "type": "string",
      "defaultValue": "9:00",
      "metadata": {
        "description": "Time when session hosts will scale up and continue to stay on to support peak demand; Format 24 hours e.g. 9:00 for 9am"
      }
    },
    "ScalingEndPeakTime": {
      "type": "string",
      "defaultValue": "17:00",
      "metadata": {
        "description": "Time when session hosts will scale down and stay off to support low demand; Format 24 hours e.g. 17:00 for 5pm"
      }
    },
    "ScalingLimitSecondsToForceLogOffUser": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "The number of seconds to wait before automatically signing out users. If set to 0 any session host that has user sessions will be left untouched"
      }
    },
    "ScalingMinimumNumberOfRdsh": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "The minimum number of session host VMs to keep running during off-peak hours. The scaling tool will not work if all virtual machines are turned off and the Start VM On Connect solution is not enabled."
      }
    },
    "ScalingSessionThresholdPerCPU": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "The maximum number of sessions per CPU that will be used as a threshold to determine when new session host VMs need to be started during peak hours"
      }
    },
    "ScalingTool": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploys the required resources for the Scaling Tool. https://docs.microsoft.com/en-us/azure/virtual-desktop/scaling-automation-logic-apps"
      }
    },
    "SecurityLogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the log analytics workspace used for Azure Sentinel and / or Defender for Cloud. When using the Microsoft Monitoring Agent, this allows you to multihome the agent to reduce unnecessary log collection and reduce cost."
      }
    },
    "SecurityPrincipals": {
      "type": "array",
      "metadata": {
        "description": "An array of Security Principals with their object IDs and display names to assign to the AVD Application Group and FSLogix Storage."
      }
    },
    "SessionHostCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 5000,
      "metadata": {
        "description": "The number of session hosts to deploy in the host pool. Ensure you have the approved quota to deploy the desired count."
      }
    },
    "SessionHostIndex": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 4999,
      "metadata": {
        "description": "The starting number for the session hosts. This is important when adding virtual machines to ensure an update deployment is not performed on an exiting, active session host."
      }
    },
    "StampIndex": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 9,
      "metadata": {
        "description": "The stamp index allows for multiple AVD stamps with the same business unit or project to support different use cases. For example, \"0\" could be used for an office workers host pool and \"1\" could be used for a developers host pool within the \"finance\" business unit."
      }
    },
    "StorageCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "The number of storage accounts to deploy to support the required use case for the AVD stamp. https://docs.microsoft.com/en-us/azure/architecture/patterns/sharding"
      }
    },
    "StorageIndex": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 99,
      "metadata": {
        "description": "The starting number for the storage accounts to support the required use case for the AVD stamp. https://docs.microsoft.com/en-us/azure/architecture/patterns/sharding"
      }
    },
    "SubnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the subnet to place the network interfaces for the AVD session hosts."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Key / value pairs of metadata for the Azure resource groups and resources."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The timestamp is needed to differentiate deployments for certain Azure resources and must be set using a parameter."
      }
    },
    "ValidationEnvironment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "The value determines whether the hostpool should receive early AVD updates for testing."
      }
    },
    "VirtualMachinePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Local administrator password for the AVD session hosts"
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D4ads_v5",
      "metadata": {
        "description": "The VM SKU for the AVD session hosts."
      }
    },
    "VirtualMachineUsername": {
      "type": "string",
      "metadata": {
        "description": "The Local Administrator Username for the Session Hosts"
      }
    },
    "WorkspaceFriendlyName": {
      "type": "string",
      "metadata": {
        "description": "The friendly name for the AVD workspace that is displayed in the client."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ResourceNames_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "Identifier": {
            "value": "[parameters('Identifier')]"
          },
          "LocationControlPlane": {
            "value": "[parameters('LocationControlPlane')]"
          },
          "LocationVirtualMachines": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('SubnetResourceId'), '/')[2], split(parameters('SubnetResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('SubnetResourceId'), '/')[8]), '2023-04-01', 'full').location]"
          },
          "StampIndex": {
            "value": "[parameters('StampIndex')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "3801775860769308800"
            }
          },
          "parameters": {
            "Environment": {
              "type": "string"
            },
            "Identifier": {
              "type": "string"
            },
            "LocationControlPlane": {
              "type": "string"
            },
            "LocationVirtualMachines": {
              "type": "string"
            },
            "StampIndex": {
              "type": "int"
            }
          },
          "variables": {
            "$fxv#0": {
              "australiacentral": {
                "abbreviation": "auc",
                "timeDifference": "+10:00",
                "timeZone": "AUS Eastern Standard Time"
              },
              "australiacentral2": {
                "abbreviation": "auc2",
                "timeDifference": "+10:00",
                "timeZone": "AUS Eastern Standard Time"
              },
              "australiaeast": {
                "abbreviation": "aue",
                "timeDifference": "+10:00",
                "timeZone": "AUS Eastern Standard Time"
              },
              "australiasoutheast": {
                "abbreviation": "ause",
                "timeDifference": "+10:00",
                "timeZone": "AUS Eastern Standard Time"
              },
              "brazilsouth": {
                "abbreviation": "brs",
                "timeDifference": "-3:00",
                "timeZone": "E. South America Standard Time"
              },
              "brazilsoutheast": {
                "abbreviation": "brse",
                "timeDifference": "-3:00",
                "timeZone": "E. South America Standard Time"
              },
              "canadacentral": {
                "abbreviation": "cac",
                "timeDifference": "-5:00",
                "timeZone": "Eastern Standard Time"
              },
              "canadaeast": {
                "abbreviation": "cae",
                "timeDifference": "-5:00",
                "timeZone": "Eastern Standard Time"
              },
              "centralindia": {
                "abbreviation": "inc",
                "timeDifference": "+5:30",
                "timeZone": "India Standard Time"
              },
              "centralus": {
                "abbreviation": "usc",
                "timeDifference": "-6:00",
                "timeZone": "Central Standard Time"
              },
              "chinaeast": {
                "abbreviation": "cne",
                "timeDifference": "+8:00",
                "timeZone": "China Standard Time"
              },
              "chinaeast2": {
                "abbreviation": "cne2",
                "timeDifference": "+8:00",
                "timeZone": "China Standard Time"
              },
              "chinanorth": {
                "abbreviation": "cnn",
                "timeDifference": "+8:00",
                "timeZone": "China Standard Time"
              },
              "chinanorth2": {
                "abbreviation": "cnn2",
                "timeDifference": "+8:00",
                "timeZone": "China Standard Time"
              },
              "eastasia": {
                "abbreviation": "ase",
                "timeDifference": "+8:00",
                "timeZone": "China Standard Time"
              },
              "eastus": {
                "abbreviation": "use",
                "timeDifference": "-5:00",
                "timeZone": "Eastern Standard Time"
              },
              "eastus2": {
                "abbreviation": "use2",
                "timeDifference": "-5:00",
                "timeZone": "Eastern Standard Time"
              },
              "francecentral": {
                "abbreviation": "frc",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "francesouth": {
                "abbreviation": "frs",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "germanynorth": {
                "abbreviation": "den",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "germanywestcentral": {
                "abbreviation": "dewc",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "japaneast": {
                "abbreviation": "jpe",
                "timeDifference": "+9:00",
                "timeZone": "Tokyo Standard Time"
              },
              "japanwest": {
                "abbreviation": "jpw",
                "timeDifference": "+9:00",
                "timeZone": "Tokyo Standard Time"
              },
              "jioindiacentral": {
                "abbreviation": "injc",
                "timeDifference": "+5:30",
                "timeZone": "India Standard Time"
              },
              "jioindiawest": {
                "abbreviation": "injw",
                "timeDifference": "+5:30",
                "timeZone": "India Standard Time"
              },
              "koreacentral": {
                "abbreviation": "krc",
                "timeDifference": "+9:00",
                "timeZone": "Korea Standard Time"
              },
              "koreasouth": {
                "abbreviation": "krs",
                "timeDifference": "+9:00",
                "timeZone": "Korea Standard Time"
              },
              "northcentralus": {
                "abbreviation": "usnc",
                "timeDifference": "-6:00",
                "timeZone": "Central Standard Time"
              },
              "northeurope": {
                "abbreviation": "eun",
                "timeDifference": "0:00",
                "timeZone": "GMT Standard Time"
              },
              "norwayeast": {
                "abbreviation": "noe",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "norwaywest": {
                "abbreviation": "now",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "southafricanorth": {
                "abbreviation": "zan",
                "timeDifference": "+2:00",
                "timeZone": "South Africa Standard Time"
              },
              "southafricawest": {
                "abbreviation": "zaw",
                "timeDifference": "+2:00",
                "timeZone": "South Africa Standard Time"
              },
              "southcentralus": {
                "abbreviation": "ussc",
                "timeDifference": "-6:00",
                "timeZone": "Central Standard Time"
              },
              "southeastasia": {
                "abbreviation": "asse",
                "timeDifference": "+8:00",
                "timeZone": "Singapore Standard Time"
              },
              "southindia": {
                "abbreviation": "ins",
                "timeDifference": "+5:30",
                "timeZone": "India Standard Time"
              },
              "swedencentral": {
                "abbreviation": "sec",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "switzerlandnorth": {
                "abbreviation": "chn",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "switzerlandwest": {
                "abbreviation": "chw",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "uaecentral": {
                "abbreviation": "aec",
                "timeDifference": "+3:00",
                "timeZone": "Arabian Standard Time"
              },
              "uaenorth": {
                "abbreviation": "aen",
                "timeDifference": "+3:00",
                "timeZone": "Arabian Standard Time"
              },
              "uksouth": {
                "abbreviation": "uks",
                "timeDifference": "0:00",
                "timeZone": "GMT Standard Time"
              },
              "ukwest": {
                "abbreviation": "ukw",
                "timeDifference": "0:00",
                "timeZone": "GMT Standard Time"
              },
              "usdodcentral": {
                "abbreviation": "dodc",
                "timeDifference": "-6:00",
                "timeZone": "Central Standard Time"
              },
              "usdodeast": {
                "abbreviation": "dode",
                "timeDifference": "-5:00",
                "timeZone": "Eastern Standard Time"
              },
              "usgovarizona": {
                "abbreviation": "az",
                "timeDifference": "-7:00",
                "timeZone": "Mountain Standard Time"
              },
              "usgovtexas": {
                "abbreviation": "tx",
                "timeDifference": "-6:00",
                "timeZone": "Central Standard Time"
              },
              "usgovvirginia": {
                "abbreviation": "va",
                "timeDifference": "-5:00",
                "timeZone": "Eastern Standard Time"
              },
              "westcentralus": {
                "abbreviation": "uswc",
                "timeDifference": "-7:00",
                "timeZone": "Mountain Standard Time"
              },
              "westeurope": {
                "abbreviation": "euw",
                "timeDifference": "+1:00",
                "timeZone": "Central Europe Standard Time"
              },
              "westindia": {
                "abbreviation": "inw",
                "timeDifference": "+5:30",
                "timeZone": "India Standard Time"
              },
              "westus": {
                "abbreviation": "usw",
                "timeDifference": "-8:00",
                "timeZone": "Pacific Standard Time"
              },
              "westus2": {
                "abbreviation": "usw2",
                "timeDifference": "-8:00",
                "timeZone": "Pacific Standard Time"
              },
              "westus3": {
                "abbreviation": "usw3",
                "timeDifference": "-7:00",
                "timeZone": "Mountain Standard Time"
              }
            },
            "$fxv#1": {
              "automationAccounts": "aa",
              "availabilitySets": "as",
              "desktopApplicationGroups": "dag",
              "remoteApplicationGroups": "rag",
              "disks": "disk",
              "diskEncryptionSets": "des",
              "hostPools": "hp",
              "keyVaults": "kv",
              "logAnalyticsWorkspaces": "law",
              "netAppAccounts": "naa",
              "netAppCapacityPools": "nacp",
              "networkInterfaces": "nic",
              "recoveryServicesVaults": "rsv",
              "resourceGroups": "rg",
              "storageAccounts": "sa",
              "userAssignedIdentities": "uai",
              "virtualMachines": "vm",
              "workspaces": "ws"
            },
            "AvailabilitySetNamePrefix": "[format('{0}-', replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').availabilitySets), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation))]",
            "AutomationAccountName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').automationAccounts), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "DesktopApplicationGroupName": "[replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').desktopApplicationGroups), 'location', variables('Locations')[parameters('LocationControlPlane')].abbreviation)]",
            "DiskEncryptionSetName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').diskEncryptionSets), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "DiskNamePrefix": "[format('{0}-', replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').disks), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation))]",
            "FileShareNames": {
              "CloudCacheProfileContainer": [
                "profile-containers"
              ],
              "CloudCacheProfileOfficeContainer": [
                "office-containers",
                "profile-containers"
              ],
              "ProfileContainer": [
                "profile-containers"
              ],
              "ProfileOfficeContainer": [
                "office-containers",
                "profile-containers"
              ]
            },
            "HostPoolName": "[replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').hostPools), 'location', variables('Locations')[parameters('LocationControlPlane')].abbreviation)]",
            "KeyVaultName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').keyVaults), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "Locations": "[variables('$fxv#0')]",
            "LogAnalyticsWorkspaceName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').logAnalyticsWorkspaces), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "NamingConvention": "[format('resourceType-{0}-{1}-location-{2}', parameters('Identifier'), parameters('Environment'), parameters('StampIndex'))]",
            "NamingConvention_SharedServices": "[format('resourceType-{0}-{1}-location', parameters('Identifier'), parameters('Environment'))]",
            "NetAppAccountName": "[replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').netAppAccounts), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "NetAppCapacityPoolName": "[replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').netAppCapacityPools), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "NetworkInterfaceNamePrefix": "[format('{0}-', replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').networkInterfaces), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation))]",
            "RecoveryServicesVaultName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').recoveryServicesVaults), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "ResourceAbbreviations": "[variables('$fxv#1')]",
            "ResourceGroupControlPlane": "[format('{0}-vd-controlPlane', replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').resourceGroups), 'location', variables('Locations')[parameters('LocationControlPlane')].abbreviation))]",
            "ResourceGroupHosts": "[format('{0}-vd-hosts', replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').resourceGroups), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation))]",
            "ResourceGroupManagement": "[format('{0}-vd-management', replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').resourceGroups), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation))]",
            "ResourceGroupStorage": "[format('{0}-vd-storage', replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').resourceGroups), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation))]",
            "StorageAccountNamePrefix": "[replace(replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').storageAccounts), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation), '-', '')]",
            "UserAssignedIdentityName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').userAssignedIdentities), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation)]",
            "VirtualMachineNamePrefix": "[replace(replace(replace(variables('NamingConvention'), 'resourceType', variables('ResourceAbbreviations').virtualMachines), 'location', variables('Locations')[parameters('LocationVirtualMachines')].abbreviation), '-', '')]",
            "WorkspaceName": "[replace(replace(variables('NamingConvention_SharedServices'), 'resourceType', variables('ResourceAbbreviations').workspaces), 'location', variables('Locations')[parameters('LocationControlPlane')].abbreviation)]"
          },
          "resources": [],
          "outputs": {
            "AvailabilitySetNamePrefix": {
              "type": "string",
              "value": "[variables('AvailabilitySetNamePrefix')]"
            },
            "AutomationAccountName": {
              "type": "string",
              "value": "[variables('AutomationAccountName')]"
            },
            "DesktopApplicationGroupName": {
              "type": "string",
              "value": "[variables('DesktopApplicationGroupName')]"
            },
            "DiskEncryptionSetName": {
              "type": "string",
              "value": "[variables('DiskEncryptionSetName')]"
            },
            "DiskNamePrefix": {
              "type": "string",
              "value": "[variables('DiskNamePrefix')]"
            },
            "FileShareNames": {
              "type": "object",
              "value": "[variables('FileShareNames')]"
            },
            "HostPoolName": {
              "type": "string",
              "value": "[variables('HostPoolName')]"
            },
            "KeyVaultName": {
              "type": "string",
              "value": "[variables('KeyVaultName')]"
            },
            "Locations": {
              "type": "object",
              "value": "[variables('Locations')]"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[variables('LogAnalyticsWorkspaceName')]"
            },
            "NetAppAccountName": {
              "type": "string",
              "value": "[variables('NetAppAccountName')]"
            },
            "NetAppCapacityPoolName": {
              "type": "string",
              "value": "[variables('NetAppCapacityPoolName')]"
            },
            "NetworkInterfaceNamePrefix": {
              "type": "string",
              "value": "[variables('NetworkInterfaceNamePrefix')]"
            },
            "RecoveryServicesVaultName": {
              "type": "string",
              "value": "[variables('RecoveryServicesVaultName')]"
            },
            "ResourceGroupControlPlane": {
              "type": "string",
              "value": "[variables('ResourceGroupControlPlane')]"
            },
            "ResourceGroupHosts": {
              "type": "string",
              "value": "[variables('ResourceGroupHosts')]"
            },
            "ResourceGroupManagement": {
              "type": "string",
              "value": "[variables('ResourceGroupManagement')]"
            },
            "ResourceGroupStorage": {
              "type": "string",
              "value": "[variables('ResourceGroupStorage')]"
            },
            "StorageAccountNamePrefix": {
              "type": "string",
              "value": "[variables('StorageAccountNamePrefix')]"
            },
            "UserAssignedIdentityName": {
              "type": "string",
              "value": "[variables('UserAssignedIdentityName')]"
            },
            "VirtualMachineNamePrefix": {
              "type": "string",
              "value": "[variables('VirtualMachineNamePrefix')]"
            },
            "WorkspaceName": {
              "type": "string",
              "value": "[variables('WorkspaceName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Logic_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ActiveDirectorySolution": {
            "value": "[parameters('ActiveDirectorySolution')]"
          },
          "DiskSku": {
            "value": "[parameters('DiskSku')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "FileShareNames": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.FileShareNames.value]"
          },
          "FslogixSolution": {
            "value": "[parameters('FslogixSolution')]"
          },
          "FslogixStorage": {
            "value": "[parameters('FslogixStorage')]"
          },
          "HostPoolType": {
            "value": "[parameters('HostPoolType')]"
          },
          "ImageOffer": {
            "value": "[parameters('ImageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('ImagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "Locations": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Locations.value]"
          },
          "LocationVirtualMachines": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('SubnetResourceId'), '/')[2], split(parameters('SubnetResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('SubnetResourceId'), '/')[8]), '2023-04-01', 'full').location]"
          },
          "ResourceGroupControlPlane": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupControlPlane.value]"
          },
          "ResourceGroupHosts": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupHosts.value]"
          },
          "ResourceGroupManagement": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value]"
          },
          "ResourceGroupStorage": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupStorage.value]"
          },
          "SecurityPrincipals": {
            "value": "[parameters('SecurityPrincipals')]"
          },
          "SessionHostCount": {
            "value": "[parameters('SessionHostCount')]"
          },
          "SessionHostIndex": {
            "value": "[parameters('SessionHostIndex')]"
          },
          "VirtualMachineNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VirtualMachineNamePrefix.value]"
          },
          "VirtualMachineSize": {
            "value": "[parameters('VirtualMachineSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "10843858790145489049"
            }
          },
          "parameters": {
            "ActiveDirectorySolution": {
              "type": "string"
            },
            "DiskSku": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "FileShareNames": {
              "type": "object"
            },
            "FslogixSolution": {
              "type": "string"
            },
            "FslogixStorage": {
              "type": "string"
            },
            "HostPoolType": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "Locations": {
              "type": "object"
            },
            "LocationVirtualMachines": {
              "type": "string"
            },
            "ResourceGroupControlPlane": {
              "type": "string"
            },
            "ResourceGroupHosts": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "ResourceGroupStorage": {
              "type": "string"
            },
            "SecurityPrincipals": {
              "type": "array"
            },
            "SessionHostCount": {
              "type": "int"
            },
            "SessionHostIndex": {
              "type": "int"
            },
            "VirtualMachineNamePrefix": {
              "type": "string"
            },
            "VirtualMachineSize": {
              "type": "string"
            }
          },
          "variables": {
            "MaxResourcesPerTemplateDeployment": 79,
            "DivisionValue": "[div(parameters('SessionHostCount'), variables('MaxResourcesPerTemplateDeployment'))]",
            "DivisionRemainderValue": "[mod(parameters('SessionHostCount'), variables('MaxResourcesPerTemplateDeployment'))]",
            "SessionHostBatchCount": "[if(greater(variables('DivisionRemainderValue'), 0), add(variables('DivisionValue'), 1), variables('DivisionValue'))]",
            "MaxAvSetMembers": 200,
            "BeginAvSetRange": "[div(parameters('SessionHostIndex'), variables('MaxAvSetMembers'))]",
            "EndAvSetRange": "[div(add(parameters('SessionHostCount'), parameters('SessionHostIndex')), variables('MaxAvSetMembers'))]",
            "AvailabilitySetsCount": "[length(range(variables('BeginAvSetRange'), add(sub(variables('EndAvSetRange'), variables('BeginAvSetRange')), 1)))]",
            "FileShares": "[parameters('FileShareNames')[parameters('FslogixSolution')]]",
            "Fslogix": "[if(or(equals(parameters('FslogixStorage'), 'None'), not(contains(parameters('ActiveDirectorySolution'), 'DomainServices'))), false(), true())]",
            "Netbios": "[split(parameters('DomainName'), '.')[0]]",
            "PooledHostPool": "[if(equals(split(parameters('HostPoolType'), ' ')[0], 'Pooled'), true(), false())]",
            "PrivateEndpoint": "[if(contains(parameters('FslogixStorage'), 'PrivateEndpoint'), true(), false())]",
            "ResourceGroups": "[if(variables('Fslogix'), createArray(parameters('ResourceGroupControlPlane'), parameters('ResourceGroupHosts'), parameters('ResourceGroupManagement'), parameters('ResourceGroupStorage')), createArray(parameters('ResourceGroupControlPlane'), parameters('ResourceGroupHosts'), parameters('ResourceGroupManagement')))]",
            "RoleDefinitions": {
              "DesktopVirtualizationPowerOnContributor": "489581de-a3bd-480d-9518-53dea7416b33",
              "DesktopVirtualizationUser": "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
              "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "VirtualMachineUserLogin": "fb879df8-f326-4884-b1cf-06f3ad86be52"
            },
            "SecurityPrincipalsCount": "[length(parameters('SecurityPrincipals'))]",
            "SmbServerLocation": "[parameters('Locations')[parameters('LocationVirtualMachines')].abbreviation]",
            "StorageSku": "[if(equals(parameters('FslogixStorage'), 'None'), 'None', split(parameters('FslogixStorage'), ' ')[1])]",
            "StorageSolution": "[split(parameters('FslogixStorage'), ' ')[0]]",
            "StorageSuffix": "[environment().suffixes.storage]",
            "TimeDifference": "[parameters('Locations')[parameters('LocationVirtualMachines')].timeDifference]",
            "TimeZone": "[parameters('Locations')[parameters('LocationVirtualMachines')].timeZone]",
            "VmTemplate": "[format('{{\"domain\":\"{0}\",\"galleryImageOffer\":\"{1}\",\"galleryImagePublisher\":\"{2}\",\"galleryImageSKU\":\"{3}\",\"imageType\":\"Gallery\",\"imageUri\":null,\"customImageId\":null,\"namePrefix\":\"{4}\",\"osDiskType\":\"{5}\",\"useManagedDisks\":true,\"VirtualMachineSize\":{{\"id\":\"{6}\",\"cores\":null,\"ram\":null}},\"galleryItemId\":\"{7}.{8}{9}\"}}', parameters('DomainName'), parameters('ImageOffer'), parameters('ImagePublisher'), parameters('ImageSku'), parameters('VirtualMachineNamePrefix'), parameters('DiskSku'), parameters('VirtualMachineSize'), parameters('ImagePublisher'), parameters('ImageOffer'), parameters('ImageSku'))]"
          },
          "resources": [],
          "outputs": {
            "AvailabilitySetsCount": {
              "type": "int",
              "value": "[variables('AvailabilitySetsCount')]"
            },
            "BeginAvSetRange": {
              "type": "int",
              "value": "[variables('BeginAvSetRange')]"
            },
            "DivisionRemainderValue": {
              "type": "int",
              "value": "[variables('DivisionRemainderValue')]"
            },
            "FileShares": {
              "type": "array",
              "value": "[variables('FileShares')]"
            },
            "Fslogix": {
              "type": "bool",
              "value": "[variables('Fslogix')]"
            },
            "MaxResourcesPerTemplateDeployment": {
              "type": "int",
              "value": "[variables('MaxResourcesPerTemplateDeployment')]"
            },
            "Netbios": {
              "type": "string",
              "value": "[variables('Netbios')]"
            },
            "PooledHostPool": {
              "type": "bool",
              "value": "[variables('PooledHostPool')]"
            },
            "PrivateEndpoint": {
              "type": "bool",
              "value": "[variables('PrivateEndpoint')]"
            },
            "ResourceGroups": {
              "type": "array",
              "value": "[variables('ResourceGroups')]"
            },
            "RoleDefinitions": {
              "type": "object",
              "value": "[variables('RoleDefinitions')]"
            },
            "SessionHostBatchCount": {
              "type": "int",
              "value": "[variables('SessionHostBatchCount')]"
            },
            "SecurityPrincipalsCount": {
              "type": "int",
              "value": "[variables('SecurityPrincipalsCount')]"
            },
            "SmbServerLocation": {
              "type": "string",
              "value": "[variables('SmbServerLocation')]"
            },
            "StorageSku": {
              "type": "string",
              "value": "[variables('StorageSku')]"
            },
            "StorageSolution": {
              "type": "string",
              "value": "[variables('StorageSolution')]"
            },
            "StorageSuffix": {
              "type": "string",
              "value": "[variables('StorageSuffix')]"
            },
            "TimeDifference": {
              "type": "string",
              "value": "[variables('TimeDifference')]"
            },
            "TimeZone": {
              "type": "string",
              "value": "[variables('TimeZone')]"
            },
            "VmTemplate": {
              "type": "string",
              "value": "[variables('VmTemplate')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ResourceGroups_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "LocationControlPlane": {
            "value": "[parameters('LocationControlPlane')]"
          },
          "LocationVirtualMachines": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('SubnetResourceId'), '/')[2], split(parameters('SubnetResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('SubnetResourceId'), '/')[8]), '2023-04-01', 'full').location]"
          },
          "ResourceGroups": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroups.value]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "13937078455480079595"
            }
          },
          "parameters": {
            "LocationControlPlane": {
              "type": "string"
            },
            "LocationVirtualMachines": {
              "type": "string"
            },
            "ResourceGroups": {
              "type": "array"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "resourceGroups",
                "count": "[length(range(0, length(parameters('ResourceGroups'))))]"
              },
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2020-10-01",
              "name": "[parameters('ResourceGroups')[range(0, length(parameters('ResourceGroups')))[copyIndex()]]]",
              "location": "[if(contains(parameters('ResourceGroups')[range(0, length(parameters('ResourceGroups')))[copyIndex()]], 'controlPlane'), parameters('LocationControlPlane'), parameters('LocationVirtualMachines'))]",
              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Resources/resourceGroups'), parameters('Tags')['Microsoft.Resources/resourceGroups'], createObject())]"
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Management_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ActiveDirectorySolution": {
            "value": "[parameters('ActiveDirectorySolution')]"
          },
          "ArtifactsLocation": {
            "value": "[parameters('ArtifactsLocation')]"
          },
          "ArtifactsStorageAccountResourceId": {
            "value": "[parameters('ArtifactsStorageAccountResourceId')]"
          },
          "AutomationAccountName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.AutomationAccountName.value]"
          },
          "Availability": {
            "value": "[parameters('Availability')]"
          },
          "AvdObjectId": {
            "value": "[parameters('AvdObjectId')]"
          },
          "AzurePowerShellAzModuleMsiLink": {
            "value": "[parameters('AzurePowerShellAzModuleMsiLink')]"
          },
          "LocationControlPlane": {
            "value": "[parameters('LocationControlPlane')]"
          },
          "DiskEncryption": {
            "value": "[parameters('DiskEncryption')]"
          },
          "DiskEncryptionSetName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.DiskEncryptionSetName.value]"
          },
          "DiskNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.DiskNamePrefix.value]"
          },
          "DiskSku": {
            "value": "[parameters('DiskSku')]"
          },
          "DomainJoinPassword": {
            "value": "[parameters('DomainJoinPassword')]"
          },
          "DomainJoinUserPrincipalName": {
            "value": "[parameters('DomainJoinUserPrincipalName')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "DrainMode": {
            "value": "[parameters('DrainMode')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "Fslogix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Fslogix.value]"
          },
          "FslogixSolution": {
            "value": "[parameters('FslogixSolution')]"
          },
          "FslogixStorage": {
            "value": "[parameters('FslogixStorage')]"
          },
          "HostPoolType": {
            "value": "[parameters('HostPoolType')]"
          },
          "KerberosEncryption": {
            "value": "[parameters('KerberosEncryption')]"
          },
          "KeyVaultName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.KeyVaultName.value]"
          },
          "LogAnalyticsWorkspaceName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.LogAnalyticsWorkspaceName.value]"
          },
          "LogAnalyticsWorkspaceRetention": {
            "value": "[parameters('LogAnalyticsWorkspaceRetention')]"
          },
          "LogAnalyticsWorkspaceSku": {
            "value": "[parameters('LogAnalyticsWorkspaceSku')]"
          },
          "Monitoring": {
            "value": "[parameters('Monitoring')]"
          },
          "NetworkInterfaceNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.NetworkInterfaceNamePrefix.value]"
          },
          "PooledHostPool": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.PooledHostPool.value]"
          },
          "RecoveryServices": {
            "value": "[parameters('RecoveryServices')]"
          },
          "RecoveryServicesVaultName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.RecoveryServicesVaultName.value]"
          },
          "ResourceGroupManagement": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value]"
          },
          "ResourceGroupStorage": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupStorage.value]"
          },
          "RoleDefinitions": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.RoleDefinitions.value]"
          },
          "SessionHostCount": {
            "value": "[parameters('SessionHostCount')]"
          },
          "StorageSolution": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageSolution.value]"
          },
          "SubnetResourceId": {
            "value": "[parameters('SubnetResourceId')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "TimeZone": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.TimeZone.value]"
          },
          "UserAssignedIdentityName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.UserAssignedIdentityName.value]"
          },
          "LocationVirtualMachines": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('SubnetResourceId'), '/')[2], split(parameters('SubnetResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('SubnetResourceId'), '/')[8]), '2023-04-01', 'full').location]"
          },
          "VirtualMachineNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VirtualMachineNamePrefix.value]"
          },
          "VirtualMachinePassword": {
            "value": "[parameters('VirtualMachinePassword')]"
          },
          "VirtualMachineSize": {
            "value": "[parameters('VirtualMachineSize')]"
          },
          "VirtualMachineUsername": {
            "value": "[parameters('VirtualMachineUsername')]"
          },
          "WorkspaceFriendlyName": {
            "value": "[parameters('WorkspaceFriendlyName')]"
          },
          "WorkspaceName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.WorkspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2601528657426750581"
            }
          },
          "parameters": {
            "ActiveDirectorySolution": {
              "type": "string"
            },
            "ArtifactsLocation": {
              "type": "string"
            },
            "ArtifactsStorageAccountResourceId": {
              "type": "string"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "Availability": {
              "type": "string"
            },
            "AvdObjectId": {
              "type": "string"
            },
            "AzurePowerShellAzModuleMsiLink": {
              "type": "string"
            },
            "LocationControlPlane": {
              "type": "string"
            },
            "DiskNamePrefix": {
              "type": "string"
            },
            "DiskEncryption": {
              "type": "bool"
            },
            "DiskEncryptionSetName": {
              "type": "string"
            },
            "DiskSku": {
              "type": "string"
            },
            "DomainJoinPassword": {
              "type": "securestring"
            },
            "DomainJoinUserPrincipalName": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "DrainMode": {
              "type": "bool"
            },
            "Environment": {
              "type": "string"
            },
            "Fslogix": {
              "type": "bool"
            },
            "FslogixSolution": {
              "type": "string"
            },
            "FslogixStorage": {
              "type": "string"
            },
            "HostPoolType": {
              "type": "string"
            },
            "KerberosEncryption": {
              "type": "string"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "LocationVirtualMachines": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceRetention": {
              "type": "int"
            },
            "LogAnalyticsWorkspaceSku": {
              "type": "string"
            },
            "Monitoring": {
              "type": "bool"
            },
            "NetworkInterfaceNamePrefix": {
              "type": "string"
            },
            "PooledHostPool": {
              "type": "bool"
            },
            "RecoveryServices": {
              "type": "bool"
            },
            "RecoveryServicesVaultName": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "ResourceGroupStorage": {
              "type": "string"
            },
            "RoleDefinitions": {
              "type": "object"
            },
            "SessionHostCount": {
              "type": "int"
            },
            "StorageSolution": {
              "type": "string"
            },
            "SubnetResourceId": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "TimeZone": {
              "type": "string"
            },
            "UserAssignedIdentityName": {
              "type": "string"
            },
            "VirtualMachineNamePrefix": {
              "type": "string"
            },
            "VirtualMachinePassword": {
              "type": "securestring"
            },
            "VirtualMachineUsername": {
              "type": "string"
            },
            "VirtualMachineSize": {
              "type": "string"
            },
            "WorkspaceFriendlyName": {
              "type": "string"
            },
            "WorkspaceName": {
              "type": "string"
            }
          },
          "variables": {
            "CpuCountMax": "[if(contains(parameters('HostPoolType'), 'Pooled'), 32, 128)]",
            "CpuCountMin": "[if(contains(parameters('HostPoolType'), 'Pooled'), 4, 2)]",
            "VirtualNetworkName": "[split(parameters('SubnetResourceId'), '/')[8]]",
            "VirtualNetworkResourceGroupName": "[split(parameters('SubnetResourceId'), '/')[4]]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('UserAssignedIdentityName'), parameters('RoleDefinitions').Reader, subscription().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitions').Reader)]",
                "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('AvdObjectId'), parameters('RoleDefinitions').DesktopVirtualizationPowerOnContributor, subscription().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitions').DesktopVirtualizationPowerOnContributor)]",
                "principalId": "[parameters('AvdObjectId')]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('UserAssignedIdentity_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ArtifactsStorageAccountResourceId": {
                    "value": "[parameters('ArtifactsStorageAccountResourceId')]"
                  },
                  "DiskEncryption": {
                    "value": "[parameters('DiskEncryption')]"
                  },
                  "DrainMode": {
                    "value": "[parameters('DrainMode')]"
                  },
                  "Fslogix": {
                    "value": "[parameters('Fslogix')]"
                  },
                  "FslogixStorage": {
                    "value": "[parameters('FslogixStorage')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "UserAssignedIdentityName": {
                    "value": "[parameters('UserAssignedIdentityName')]"
                  },
                  "ResourceGroupStorage": {
                    "value": "[parameters('ResourceGroupStorage')]"
                  },
                  "Tags": "[if(contains(parameters('Tags'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), createObject('value', parameters('Tags')['Microsoft.ManagedIdentity/userAssignedIdentities']), createObject('value', createObject()))]",
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "VirtualNetworkResourceGroupName": {
                    "value": "[split(parameters('SubnetResourceId'), '/')[4]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "18360935203891251409"
                    }
                  },
                  "parameters": {
                    "ArtifactsStorageAccountResourceId": {
                      "type": "string"
                    },
                    "DiskEncryption": {
                      "type": "bool"
                    },
                    "DrainMode": {
                      "type": "bool"
                    },
                    "Fslogix": {
                      "type": "bool"
                    },
                    "FslogixStorage": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ResourceGroupStorage": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "UserAssignedIdentityName": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroupName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "ArtifactsStorageRoleAssignment": "[if(not(empty(parameters('ArtifactsStorageAccountResourceId'))), createArray(createObject('roleDefinitionId', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1', 'scope', format('{0}, {1}', split(parameters('ArtifactsStorageAccountResourceId'), '/')[2], split(parameters('ArtifactsStorageAccountResourceId'), '/')[4]))), createArray())]",
                    "DiskEncryptionRoleAssignment": "[if(parameters('DiskEncryption'), createArray(createObject('roleDefinitionId', '14b46e9e-c2b7-41b4-b07b-48a6ebf60603', 'scope', resourceGroup().name)), createArray())]",
                    "DrainModeRoleAssignment": "[if(parameters('DrainMode'), createArray(createObject('roleDefinitionId', '2ad6aaab-ead9-4eaa-8ac5-da422f562408', 'scope', resourceGroup().name)), createArray())]",
                    "FSLogixNtfsRoleAssignments": "[if(parameters('Fslogix'), createArray(createObject('roleDefinitionId', 'a959dbd1-f747-45e3-8ba6-dd80f235f97c', 'scope', resourceGroup().name), createObject('roleDefinitionId', '17d1049b-9a84-46fb-8f53-869881c3d3ab', 'scope', parameters('ResourceGroupStorage'))), createArray())]",
                    "FSLogixPrivateEndpointRoleAssignment": "[if(contains(parameters('FslogixStorage'), 'PrivateEndpoint'), createArray(createObject('roleDefinitionId', '4d97b98b-1d4f-4787-a291-c67834d212e7', 'scope', parameters('VirtualNetworkResourceGroupName'))), createArray())]",
                    "FSLogixRoleAssignments": "[union(variables('FSLogixNtfsRoleAssignments'), variables('FSLogixPrivateEndpointRoleAssignment'))]",
                    "RoleAssignments": "[union(variables('ArtifactsStorageRoleAssignment'), variables('DiskEncryptionRoleAssignment'), variables('DrainModeRoleAssignment'), variables('FSLogixRoleAssignments'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2018-11-30",
                      "name": "[parameters('UserAssignedIdentityName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]"
                    },
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(range(0, length(variables('RoleAssignments'))))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('UAI_RoleAssignment_{0}_{1}', range(0, length(variables('RoleAssignments')))[copyIndex()], parameters('Timestamp'))]",
                      "resourceGroup": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].scope]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "PrincipalId": {
                            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName')), '2018-11-30').principalId]"
                          },
                          "PrincipalType": {
                            "value": "ServicePrincipal"
                          },
                          "RoleDefinitionId": {
                            "value": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]].roleDefinitionId]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "3512679634413550227"
                            }
                          },
                          "parameters": {
                            "PrincipalId": {
                              "type": "string"
                            },
                            "PrincipalType": {
                              "type": "string"
                            },
                            "RoleDefinitionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                                "principalId": "[parameters('PrincipalId')]",
                                "principalType": "[parameters('PrincipalType')]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "clientId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName')), '2018-11-30').clientId]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName'))]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName')), '2018-11-30').principalId]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('DiskEncryption')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('DiskEncryption_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "DiskEncryptionSetName": {
                    "value": "[parameters('DiskEncryptionSetName')]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "KeyVaultName": {
                    "value": "[parameters('KeyVaultName')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "TagsDiskEncryptionSet": "[if(contains(parameters('Tags'), 'Microsoft.Compute/diskEncryptionSets'), createObject('value', parameters('Tags')['Microsoft.Compute/diskEncryptionSets']), createObject('value', createObject()))]",
                  "TagsKeyVault": "[if(contains(parameters('Tags'), 'Microsoft.KeyVault/vaults'), createObject('value', parameters('Tags')['Microsoft.KeyVault/vaults']), createObject('value', createObject()))]",
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "UserAssignedIdentityPrincipalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]"
                  },
                  "UserAssignedIdentityResourceId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13477580203417678602"
                    }
                  },
                  "parameters": {
                    "DiskEncryptionKeyExpirationInDays": {
                      "type": "int",
                      "defaultValue": 30
                    },
                    "DiskEncryptionSetName": {
                      "type": "string"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "KeyVaultName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "TagsDiskEncryptionSet": {
                      "type": "object"
                    },
                    "TagsKeyVault": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "UserAssignedIdentityPrincipalId": {
                      "type": "string"
                    },
                    "UserAssignedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('KeyVaultName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsKeyVault')]",
                      "properties": {
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": true,
                        "enabledForTemplateDeployment": false,
                        "enablePurgeProtection": true,
                        "enableRbacAuthorization": true,
                        "enableSoftDelete": true,
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "softDeleteRetentionInDays": "[if(or(equals(parameters('Environment'), 'd'), equals(parameters('Environment'), 't')), 7, 90)]",
                        "tenantId": "[subscription().tenantId]"
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/keys",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'DiskEncryptionKey')]",
                      "tags": "[parameters('TagsKeyVault')]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "keySize": 4096,
                        "kty": "RSA",
                        "rotationPolicy": {
                          "attributes": {
                            "expiryTime": "[format('P{0}D', string(parameters('DiskEncryptionKeyExpirationInDays')))]"
                          },
                          "lifetimeActions": [
                            {
                              "action": {
                                "type": "notify"
                              },
                              "trigger": {
                                "timeBeforeExpiry": "P10D"
                              }
                            },
                            {
                              "action": {
                                "type": "rotate"
                              },
                              "trigger": {
                                "timeAfterCreate": "[format('P{0}D', string(sub(parameters('DiskEncryptionKeyExpirationInDays'), 7)))]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/diskEncryptionSets",
                      "apiVersion": "2022-07-02",
                      "name": "[parameters('DiskEncryptionSetName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsDiskEncryptionSet')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                        }
                      },
                      "properties": {
                        "activeKey": {
                          "sourceVault": {
                            "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                          },
                          "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', parameters('KeyVaultName'), 'DiskEncryptionKey'), '2022-07-01').keyUriWithVersion]"
                        },
                        "encryptionType": "EncryptionAtRestWithPlatformAndCustomerKeys",
                        "federatedClientId": "None",
                        "rotationToLatestKeyVersionEnabled": true
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('KeyVaultName'), 'DiskEncryptionKey')]",
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('RoleAssignment_{0}', parameters('Timestamp'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "PrincipalId": {
                            "value": "[parameters('UserAssignedIdentityPrincipalId')]"
                          },
                          "PrincipalType": {
                            "value": "ServicePrincipal"
                          },
                          "RoleDefinitionId": {
                            "value": "e147488a-f6f5-4113-8e2d-b22465e65bf6"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "3512679634413550227"
                            }
                          },
                          "parameters": {
                            "PrincipalId": {
                              "type": "string"
                            },
                            "PrincipalType": {
                              "type": "string"
                            },
                            "RoleDefinitionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                                "principalId": "[parameters('PrincipalId')]",
                                "principalType": "[parameters('PrincipalType')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "diskEncryptionSetResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('DiskEncryptionSetName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "condition": "[contains(parameters('ActiveDirectorySolution'), 'DomainServices')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ManagementVirtualMachine_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ArtifactsLocation": {
                    "value": "[parameters('ArtifactsLocation')]"
                  },
                  "AzurePowerShellAzModuleMsiLink": {
                    "value": "[parameters('AzurePowerShellAzModuleMsiLink')]"
                  },
                  "DiskEncryption": {
                    "value": "[parameters('DiskEncryption')]"
                  },
                  "DiskEncryptionSetResourceId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('DiskEncryption_{0}', parameters('Timestamp'))), '2022-09-01').outputs.diskEncryptionSetResourceId.value]"
                  },
                  "DiskNamePrefix": {
                    "value": "[parameters('DiskNamePrefix')]"
                  },
                  "DiskSku": {
                    "value": "[parameters('DiskSku')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "NetworkInterfaceNamePrefix": {
                    "value": "[parameters('NetworkInterfaceNamePrefix')]"
                  },
                  "Subnet": {
                    "value": "[split(parameters('SubnetResourceId'), '/')[10]]"
                  },
                  "TagsNetworkInterfaces": "[if(contains(parameters('Tags'), 'Microsoft.Network/networkInterfaces'), createObject('value', parameters('Tags')['Microsoft.Network/networkInterfaces']), createObject('value', createObject()))]",
                  "TagsVirtualMachines": "[if(contains(parameters('Tags'), 'Microsoft.Compute/virtualMachines'), createObject('value', parameters('Tags')['Microsoft.Compute/virtualMachines']), createObject('value', createObject()))]",
                  "UserAssignedIdentityClientId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.clientId.value]"
                  },
                  "UserAssignedIdentityResourceId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.id.value]"
                  },
                  "VirtualNetwork": {
                    "value": "[variables('VirtualNetworkName')]"
                  },
                  "VirtualNetworkResourceGroup": {
                    "value": "[variables('VirtualNetworkResourceGroupName')]"
                  },
                  "VirtualMachineNamePrefix": {
                    "value": "[parameters('VirtualMachineNamePrefix')]"
                  },
                  "VirtualMachinePassword": {
                    "value": "[parameters('VirtualMachinePassword')]"
                  },
                  "VirtualMachineUsername": {
                    "value": "[parameters('VirtualMachineUsername')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17110287019682958719"
                    }
                  },
                  "parameters": {
                    "ArtifactsLocation": {
                      "type": "string"
                    },
                    "AzurePowerShellAzModuleMsiLink": {
                      "type": "string"
                    },
                    "DiskEncryption": {
                      "type": "bool"
                    },
                    "DiskEncryptionSetResourceId": {
                      "type": "string"
                    },
                    "DiskNamePrefix": {
                      "type": "string"
                    },
                    "DiskSku": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "NetworkInterfaceNamePrefix": {
                      "type": "string"
                    },
                    "Subnet": {
                      "type": "string"
                    },
                    "TagsNetworkInterfaces": {
                      "type": "object"
                    },
                    "TagsVirtualMachines": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string",
                      "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
                    },
                    "UserAssignedIdentityClientId": {
                      "type": "string"
                    },
                    "UserAssignedIdentityResourceId": {
                      "type": "string"
                    },
                    "VirtualNetwork": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroup": {
                      "type": "string"
                    },
                    "VirtualMachineNamePrefix": {
                      "type": "string"
                    },
                    "VirtualMachinePassword": {
                      "type": "securestring"
                    },
                    "VirtualMachineUsername": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "NicName": "[format('{0}mgt', parameters('NetworkInterfaceNamePrefix'))]",
                    "VmName": "[format('{0}mgt', parameters('VirtualMachineNamePrefix'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2020-05-01",
                      "name": "[variables('NicName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsNetworkInterfaces')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": false,
                        "enableIPForwarding": false
                      }
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-11-01",
                      "name": "[variables('VmName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "Standard_B2s"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "2019-datacenter-core-g2",
                            "version": "latest"
                          },
                          "osDisk": {
                            "deleteOption": "Delete",
                            "osType": "Windows",
                            "createOption": "FromImage",
                            "caching": "None",
                            "managedDisk": {
                              "diskEncryptionSet": "[if(parameters('DiskEncryption'), createObject('id', parameters('DiskEncryptionSetResourceId')), null())]",
                              "storageAccountType": "[parameters('DiskSku')]"
                            },
                            "name": "[format('{0}mgt', parameters('DiskNamePrefix'))]"
                          },
                          "dataDisks": []
                        },
                        "osProfile": {
                          "computerName": "[variables('VmName')]",
                          "adminUsername": "[parameters('VirtualMachineUsername')]",
                          "adminPassword": "[parameters('VirtualMachinePassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": true
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "securityProfile": {
                          "uefiSettings": {
                            "secureBootEnabled": true,
                            "vTpmEnabled": true
                          },
                          "securityType": "TrustedLaunch",
                          "encryptionAtHost": "[parameters('DiskEncryption')]"
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": false
                          }
                        },
                        "licenseType": "Windows_Server"
                      },
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-07-01",
                      "name": "[format('{0}/{1}', variables('VmName'), 'JsonADDomainExtension')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "Name": "[parameters('DomainName')]",
                          "User": "[parameters('DomainJoinUserPrincipalName')]",
                          "Restart": "true",
                          "Options": "3"
                        },
                        "protectedSettings": {
                          "Password": "[parameters('DomainJoinPassword')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('VmName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('CSE_InstallAzurePowerShellAzModule_{0}', parameters('Timestamp'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "ArtifactsLocation": {
                            "value": "[parameters('ArtifactsLocation')]"
                          },
                          "File": {
                            "value": "Install-AzurePowerShellAzModule.ps1"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Parameters": {
                            "value": "[format('-URI {0}', parameters('AzurePowerShellAzModuleMsiLink'))]"
                          },
                          "Tags": {
                            "value": "[parameters('TagsVirtualMachines')]"
                          },
                          "VirtualMachineName": {
                            "value": "[variables('VmName')]"
                          },
                          "UserAssignedIdentityClientId": {
                            "value": "[parameters('UserAssignedIdentityClientId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "9729081366734116244"
                            }
                          },
                          "parameters": {
                            "ArtifactsLocation": {
                              "type": "string"
                            },
                            "File": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Parameters": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string",
                              "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
                            },
                            "UserAssignedIdentityClientId": {
                              "type": "string"
                            },
                            "VirtualMachineName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "CommandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} {1}', parameters('File'), parameters('Parameters'))]",
                            "FileUri": "[format('{0}{1}', parameters('ArtifactsLocation'), parameters('File'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2021-03-01",
                              "name": "[format('{0}/{1}', parameters('VirtualMachineName'), 'CustomScriptExtension')]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.10",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "timestamp": "[parameters('Timestamp')]"
                                },
                                "protectedSettings": "[if(contains(parameters('File'), environment().suffixes.storage), createObject('commandToExecute', variables('CommandToExecute'), 'fileUris', createArray(variables('FileUri')), 'managedIdentity', createObject('clientId', parameters('UserAssignedIdentityClientId'))), createObject('commandToExecute', variables('CommandToExecute'), 'fileUris', createArray(variables('FileUri'))))]"
                              }
                            }
                          ],
                          "outputs": {
                            "value": {
                              "type": "object",
                              "value": "[json(filter(reference(resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VirtualMachineName'), 'CustomScriptExtension'), '2021-03-01').instanceView.substatuses, lambda('item', equals(lambdaVariables('item').code, 'ComponentStatus/StdOut/succeeded')))[0].message)]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('VmName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "Name": {
                      "type": "string",
                      "value": "[variables('VmName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('DiskEncryption_{0}', parameters('Timestamp')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Validations_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ArtifactsLocation": {
                    "value": "[parameters('ArtifactsLocation')]"
                  },
                  "File": {
                    "value": "Get-Validations.ps1"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "Parameters": {
                    "value": "[format('-CpuCountMax {0} -CpuCountMin {1} -DomainName {2} -Environment {3} -KerberosEncryption {4} -Location {5} -SessionHostCount {6} -StorageSolution {7} -SubscriptionId {8} -TenantId {9} -UserAssignedIdentityClientId {10} -VirtualMachineSize {11} -VirtualNetworkName {12} -VirtualNetworkResourceGroupName {13} -WorkspaceName {14} -WorkspaceResourceGroupName {15}', variables('CpuCountMax'), variables('CpuCountMin'), parameters('DomainName'), environment().name, parameters('KerberosEncryption'), parameters('LocationVirtualMachines'), parameters('SessionHostCount'), parameters('StorageSolution'), subscription().subscriptionId, tenant().tenantId, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.clientId.value, parameters('VirtualMachineSize'), variables('VirtualNetworkName'), variables('VirtualNetworkResourceGroupName'), parameters('WorkspaceName'), parameters('ResourceGroupManagement'))]"
                  },
                  "Tags": "[if(contains(parameters('Tags'), 'Microsoft.Compute/virtualMachines'), createObject('value', parameters('Tags')['Microsoft.Compute/virtualMachines']), createObject('value', createObject()))]",
                  "UserAssignedIdentityClientId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.clientId.value]"
                  },
                  "VirtualMachineName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('ManagementVirtualMachine_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Name.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9729081366734116244"
                    }
                  },
                  "parameters": {
                    "ArtifactsLocation": {
                      "type": "string"
                    },
                    "File": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "Parameters": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string",
                      "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
                    },
                    "UserAssignedIdentityClientId": {
                      "type": "string"
                    },
                    "VirtualMachineName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "CommandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} {1}', parameters('File'), parameters('Parameters'))]",
                    "FileUri": "[format('{0}{1}', parameters('ArtifactsLocation'), parameters('File'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('VirtualMachineName'), 'CustomScriptExtension')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "timestamp": "[parameters('Timestamp')]"
                        },
                        "protectedSettings": "[if(contains(parameters('File'), environment().suffixes.storage), createObject('commandToExecute', variables('CommandToExecute'), 'fileUris', createArray(variables('FileUri')), 'managedIdentity', createObject('clientId', parameters('UserAssignedIdentityClientId'))), createObject('commandToExecute', variables('CommandToExecute'), 'fileUris', createArray(variables('FileUri'))))]"
                      }
                    }
                  ],
                  "outputs": {
                    "value": {
                      "type": "object",
                      "value": "[json(filter(reference(resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VirtualMachineName'), 'CustomScriptExtension'), '2021-03-01').instanceView.substatuses, lambda('item', equals(lambdaVariables('item').code, 'ComponentStatus/StdOut/succeeded')))[0].message)]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('ManagementVirtualMachine_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "condition": "[parameters('Monitoring')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Monitoring_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "LogAnalyticsWorkspaceName": {
                    "value": "[parameters('LogAnalyticsWorkspaceName')]"
                  },
                  "LogAnalyticsWorkspaceRetention": {
                    "value": "[parameters('LogAnalyticsWorkspaceRetention')]"
                  },
                  "LogAnalyticsWorkspaceSku": {
                    "value": "[parameters('LogAnalyticsWorkspaceSku')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "Tags": "[if(contains(parameters('Tags'), 'Microsoft.OperationalInsights/workspaces'), createObject('value', parameters('Tags')['Microsoft.OperationalInsights/workspaces']), createObject('value', createObject()))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6880236336148681662"
                    }
                  },
                  "parameters": {
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceName": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceRetention": {
                      "type": "int"
                    },
                    "LogAnalyticsWorkspaceSku": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "WindowsEvents": [
                      {
                        "name": "Microsoft-FSLogix-Apps/Operational",
                        "types": [
                          {
                            "eventType": "Error"
                          },
                          {
                            "eventType": "Warning"
                          },
                          {
                            "eventType": "Information"
                          }
                        ]
                      },
                      {
                        "name": "Microsoft-Windows-TerminalServices-LocalSessionManager/Operational",
                        "types": [
                          {
                            "eventType": "Error"
                          },
                          {
                            "eventType": "Warning"
                          },
                          {
                            "eventType": "Information"
                          }
                        ]
                      },
                      {
                        "name": "System",
                        "types": [
                          {
                            "eventType": "Error"
                          },
                          {
                            "eventType": "Warning"
                          }
                        ]
                      },
                      {
                        "name": "Microsoft-Windows-TerminalServices-RemoteConnectionManager/Admin",
                        "types": [
                          {
                            "eventType": "Error"
                          },
                          {
                            "eventType": "Warning"
                          },
                          {
                            "eventType": "Information"
                          }
                        ]
                      },
                      {
                        "name": "Microsoft-FSLogix-Apps/Admin",
                        "types": [
                          {
                            "eventType": "Error"
                          },
                          {
                            "eventType": "Warning"
                          },
                          {
                            "eventType": "Information"
                          }
                        ]
                      },
                      {
                        "name": "Application",
                        "types": [
                          {
                            "eventType": "Error"
                          },
                          {
                            "eventType": "Warning"
                          }
                        ]
                      }
                    ],
                    "WindowsPerformanceCounters": [
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Transfers/sec"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Current Disk Queue Length"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Reads/sec"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "% Free Space"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Read"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Writes/sec"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Write"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Free Megabytes"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "C:",
                        "intervalSeconds": 60,
                        "counterName": "% Free Space"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "C:",
                        "intervalSeconds": 30,
                        "counterName": "Avg. Disk Queue Length"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "C:",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Transfer"
                      },
                      {
                        "objectName": "LogicalDisk",
                        "instanceName": "C:",
                        "intervalSeconds": 30,
                        "counterName": "Current Disk Queue Length"
                      },
                      {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "% Committed Bytes In Use"
                      },
                      {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Available MBytes"
                      },
                      {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 30,
                        "counterName": "Available Mbytes"
                      },
                      {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 30,
                        "counterName": "Page Faults/sec"
                      },
                      {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 30,
                        "counterName": "Pages/sec"
                      },
                      {
                        "objectName": "Network Adapter",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Bytes Sent/sec"
                      },
                      {
                        "objectName": "Network Adapter",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Bytes Received/sec"
                      },
                      {
                        "objectName": "Network Interface",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Bytes Total/sec"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk Bytes/Transfer"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk Bytes/Read"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Write"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Read"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk Bytes/Write"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Transfer"
                      },
                      {
                        "objectName": "PhysicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 30,
                        "counterName": "Avg. Disk Queue Length"
                      },
                      {
                        "objectName": "Process",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "IO Write Operations/sec"
                      },
                      {
                        "objectName": "Process",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "IO Read Operations/sec"
                      },
                      {
                        "objectName": "Process",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Thread Count"
                      },
                      {
                        "objectName": "Process",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "% User Time"
                      },
                      {
                        "objectName": "Process",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Working Set"
                      },
                      {
                        "objectName": "Process",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "% Processor Time"
                      },
                      {
                        "objectName": "Processor",
                        "instanceName": "_Total",
                        "intervalSeconds": 60,
                        "counterName": "% Processor Time"
                      },
                      {
                        "objectName": "Processor Information",
                        "instanceName": "_Total",
                        "intervalSeconds": 30,
                        "counterName": "% Processor Time"
                      },
                      {
                        "objectName": "RemoteFX Graphics",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Frames Skipped/Second - Insufficient Server Resources"
                      },
                      {
                        "objectName": "RemoteFX Graphics",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Average Encoding Time"
                      },
                      {
                        "objectName": "RemoteFX Graphics",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Frames Skipped/Second - Insufficient Client Resources"
                      },
                      {
                        "objectName": "RemoteFX Graphics",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Frames Skipped/Second - Insufficient Network Resources"
                      },
                      {
                        "objectName": "RemoteFX Network",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Current UDP Bandwidth"
                      },
                      {
                        "objectName": "RemoteFX Network",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Current TCP Bandwidth"
                      },
                      {
                        "objectName": "RemoteFX Network",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Current TCP RTT"
                      },
                      {
                        "objectName": "RemoteFX Network",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Current UDP RTT"
                      },
                      {
                        "objectName": "System",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Processor Queue Length"
                      },
                      {
                        "objectName": "Terminal Services",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Inactive Sessions"
                      },
                      {
                        "objectName": "Terminal Services",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Total Sessions"
                      },
                      {
                        "objectName": "Terminal Services",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Active Sessions"
                      },
                      {
                        "objectName": "Terminal Services Session",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "% Processor Time"
                      },
                      {
                        "objectName": "User Input Delay per Process",
                        "instanceName": "*",
                        "intervalSeconds": 30,
                        "counterName": "Max Input Delay"
                      },
                      {
                        "objectName": "User Input Delay per Session",
                        "instanceName": "*",
                        "intervalSeconds": 30,
                        "counterName": "Max Input Delay"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('LogAnalyticsWorkspaceName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "sku": {
                          "name": "[parameters('LogAnalyticsWorkspaceSku')]"
                        },
                        "retentionInDays": "[parameters('LogAnalyticsWorkspaceRetention')]",
                        "workspaceCapping": {
                          "dailyQuotaGb": -1
                        },
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Enabled"
                      }
                    },
                    {
                      "copy": {
                        "name": "windowsEvents",
                        "count": "[length(variables('WindowsEvents'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('LogAnalyticsWorkspaceName'), format('WindowsEvent{0}', copyIndex()))]",
                      "tags": "[parameters('Tags')]",
                      "kind": "WindowsEvent",
                      "properties": {
                        "eventLogName": "[variables('WindowsEvents')[copyIndex()].name]",
                        "eventTypes": "[variables('WindowsEvents')[copyIndex()].types]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "windowsPerformanceCounters",
                        "count": "[length(variables('WindowsPerformanceCounters'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('LogAnalyticsWorkspaceName'), format('WindowsPerformanceCounter{0}', copyIndex()))]",
                      "tags": "[parameters('Tags')]",
                      "kind": "WindowsPerformanceCounter",
                      "properties": {
                        "objectName": "[variables('WindowsPerformanceCounters')[copyIndex()].objectName]",
                        "instanceName": "[variables('WindowsPerformanceCounters')[copyIndex()].instanceName]",
                        "intervalSeconds": "[variables('WindowsPerformanceCounters')[copyIndex()].intervalSeconds]",
                        "counterName": "[variables('WindowsPerformanceCounters')[copyIndex()].counterName]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]",
                        "windowsEvents"
                      ]
                    }
                  ],
                  "outputs": {
                    "ResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[or(parameters('PooledHostPool'), contains(parameters('FslogixSolution'), 'AzureStorageAccount Premium'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AutomationAccount_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AutomationAccountName": {
                    "value": "[parameters('AutomationAccountName')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": "[if(parameters('Monitoring'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceId.value), createObject('value', ''))]",
                  "Monitoring": {
                    "value": "[parameters('Monitoring')]"
                  },
                  "Tags": "[if(contains(parameters('Tags'), 'Microsoft.Automation/automationAccounts'), createObject('value', parameters('Tags')['Microsoft.Automation/automationAccounts']), createObject('value', createObject()))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "8080527885731697238"
                    }
                  },
                  "parameters": {
                    "AutomationAccountName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "Monitoring": {
                      "type": "bool"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Automation/automationAccounts",
                      "apiVersion": "2021-06-22",
                      "name": "[parameters('AutomationAccountName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "sku": {
                          "name": "Free"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('Monitoring')]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2017-05-01-preview",
                      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
                      "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
                      "properties": {
                        "logs": [
                          {
                            "category": "DscNodeStatus",
                            "enabled": true
                          },
                          {
                            "category": "JobLogs",
                            "enabled": true
                          },
                          {
                            "category": "JobStreams",
                            "enabled": true
                          }
                        ],
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "condition": "[parameters('RecoveryServices')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RecoveryServicesVault_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Fslogix": {
                    "value": "[parameters('Fslogix')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationVirtualMachines')]"
                  },
                  "RecoveryServicesVaultName": {
                    "value": "[parameters('RecoveryServicesVaultName')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "Tags": "[if(contains(parameters('Tags'), 'Microsoft.RecoveryServices/vaults'), createObject('value', parameters('Tags')['Microsoft.RecoveryServices/vaults']), createObject('value', createObject()))]",
                  "TimeZone": {
                    "value": "[parameters('TimeZone')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "1659180333685234989"
                    }
                  },
                  "parameters": {
                    "Fslogix": {
                      "type": "bool"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "RecoveryServicesVaultName": {
                      "type": "string"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "TimeZone": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "BackupSchedulePolicy": {
                      "scheduleRunFrequency": "Daily",
                      "scheduleRunTimes": [
                        "23:00"
                      ],
                      "schedulePolicyType": "SimpleSchedulePolicy"
                    },
                    "BackupRetentionPolicy": {
                      "retentionPolicyType": "LongTermRetentionPolicy",
                      "dailySchedule": {
                        "retentionTimes": [
                          "23:00"
                        ],
                        "retentionDuration": {
                          "count": 30,
                          "durationType": "Days"
                        }
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.RecoveryServices/vaults",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('RecoveryServicesVaultName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "RS0",
                        "tier": "Standard"
                      },
                      "properties": {}
                    },
                    {
                      "condition": "[and(parameters('Fslogix'), equals(parameters('StorageSolution'), 'AzureStorageAccount'))]",
                      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('RecoveryServicesVaultName'), 'AvdPolicyStorage')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "backupManagementType": "AzureStorage",
                        "schedulePolicy": "[variables('BackupSchedulePolicy')]",
                        "retentionPolicy": "[variables('BackupRetentionPolicy')]",
                        "timeZone": "[parameters('TimeZone')]",
                        "workLoadType": "AzureFileShare"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('RecoveryServicesVaultName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('Fslogix'))]",
                      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('RecoveryServicesVaultName'), 'AvdPolicyVm')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "backupManagementType": "AzureIaasVM",
                        "schedulePolicy": "[variables('BackupSchedulePolicy')]",
                        "retentionPolicy": "[variables('BackupRetentionPolicy')]",
                        "timeZone": "[parameters('TimeZone')]",
                        "instantRpRetentionRangeInDays": 2
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('RecoveryServicesVaultName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Workspace_Create_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ApplicationGroupReferences": {
                    "value": []
                  },
                  "Existing": "[if(equals(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.existingWorkspace, 'true'), createObject('value', true()), createObject('value', false()))]",
                  "FriendlyName": {
                    "value": "[parameters('WorkspaceFriendlyName')]"
                  },
                  "Location": {
                    "value": "[parameters('LocationControlPlane')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": "[if(parameters('Monitoring'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceId.value), createObject('value', ''))]",
                  "Monitoring": {
                    "value": "[parameters('Monitoring')]"
                  },
                  "Tags": "[if(contains(parameters('Tags'), 'Microsoft.DesktopVirtualization/workspaces'), createObject('value', parameters('Tags')['Microsoft.DesktopVirtualization/workspaces']), createObject('value', createObject()))]",
                  "WorkspaceName": {
                    "value": "[parameters('WorkspaceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9037512703313986"
                    }
                  },
                  "parameters": {
                    "ApplicationGroupReferences": {
                      "type": "array"
                    },
                    "Existing": {
                      "type": "bool"
                    },
                    "FriendlyName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "Monitoring": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "Tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "WorkspaceName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('Existing'))]",
                      "type": "Microsoft.DesktopVirtualization/workspaces",
                      "apiVersion": "2021-03-09-preview",
                      "name": "[parameters('WorkspaceName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "applicationGroupReferences": "[parameters('ApplicationGroupReferences')]",
                        "friendlyName": "[format('{0} ({1})', parameters('FriendlyName'), parameters('Location'))]"
                      }
                    },
                    {
                      "condition": "[and(not(parameters('Existing')), parameters('Monitoring'))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.DesktopVirtualization/workspaces/{0}', parameters('WorkspaceName'))]",
                      "name": "[format('diag-{0}', parameters('WorkspaceName'))]",
                      "properties": {
                        "logs": [
                          {
                            "category": "Checkpoint",
                            "enabled": true
                          },
                          {
                            "category": "Error",
                            "enabled": true
                          },
                          {
                            "category": "Management",
                            "enabled": true
                          },
                          {
                            "category": "Feed",
                            "enabled": true
                          }
                        ],
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "applicationGroupReferences": {
                      "type": "array",
                      "value": "[if(parameters('Existing'), reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName')), '2021-03-09-preview').applicationGroupReferences, createArray())]"
                    },
                    "tags": {
                      "type": "object",
                      "value": "[if(parameters('Existing'), reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName')), '2021-03-09-preview', 'full').tags, parameters('Tags'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp')))]"
              ]
            }
          ],
          "outputs": {
            "DiskEncryptionSetResourceId": {
              "type": "string",
              "value": "[if(parameters('DiskEncryption'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('DiskEncryption_{0}', parameters('Timestamp'))), '2022-09-01').outputs.diskEncryptionSetResourceId.value, '')]"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string",
              "value": "[if(parameters('Monitoring'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Monitoring_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceId.value, '')]"
            },
            "UserAssignedIdentityClientId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.clientId.value]"
            },
            "UserAssignedIdentityResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp'))), '2022-09-01').outputs.id.value]"
            },
            "ValidateAcceleratedNetworking": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.acceleratedNetworking]"
            },
            "ValidateANFfActiveDirectory": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.anfActiveDirectory]"
            },
            "ValidateANFDnsServers": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.anfDnsServers]"
            },
            "ValidateANFSubnetId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.anfSubnetId]"
            },
            "ValidateAvailabilityZones": {
              "type": "array",
              "value": "[if(equals(parameters('Availability'), 'AvailabilityZones'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.availabilityZones, createArray('1'))]"
            },
            "ValidateTrustedLaunch": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Validations_{0}', parameters('Timestamp'))), '2022-09-01').outputs.value.value.trustedLaunch]"
            },
            "VirtualMachineName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('ManagementVirtualMachine_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceGroups_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ControlPlane_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ActiveDirectorySolution": {
            "value": "[parameters('ActiveDirectorySolution')]"
          },
          "CustomRdpProperty": {
            "value": "[parameters('CustomRdpProperty')]"
          },
          "DesktopApplicationGroupName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.DesktopApplicationGroupName.value]"
          },
          "HostPoolName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value]"
          },
          "HostPoolType": {
            "value": "[parameters('HostPoolType')]"
          },
          "Location": {
            "value": "[parameters('LocationControlPlane')]"
          },
          "LogAnalyticsWorkspaceResourceId": "[if(parameters('Monitoring'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.LogAnalyticsWorkspaceResourceId.value), createObject('value', ''))]",
          "MaxSessionLimit": {
            "value": "[parameters('MaxSessionLimit')]"
          },
          "Monitoring": {
            "value": "[parameters('Monitoring')]"
          },
          "RoleDefinitions": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.RoleDefinitions.value]"
          },
          "ResourceGroupControlPlane": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupControlPlane.value]"
          },
          "ResourceGroupManagement": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value]"
          },
          "SecurityPrincipalObjectIds": {
            "value": "[map(parameters('SecurityPrincipals'), lambda('item', lambdaVariables('item').objectId))]"
          },
          "TagsApplicationGroup": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.DesktopVirtualization/applicationGroups'), parameters('Tags')['Microsoft.DesktopVirtualization/applicationGroups'], createObject()))]"
          },
          "TagsHostPool": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.DesktopVirtualization/hostPools'), parameters('Tags')['Microsoft.DesktopVirtualization/hostPools'], createObject()))]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "ValidationEnvironment": {
            "value": "[parameters('ValidationEnvironment')]"
          },
          "VmTemplate": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VmTemplate.value]"
          },
          "WorkspaceFriendlyName": {
            "value": "[parameters('WorkspaceFriendlyName')]"
          },
          "WorkspaceName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.WorkspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "10563690645021384411"
            }
          },
          "parameters": {
            "ActiveDirectorySolution": {
              "type": "string"
            },
            "CustomRdpProperty": {
              "type": "string"
            },
            "DesktopApplicationGroupName": {
              "type": "string"
            },
            "HostPoolName": {
              "type": "string"
            },
            "HostPoolType": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "MaxSessionLimit": {
              "type": "int"
            },
            "Monitoring": {
              "type": "bool"
            },
            "ResourceGroupControlPlane": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "RoleDefinitions": {
              "type": "object"
            },
            "SecurityPrincipalObjectIds": {
              "type": "array"
            },
            "TagsApplicationGroup": {
              "type": "object"
            },
            "TagsHostPool": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "ValidationEnvironment": {
              "type": "bool"
            },
            "VmTemplate": {
              "type": "string"
            },
            "WorkspaceFriendlyName": {
              "type": "string"
            },
            "WorkspaceName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('HostPool_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupControlPlane')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ActiveDirectorySolution": {
                    "value": "[parameters('ActiveDirectorySolution')]"
                  },
                  "CustomRdpProperty": {
                    "value": "[parameters('CustomRdpProperty')]"
                  },
                  "HostPoolName": {
                    "value": "[parameters('HostPoolName')]"
                  },
                  "HostPoolType": {
                    "value": "[parameters('HostPoolType')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                  },
                  "MaxSessionLimit": {
                    "value": "[parameters('MaxSessionLimit')]"
                  },
                  "Monitoring": {
                    "value": "[parameters('Monitoring')]"
                  },
                  "TagsHostPool": {
                    "value": "[parameters('TagsHostPool')]"
                  },
                  "ValidationEnvironment": {
                    "value": "[parameters('ValidationEnvironment')]"
                  },
                  "VmTemplate": {
                    "value": "[parameters('VmTemplate')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "4930200931665657792"
                    }
                  },
                  "parameters": {
                    "ActiveDirectorySolution": {
                      "type": "string"
                    },
                    "CustomRdpProperty": {
                      "type": "string"
                    },
                    "HostPoolName": {
                      "type": "string"
                    },
                    "HostPoolType": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "MaxSessionLimit": {
                      "type": "int"
                    },
                    "Monitoring": {
                      "type": "bool"
                    },
                    "TagsHostPool": {
                      "type": "object"
                    },
                    "Time": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]"
                    },
                    "ValidationEnvironment": {
                      "type": "bool"
                    },
                    "VmTemplate": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "CustomRdpProperty_Complete": "[if(or(equals(parameters('ActiveDirectorySolution'), 'AzureActiveDirectory'), equals(parameters('ActiveDirectorySolution'), 'AzureActiveDirectoryIntuneEnrollment')), format('{0}targetisaadjoined:i:1', parameters('CustomRdpProperty')), parameters('CustomRdpProperty'))]",
                    "HostPoolLogs": [
                      {
                        "category": "Checkpoint",
                        "enabled": true
                      },
                      {
                        "category": "Error",
                        "enabled": true
                      },
                      {
                        "category": "Management",
                        "enabled": true
                      },
                      {
                        "category": "Connection",
                        "enabled": true
                      },
                      {
                        "category": "HostRegistration",
                        "enabled": true
                      },
                      {
                        "category": "AgentHealthStatus",
                        "enabled": true
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DesktopVirtualization/hostPools",
                      "apiVersion": "2021-03-09-preview",
                      "name": "[parameters('HostPoolName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsHostPool')]",
                      "properties": {
                        "hostPoolType": "[split(parameters('HostPoolType'), ' ')[0]]",
                        "maxSessionLimit": "[parameters('MaxSessionLimit')]",
                        "loadBalancerType": "[if(contains(parameters('HostPoolType'), 'Pooled'), split(parameters('HostPoolType'), ' ')[1], 'Persistent')]",
                        "validationEnvironment": "[parameters('ValidationEnvironment')]",
                        "registrationInfo": {
                          "expirationTime": "[dateTimeAdd(parameters('Time'), 'PT2H')]",
                          "registrationTokenOperation": "Update"
                        },
                        "preferredAppGroupType": "Desktop",
                        "customRdpProperty": "[variables('CustomRdpProperty_Complete')]",
                        "personalDesktopAssignmentType": "[if(contains(parameters('HostPoolType'), 'Personal'), split(parameters('HostPoolType'), ' ')[1], null())]",
                        "startVMOnConnect": true,
                        "vmTemplate": "[parameters('VmTemplate')]"
                      }
                    },
                    {
                      "condition": "[parameters('Monitoring')]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('HostPoolName'))]",
                      "name": "[format('diag-{0}', parameters('HostPoolName'))]",
                      "properties": {
                        "logs": "[variables('HostPoolLogs')]",
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "ResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('HostPoolName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ApplicationGroup_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupControlPlane')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "DesktopApplicationGroupName": {
                    "value": "[parameters('DesktopApplicationGroupName')]"
                  },
                  "HostPoolResourceId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupControlPlane')), 'Microsoft.Resources/deployments', format('HostPool_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceId.value]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "RoleDefinitions": {
                    "value": "[parameters('RoleDefinitions')]"
                  },
                  "SecurityPrincipalObjectIds": {
                    "value": "[parameters('SecurityPrincipalObjectIds')]"
                  },
                  "TagsApplicationGroup": {
                    "value": "[parameters('TagsApplicationGroup')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9377215974404493957"
                    }
                  },
                  "parameters": {
                    "DesktopApplicationGroupName": {
                      "type": "string"
                    },
                    "HostPoolResourceId": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "RoleDefinitions": {
                      "type": "object"
                    },
                    "SecurityPrincipalObjectIds": {
                      "type": "array"
                    },
                    "TagsApplicationGroup": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DesktopVirtualization/applicationGroups",
                      "apiVersion": "2021-03-09-preview",
                      "name": "[parameters('DesktopApplicationGroupName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsApplicationGroup')]",
                      "properties": {
                        "hostPoolArmPath": "[parameters('HostPoolResourceId')]",
                        "applicationGroupType": "Desktop"
                      }
                    },
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(range(0, length(parameters('SecurityPrincipalObjectIds'))))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.DesktopVirtualization/applicationGroups/{0}', parameters('DesktopApplicationGroupName'))]",
                      "name": "[guid(parameters('SecurityPrincipalObjectIds')[range(0, length(parameters('SecurityPrincipalObjectIds')))[copyIndex()]], parameters('RoleDefinitions').DesktopVirtualizationUser, parameters('DesktopApplicationGroupName'))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitions').DesktopVirtualizationUser)]",
                        "principalId": "[parameters('SecurityPrincipalObjectIds')[range(0, length(parameters('SecurityPrincipalObjectIds')))[copyIndex()]]]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('DesktopApplicationGroupName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "ApplicationGroupReference": {
                      "type": "array",
                      "value": [
                        "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('DesktopApplicationGroupName'))]"
                      ]
                    },
                    "ResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('DesktopApplicationGroupName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupControlPlane')), 'Microsoft.Resources/deployments', format('HostPool_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Workspace_Existing_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ApplicationGroupReferences": {
                    "value": []
                  },
                  "Existing": {
                    "value": true
                  },
                  "FriendlyName": {
                    "value": "[parameters('WorkspaceFriendlyName')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "WorkspaceName": {
                    "value": "[parameters('WorkspaceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9037512703313986"
                    }
                  },
                  "parameters": {
                    "ApplicationGroupReferences": {
                      "type": "array"
                    },
                    "Existing": {
                      "type": "bool"
                    },
                    "FriendlyName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "Monitoring": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "Tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "WorkspaceName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('Existing'))]",
                      "type": "Microsoft.DesktopVirtualization/workspaces",
                      "apiVersion": "2021-03-09-preview",
                      "name": "[parameters('WorkspaceName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "applicationGroupReferences": "[parameters('ApplicationGroupReferences')]",
                        "friendlyName": "[format('{0} ({1})', parameters('FriendlyName'), parameters('Location'))]"
                      }
                    },
                    {
                      "condition": "[and(not(parameters('Existing')), parameters('Monitoring'))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.DesktopVirtualization/workspaces/{0}', parameters('WorkspaceName'))]",
                      "name": "[format('diag-{0}', parameters('WorkspaceName'))]",
                      "properties": {
                        "logs": [
                          {
                            "category": "Checkpoint",
                            "enabled": true
                          },
                          {
                            "category": "Error",
                            "enabled": true
                          },
                          {
                            "category": "Management",
                            "enabled": true
                          },
                          {
                            "category": "Feed",
                            "enabled": true
                          }
                        ],
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "applicationGroupReferences": {
                      "type": "array",
                      "value": "[if(parameters('Existing'), reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName')), '2021-03-09-preview').applicationGroupReferences, createArray())]"
                    },
                    "tags": {
                      "type": "object",
                      "value": "[if(parameters('Existing'), reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName')), '2021-03-09-preview', 'full').tags, parameters('Tags'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Workspace_Update_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ApplicationGroupReferences": {
                    "value": "[union(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Workspace_Existing_{0}', parameters('Timestamp'))), '2022-09-01').outputs.applicationGroupReferences.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupControlPlane')), 'Microsoft.Resources/deployments', format('ApplicationGroup_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ApplicationGroupReference.value)]"
                  },
                  "Existing": {
                    "value": false
                  },
                  "FriendlyName": {
                    "value": "[parameters('WorkspaceFriendlyName')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "Tags": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Workspace_Existing_{0}', parameters('Timestamp'))), '2022-09-01').outputs.tags.value]"
                  },
                  "WorkspaceName": {
                    "value": "[parameters('WorkspaceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9037512703313986"
                    }
                  },
                  "parameters": {
                    "ApplicationGroupReferences": {
                      "type": "array"
                    },
                    "Existing": {
                      "type": "bool"
                    },
                    "FriendlyName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "Monitoring": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "Tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "WorkspaceName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('Existing'))]",
                      "type": "Microsoft.DesktopVirtualization/workspaces",
                      "apiVersion": "2021-03-09-preview",
                      "name": "[parameters('WorkspaceName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "applicationGroupReferences": "[parameters('ApplicationGroupReferences')]",
                        "friendlyName": "[format('{0} ({1})', parameters('FriendlyName'), parameters('Location'))]"
                      }
                    },
                    {
                      "condition": "[and(not(parameters('Existing')), parameters('Monitoring'))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.DesktopVirtualization/workspaces/{0}', parameters('WorkspaceName'))]",
                      "name": "[format('diag-{0}', parameters('WorkspaceName'))]",
                      "properties": {
                        "logs": [
                          {
                            "category": "Checkpoint",
                            "enabled": true
                          },
                          {
                            "category": "Error",
                            "enabled": true
                          },
                          {
                            "category": "Management",
                            "enabled": true
                          },
                          {
                            "category": "Feed",
                            "enabled": true
                          }
                        ],
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "applicationGroupReferences": {
                      "type": "array",
                      "value": "[if(parameters('Existing'), reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName')), '2021-03-09-preview').applicationGroupReferences, createArray())]"
                    },
                    "tags": {
                      "type": "object",
                      "value": "[if(parameters('Existing'), reference(resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('WorkspaceName')), '2021-03-09-preview', 'full').tags, parameters('Tags'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupControlPlane')), 'Microsoft.Resources/deployments', format('ApplicationGroup_{0}', parameters('Timestamp')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('Workspace_Existing_{0}', parameters('Timestamp')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceGroups_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "condition": "[and(not(equals(parameters('FslogixStorage'), 'None')), contains(parameters('ActiveDirectorySolution'), 'DomainServices'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('FSLogix_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ArtifactsLocation": {
            "value": "[parameters('ArtifactsLocation')]"
          },
          "ActiveDirectoryConnection": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ValidateANFfActiveDirectory.value]"
          },
          "ActiveDirectorySolution": {
            "value": "[parameters('ActiveDirectorySolution')]"
          },
          "AutomationAccountName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.AutomationAccountName.value]"
          },
          "Availability": {
            "value": "[parameters('Availability')]"
          },
          "AzureFilesPrivateDnsZoneResourceId": {
            "value": "[parameters('AzureFilesPrivateDnsZoneResourceId')]"
          },
          "ClientId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.UserAssignedIdentityClientId.value]"
          },
          "DelegatedSubnetId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ValidateANFSubnetId.value]"
          },
          "DnsServers": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ValidateANFDnsServers.value]"
          },
          "DomainJoinPassword": {
            "value": "[parameters('DomainJoinPassword')]"
          },
          "DomainJoinUserPrincipalName": {
            "value": "[parameters('DomainJoinUserPrincipalName')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "FileShares": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.FileShares.value]"
          },
          "FslogixShareSizeInGB": {
            "value": "[parameters('FslogixShareSizeInGB')]"
          },
          "FslogixSolution": {
            "value": "[parameters('FslogixSolution')]"
          },
          "FslogixStorage": {
            "value": "[parameters('FslogixStorage')]"
          },
          "KerberosEncryption": {
            "value": "[parameters('KerberosEncryption')]"
          },
          "Location": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('SubnetResourceId'), '/')[2], split(parameters('SubnetResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('SubnetResourceId'), '/')[8]), '2023-04-01', 'full').location]"
          },
          "ManagementVmName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VirtualMachineName.value]"
          },
          "NetAppAccountName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.NetAppAccountName.value]"
          },
          "NetAppCapacityPoolName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.NetAppCapacityPoolName.value]"
          },
          "Netbios": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Netbios.value]"
          },
          "OuPath": {
            "value": "[parameters('OuPath')]"
          },
          "PrivateEndpoint": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.PrivateEndpoint.value]"
          },
          "RecoveryServices": {
            "value": "[parameters('RecoveryServices')]"
          },
          "RecoveryServicesVaultName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.RecoveryServicesVaultName.value]"
          },
          "ResourceGroupManagement": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value]"
          },
          "ResourceGroupStorage": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupStorage.value]"
          },
          "SecurityPrincipalObjectIds": {
            "value": "[map(parameters('SecurityPrincipals'), lambda('item', lambdaVariables('item').objectId))]"
          },
          "SecurityPrincipalNames": {
            "value": "[map(parameters('SecurityPrincipals'), lambda('item', lambdaVariables('item').name))]"
          },
          "SmbServerLocation": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.SmbServerLocation.value]"
          },
          "StorageAccountNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageAccountNamePrefix.value]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageIndex": {
            "value": "[parameters('StorageIndex')]"
          },
          "StorageSku": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageSku.value]"
          },
          "StorageSolution": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageSolution.value]"
          },
          "Subnet": {
            "value": "[split(parameters('SubnetResourceId'), '/')[10]]"
          },
          "TagsAutomationAccounts": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Automation/automationAccounts'), parameters('Tags')['Microsoft.Automation/automationAccounts'], createObject()))]"
          },
          "TagsNetAppAccount": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.NetApp/netAppAccounts'), parameters('Tags')['Microsoft.NetApp/netAppAccounts'], createObject()))]"
          },
          "TagsPrivateEndpoints": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Network/privateEndpoints'), parameters('Tags')['Microsoft.Network/privateEndpoints'], createObject()))]"
          },
          "TagsStorageAccounts": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Storage/storageAccounts'), parameters('Tags')['Microsoft.Storage/storageAccounts'], createObject()))]"
          },
          "TagsRecoveryServicesVault": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.RecoveryServices/vaults'), parameters('Tags')['Microsoft.RecoveryServices/vaults'], createObject()))]"
          },
          "TagsVirtualMachines": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Compute/virtualMachines'), parameters('Tags')['Microsoft.Compute/virtualMachines'], createObject()))]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "TimeZone": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.TimeZone.value]"
          },
          "VirtualNetwork": {
            "value": "[split(parameters('SubnetResourceId'), '/')[8]]"
          },
          "VirtualNetworkResourceGroup": {
            "value": "[split(parameters('SubnetResourceId'), '/')[4]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "14263302444431333947"
            }
          },
          "parameters": {
            "ArtifactsLocation": {
              "type": "string"
            },
            "ActiveDirectoryConnection": {
              "type": "string"
            },
            "ActiveDirectorySolution": {
              "type": "string"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "Availability": {
              "type": "string"
            },
            "AzureFilesPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "ClientId": {
              "type": "string"
            },
            "DelegatedSubnetId": {
              "type": "string"
            },
            "DnsServers": {
              "type": "string"
            },
            "DomainJoinPassword": {
              "type": "securestring"
            },
            "DomainJoinUserPrincipalName": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "FileShares": {
              "type": "array"
            },
            "FslogixShareSizeInGB": {
              "type": "int"
            },
            "FslogixSolution": {
              "type": "string"
            },
            "FslogixStorage": {
              "type": "string"
            },
            "KerberosEncryption": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "ManagementVmName": {
              "type": "string"
            },
            "NetAppAccountName": {
              "type": "string"
            },
            "NetAppCapacityPoolName": {
              "type": "string"
            },
            "Netbios": {
              "type": "string"
            },
            "OuPath": {
              "type": "string"
            },
            "PrivateEndpoint": {
              "type": "bool"
            },
            "RecoveryServices": {
              "type": "bool"
            },
            "RecoveryServicesVaultName": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "ResourceGroupStorage": {
              "type": "string"
            },
            "SecurityPrincipalObjectIds": {
              "type": "array"
            },
            "SecurityPrincipalNames": {
              "type": "array"
            },
            "SmbServerLocation": {
              "type": "string"
            },
            "StorageAccountNamePrefix": {
              "type": "string"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageIndex": {
              "type": "int"
            },
            "StorageSku": {
              "type": "string"
            },
            "StorageSolution": {
              "type": "string"
            },
            "Subnet": {
              "type": "string"
            },
            "TagsAutomationAccounts": {
              "type": "object"
            },
            "TagsNetAppAccount": {
              "type": "object"
            },
            "TagsPrivateEndpoints": {
              "type": "object"
            },
            "TagsRecoveryServicesVault": {
              "type": "object"
            },
            "TagsStorageAccounts": {
              "type": "object"
            },
            "TagsVirtualMachines": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "TimeZone": {
              "type": "string"
            },
            "VirtualNetwork": {
              "type": "string"
            },
            "VirtualNetworkResourceGroup": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[and(equals(parameters('StorageSolution'), 'AzureNetAppFiles'), contains(parameters('ActiveDirectorySolution'), 'DomainServices'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AzureNetAppFiles_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupStorage')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ArtifactsLocation": {
                    "value": "[parameters('ArtifactsLocation')]"
                  },
                  "ActiveDirectoryConnection": {
                    "value": "[parameters('ActiveDirectoryConnection')]"
                  },
                  "DelegatedSubnetId": {
                    "value": "[parameters('DelegatedSubnetId')]"
                  },
                  "DnsServers": {
                    "value": "[parameters('DnsServers')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "FileShares": {
                    "value": "[parameters('FileShares')]"
                  },
                  "FslogixSolution": {
                    "value": "[parameters('FslogixSolution')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ManagementVmName": {
                    "value": "[parameters('ManagementVmName')]"
                  },
                  "NetAppAccountName": {
                    "value": "[parameters('NetAppAccountName')]"
                  },
                  "NetAppCapacityPoolName": {
                    "value": "[parameters('NetAppCapacityPoolName')]"
                  },
                  "OuPath": {
                    "value": "[parameters('OuPath')]"
                  },
                  "ResourceGroupManagement": {
                    "value": "[parameters('ResourceGroupManagement')]"
                  },
                  "SecurityPrincipalNames": {
                    "value": "[parameters('SecurityPrincipalNames')]"
                  },
                  "SmbServerLocation": {
                    "value": "[parameters('SmbServerLocation')]"
                  },
                  "StorageSku": {
                    "value": "[parameters('StorageSku')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "TagsNetAppAccount": {
                    "value": "[parameters('TagsNetAppAccount')]"
                  },
                  "TagsVirtualMachines": {
                    "value": "[parameters('TagsVirtualMachines')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13405820106837442964"
                    }
                  },
                  "parameters": {
                    "ArtifactsLocation": {
                      "type": "string"
                    },
                    "ActiveDirectoryConnection": {
                      "type": "string"
                    },
                    "DelegatedSubnetId": {
                      "type": "string"
                    },
                    "DnsServers": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "FileShares": {
                      "type": "array"
                    },
                    "FslogixSolution": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ManagementVmName": {
                      "type": "string"
                    },
                    "NetAppAccountName": {
                      "type": "string"
                    },
                    "NetAppCapacityPoolName": {
                      "type": "string"
                    },
                    "OuPath": {
                      "type": "string"
                    },
                    "ResourceGroupManagement": {
                      "type": "string"
                    },
                    "SecurityPrincipalNames": {
                      "type": "array"
                    },
                    "SmbServerLocation": {
                      "type": "string"
                    },
                    "StorageSku": {
                      "type": "string"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "TagsNetAppAccount": {
                      "type": "object"
                    },
                    "TagsVirtualMachines": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.NetApp/netAppAccounts",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('NetAppAccountName')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsNetAppAccount')]",
                      "properties": {
                        "activeDirectories": "[if(equals(parameters('ActiveDirectoryConnection'), 'false'), null(), createArray(createObject('aesEncryption', false(), 'domain', parameters('DomainName'), 'dns', parameters('DnsServers'), 'organizationalUnit', parameters('OuPath'), 'password', parameters('DomainJoinPassword'), 'smbServerName', format('anf-{0}', parameters('SmbServerLocation')), 'username', split(parameters('DomainJoinUserPrincipalName'), '@')[0])))]",
                        "encryption": {
                          "keySource": "Microsoft.NetApp"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsNetAppAccount')]",
                      "properties": {
                        "coolAccess": false,
                        "encryptionType": "Single",
                        "qosType": "Auto",
                        "serviceLevel": "[parameters('StorageSku')]",
                        "size": 4398046511104
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.NetApp/netAppAccounts', parameters('NetAppAccountName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "volumes",
                        "count": "[length(range(0, length(parameters('FileShares'))))]"
                      },
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[copyIndex()]])]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsNetAppAccount')]",
                      "properties": {
                        "avsDataStore": "Disabled",
                        "coolAccess": false,
                        "creationToken": "[parameters('FileShares')[range(0, length(parameters('FileShares')))[copyIndex()]]]",
                        "defaultGroupQuotaInKiBs": 0,
                        "defaultUserQuotaInKiBs": 0,
                        "encryptionKeySource": "Microsoft.NetApp",
                        "isDefaultQuotaEnabled": false,
                        "kerberosEnabled": false,
                        "ldapEnabled": false,
                        "networkFeatures": "Basic",
                        "protocolTypes": [
                          "CIFS"
                        ],
                        "securityStyle": "ntfs",
                        "serviceLevel": "[parameters('StorageSku')]",
                        "smbEncryption": true,
                        "snapshotDirectoryVisible": true,
                        "subnetId": "[parameters('DelegatedSubnetId')]",
                        "usageThreshold": 107374182400
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.NetApp/netAppAccounts/capacityPools', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('FslogixNtfsPermissions_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "ArtifactsLocation": {
                            "value": "[parameters('ArtifactsLocation')]"
                          },
                          "CommandToExecute": {
                            "value": "[format('powershell -ExecutionPolicy Unrestricted -File Set-NtfsPermissions.ps1 -DomainJoinPassword \"{0}\" -DomainJoinUserPrincipalName {1} -FslogixSolution {2} -SecurityPrincipalNames \"{3}\" -SmbServerLocation {4} -StorageSolution {5}', parameters('DomainJoinPassword'), parameters('DomainJoinUserPrincipalName'), parameters('FslogixSolution'), parameters('SecurityPrincipalNames'), parameters('SmbServerLocation'), parameters('StorageSolution'))]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "ManagementVmName": {
                            "value": "[parameters('ManagementVmName')]"
                          },
                          "TagsVirtualMachines": {
                            "value": "[parameters('TagsVirtualMachines')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "16425680337100505849"
                            }
                          },
                          "parameters": {
                            "ArtifactsLocation": {
                              "type": "string"
                            },
                            "CommandToExecute": {
                              "type": "securestring"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "ManagementVmName": {
                              "type": "string"
                            },
                            "TagsVirtualMachines": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2020-12-01",
                              "name": "[format('{0}/CustomScriptExtension', parameters('ManagementVmName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('TagsVirtualMachines')]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.10",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "fileUris": [
                                    "[format('{0}Set-NtfsPermissions.ps1', parameters('ArtifactsLocation'))]"
                                  ],
                                  "timestamp": "[parameters('Timestamp')]"
                                },
                                "protectedSettings": {
                                  "commandToExecute": "[parameters('CommandToExecute')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "volumes"
                      ]
                    }
                  ],
                  "outputs": {
                    "fileShares": {
                      "type": "array",
                      "value": "[if(contains(parameters('FslogixSolution'), 'Office'), createArray(reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[0]]), '2021-06-01').mountTargets[0].smbServerFqdn, reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[1]]), '2021-06-01').mountTargets[0].smbServerFqdn), createArray(reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', parameters('NetAppAccountName'), parameters('NetAppCapacityPoolName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[0]]), '2021-06-01').mountTargets[0].smbServerFqdn))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[and(equals(parameters('StorageSolution'), 'AzureStorageAccount'), contains(parameters('ActiveDirectorySolution'), 'DomainServices'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AzureFiles_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupStorage')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ArtifactsLocation": {
                    "value": "[parameters('ArtifactsLocation')]"
                  },
                  "ActiveDirectorySolution": {
                    "value": "[parameters('ActiveDirectorySolution')]"
                  },
                  "AutomationAccountName": {
                    "value": "[parameters('AutomationAccountName')]"
                  },
                  "Availability": {
                    "value": "[parameters('Availability')]"
                  },
                  "AzureFilesPrivateDnsZoneResourceId": {
                    "value": "[parameters('AzureFilesPrivateDnsZoneResourceId')]"
                  },
                  "ClientId": {
                    "value": "[parameters('ClientId')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "FileShares": {
                    "value": "[parameters('FileShares')]"
                  },
                  "FslogixShareSizeInGB": {
                    "value": "[parameters('FslogixShareSizeInGB')]"
                  },
                  "FslogixSolution": {
                    "value": "[parameters('FslogixSolution')]"
                  },
                  "FslogixStorage": {
                    "value": "[parameters('FslogixStorage')]"
                  },
                  "KerberosEncryption": {
                    "value": "[parameters('KerberosEncryption')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ManagementVmName": {
                    "value": "[parameters('ManagementVmName')]"
                  },
                  "Netbios": {
                    "value": "[parameters('Netbios')]"
                  },
                  "OuPath": {
                    "value": "[parameters('OuPath')]"
                  },
                  "PrivateEndpoint": {
                    "value": "[parameters('PrivateEndpoint')]"
                  },
                  "RecoveryServices": {
                    "value": "[parameters('RecoveryServices')]"
                  },
                  "RecoveryServicesVaultName": {
                    "value": "[parameters('RecoveryServicesVaultName')]"
                  },
                  "ResourceGroupManagement": {
                    "value": "[parameters('ResourceGroupManagement')]"
                  },
                  "ResourceGroupStorage": {
                    "value": "[parameters('ResourceGroupStorage')]"
                  },
                  "SecurityPrincipalObjectIds": {
                    "value": "[parameters('SecurityPrincipalObjectIds')]"
                  },
                  "SecurityPrincipalNames": {
                    "value": "[parameters('SecurityPrincipalNames')]"
                  },
                  "StorageAccountNamePrefix": {
                    "value": "[parameters('StorageAccountNamePrefix')]"
                  },
                  "StorageCount": {
                    "value": "[parameters('StorageCount')]"
                  },
                  "StorageIndex": {
                    "value": "[parameters('StorageIndex')]"
                  },
                  "StorageSku": {
                    "value": "[parameters('StorageSku')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "Subnet": {
                    "value": "[parameters('Subnet')]"
                  },
                  "TagsAutomationAccounts": {
                    "value": "[parameters('TagsAutomationAccounts')]"
                  },
                  "TagsPrivateEndpoints": {
                    "value": "[parameters('TagsPrivateEndpoints')]"
                  },
                  "TagsRecoveryServicesVault": {
                    "value": "[parameters('TagsRecoveryServicesVault')]"
                  },
                  "TagsStorageAccounts": {
                    "value": "[parameters('TagsStorageAccounts')]"
                  },
                  "TagsVirtualMachines": {
                    "value": "[parameters('TagsVirtualMachines')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "TimeZone": {
                    "value": "[parameters('TimeZone')]"
                  },
                  "VirtualNetwork": {
                    "value": "[parameters('VirtualNetwork')]"
                  },
                  "VirtualNetworkResourceGroup": {
                    "value": "[parameters('VirtualNetworkResourceGroup')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "10097310755487211200"
                    }
                  },
                  "parameters": {
                    "ArtifactsLocation": {
                      "type": "string"
                    },
                    "AutomationAccountName": {
                      "type": "string"
                    },
                    "Availability": {
                      "type": "string"
                    },
                    "AzureFilesPrivateDnsZoneResourceId": {
                      "type": "string"
                    },
                    "ClientId": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "ActiveDirectorySolution": {
                      "type": "string"
                    },
                    "FileShares": {
                      "type": "array"
                    },
                    "FslogixShareSizeInGB": {
                      "type": "int"
                    },
                    "FslogixSolution": {
                      "type": "string"
                    },
                    "FslogixStorage": {
                      "type": "string"
                    },
                    "KerberosEncryption": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ManagementVmName": {
                      "type": "string"
                    },
                    "Netbios": {
                      "type": "string"
                    },
                    "OuPath": {
                      "type": "string"
                    },
                    "PrivateEndpoint": {
                      "type": "bool"
                    },
                    "RecoveryServices": {
                      "type": "bool"
                    },
                    "RecoveryServicesVaultName": {
                      "type": "string"
                    },
                    "ResourceGroupManagement": {
                      "type": "string"
                    },
                    "ResourceGroupStorage": {
                      "type": "string"
                    },
                    "SecurityPrincipalObjectIds": {
                      "type": "array"
                    },
                    "SecurityPrincipalNames": {
                      "type": "array"
                    },
                    "StorageAccountNamePrefix": {
                      "type": "string"
                    },
                    "StorageCount": {
                      "type": "int"
                    },
                    "StorageIndex": {
                      "type": "int"
                    },
                    "StorageSku": {
                      "type": "string"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "Subnet": {
                      "type": "string"
                    },
                    "TagsAutomationAccounts": {
                      "type": "object"
                    },
                    "TagsPrivateEndpoints": {
                      "type": "object"
                    },
                    "TagsRecoveryServicesVault": {
                      "type": "object"
                    },
                    "TagsStorageAccounts": {
                      "type": "object"
                    },
                    "TagsVirtualMachines": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "TimeZone": {
                      "type": "string"
                    },
                    "VirtualNetwork": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroup": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "Endpoint": "[split(parameters('FslogixStorage'), ' ')[2]]",
                    "RoleDefinitionId": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
                    "SmbMultiChannel": {
                      "multichannel": {
                        "enabled": true
                      }
                    },
                    "SmbSettings": {
                      "versions": "SMB3.0;SMB3.1.1;",
                      "authenticationMethods": "NTLMv2;Kerberos;",
                      "kerberosTicketEncryption": "[if(equals(parameters('KerberosEncryption'), 'RC4'), 'RC4-HMAC;', 'AES-256;')]",
                      "channelEncryption": "AES-128-CCM;AES-128-GCM;AES-256-GCM;"
                    },
                    "StorageRedundancy": "[if(equals(parameters('Availability'), 'AvailabilityZones'), '_ZRS', '_LRS')]",
                    "SubnetId": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]",
                    "VirtualNetworkRules": {
                      "PrivateEndpoint": [],
                      "PublicEndpoint": [],
                      "ServiceEndpoint": [
                        {
                          "id": "[variables('SubnetId')]",
                          "action": "Allow"
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "storageAccounts",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsStorageAccounts')]",
                      "sku": {
                        "name": "[format('{0}{1}', parameters('StorageSku'), variables('StorageRedundancy'))]"
                      },
                      "kind": "[if(equals(parameters('StorageSku'), 'Standard'), 'StorageV2', 'FileStorage')]",
                      "properties": {
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "virtualNetworkRules": "[variables('VirtualNetworkRules')[variables('Endpoint')]]",
                          "ipRules": [],
                          "defaultAction": "[if(equals(variables('Endpoint'), 'PublicEndpoint'), 'Allow', 'Deny')]"
                        },
                        "publicNetworkAccess": "[if(equals(variables('Endpoint'), 'PrivateEndpoint'), 'Disabled', 'Enabled')]",
                        "supportsHttpsTrafficOnly": true,
                        "encryption": {
                          "services": {
                            "file": {
                              "keyType": "Account",
                              "enabled": true
                            }
                          },
                          "keySource": "Microsoft.Storage"
                        },
                        "azureFilesIdentityBasedAuthentication": {
                          "directoryServiceOptions": "[if(equals(parameters('ActiveDirectorySolution'), 'AzureActiveDirectoryDomainServices'), 'AADDS', 'None')]"
                        },
                        "largeFileSharesState": "[if(equals(parameters('StorageSku'), 'Standard'), 'Enabled', null())]"
                      }
                    },
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                      "name": "[guid(parameters('SecurityPrincipalObjectIds')[range(0, parameters('StorageCount'))[copyIndex()]], variables('RoleDefinitionId'), resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionId'))]",
                        "principalId": "[parameters('SecurityPrincipalObjectIds')[range(0, parameters('StorageCount'))[copyIndex()]]]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "fileServices",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), 'default')]",
                      "properties": {
                        "protocolSettings": {
                          "smb": "[if(equals(parameters('StorageSku'), 'Standard'), variables('SmbSettings'), union(variables('SmbSettings'), variables('SmbMultiChannel')))]"
                        },
                        "shareDeleteRetentionPolicy": {
                          "enabled": false
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "privateEndpoints",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "condition": "[parameters('PrivateEndpoint')]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-05-01",
                      "name": "[format('pe-{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsPrivateEndpoints')]",
                      "properties": {
                        "subnet": {
                          "id": "[variables('SubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('pe-{0}_{1}', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), guid(format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                              "groupIds": [
                                "file"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "privateDnsZoneGroups",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "condition": "[parameters('PrivateEndpoint')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2021-08-01",
                      "name": "[format('{0}/{1}', format('pe-{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0')))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "privateDnsZoneId": "[parameters('AzureFilesPrivateDnsZoneResourceId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]",
                        "storageAccounts"
                      ]
                    },
                    {
                      "copy": {
                        "name": "shares",
                        "count": "[length(range(0, parameters('StorageCount')))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('FileShares_{0}_{1}', range(0, parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "FileShares": {
                            "value": "[parameters('FileShares')]"
                          },
                          "FslogixShareSizeInGB": {
                            "value": "[parameters('FslogixShareSizeInGB')]"
                          },
                          "StorageAccountName": {
                            "value": "[format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))]"
                          },
                          "StorageSku": {
                            "value": "[parameters('StorageSku')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "17889927921159866625"
                            }
                          },
                          "parameters": {
                            "FileShares": {
                              "type": "array"
                            },
                            "FslogixShareSizeInGB": {
                              "type": "int"
                            },
                            "StorageAccountName": {
                              "type": "string"
                            },
                            "StorageSku": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "shares",
                                "count": "[length(range(0, length(parameters('FileShares'))))]"
                              },
                              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}/default/{1}', parameters('StorageAccountName'), parameters('FileShares')[range(0, length(parameters('FileShares')))[copyIndex()]])]",
                              "properties": {
                                "accessTier": "[if(equals(parameters('StorageSku'), 'Premium'), 'Premium', 'TransactionOptimized')]",
                                "shareQuota": "[parameters('FslogixShareSizeInGB')]",
                                "enabledProtocols": "SMB"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "roleAssignment",
                        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')))]"
                      ]
                    },
                    {
                      "condition": "[contains(parameters('ActiveDirectorySolution'), 'DomainServices')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('FslogixNtfsPermissions_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "ArtifactsLocation": {
                            "value": "[parameters('ArtifactsLocation')]"
                          },
                          "CommandToExecute": {
                            "value": "[format('powershell -ExecutionPolicy Unrestricted -File Set-NtfsPermissions.ps1 -ClientId {0} -DomainJoinPassword \"{1}\" -DomainJoinUserPrincipalName {2} -ActiveDirectorySolution {3} -Environment {4} -FslogixSolution {5} -KerberosEncryptionType {6} -Netbios {7} -OuPath \"{8}\" -SecurityPrincipalNames \"{9}\" -StorageAccountPrefix {10} -StorageAccountResourceGroupName {11} -StorageCount {12} -StorageIndex {13} -StorageSolution {14} -StorageSuffix {15} -SubscriptionId {16} -TenantId {17}', parameters('ClientId'), parameters('DomainJoinPassword'), parameters('DomainJoinUserPrincipalName'), parameters('ActiveDirectorySolution'), environment().name, parameters('FslogixSolution'), parameters('KerberosEncryption'), parameters('Netbios'), parameters('OuPath'), parameters('SecurityPrincipalNames'), parameters('StorageAccountNamePrefix'), parameters('ResourceGroupStorage'), parameters('StorageCount'), parameters('StorageIndex'), parameters('StorageSolution'), environment().suffixes.storage, subscription().subscriptionId, subscription().tenantId)]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "ManagementVmName": {
                            "value": "[parameters('ManagementVmName')]"
                          },
                          "TagsVirtualMachines": {
                            "value": "[parameters('TagsVirtualMachines')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "16425680337100505849"
                            }
                          },
                          "parameters": {
                            "ArtifactsLocation": {
                              "type": "string"
                            },
                            "CommandToExecute": {
                              "type": "securestring"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "ManagementVmName": {
                              "type": "string"
                            },
                            "TagsVirtualMachines": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2020-12-01",
                              "name": "[format('{0}/CustomScriptExtension', parameters('ManagementVmName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('TagsVirtualMachines')]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.10",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "fileUris": [
                                    "[format('{0}Set-NtfsPermissions.ps1', parameters('ArtifactsLocation'))]"
                                  ],
                                  "timestamp": "[parameters('Timestamp')]"
                                },
                                "protectedSettings": {
                                  "commandToExecute": "[parameters('CommandToExecute')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "privateDnsZoneGroups",
                        "privateEndpoints",
                        "shares"
                      ]
                    },
                    {
                      "condition": "[parameters('RecoveryServices')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('RecoveryServices_AzureFiles_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "FileShares": {
                            "value": "[parameters('FileShares')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "RecoveryServicesVaultName": {
                            "value": "[parameters('RecoveryServicesVaultName')]"
                          },
                          "ResourceGroupStorage": {
                            "value": "[parameters('ResourceGroupStorage')]"
                          },
                          "StorageAccountNamePrefix": {
                            "value": "[parameters('StorageAccountNamePrefix')]"
                          },
                          "StorageCount": {
                            "value": "[parameters('StorageCount')]"
                          },
                          "StorageIndex": {
                            "value": "[parameters('StorageIndex')]"
                          },
                          "TagsRecoveryServicesVault": {
                            "value": "[parameters('TagsRecoveryServicesVault')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13414614270721632788"
                            }
                          },
                          "parameters": {
                            "FileShares": {
                              "type": "array"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "RecoveryServicesVaultName": {
                              "type": "string"
                            },
                            "ResourceGroupStorage": {
                              "type": "string"
                            },
                            "StorageAccountNamePrefix": {
                              "type": "string"
                            },
                            "StorageCount": {
                              "type": "int"
                            },
                            "StorageIndex": {
                              "type": "int"
                            },
                            "TagsRecoveryServicesVault": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "protectionContainers",
                                "count": "[length(range(0, parameters('StorageCount')))]"
                              },
                              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('ResourceGroupStorage'), parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0'))]",
                              "properties": {
                                "backupManagementType": "AzureStorage",
                                "containerType": "StorageContainer",
                                "sourceResourceId": "[resourceId(parameters('ResourceGroupStorage'), 'Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0')))]"
                              }
                            },
                            {
                              "copy": {
                                "name": "protectedItems_FileShares",
                                "count": "[length(range(0, parameters('StorageCount')))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('BackupProtectedItems_FileShares_{0}_{1}', add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), parameters('Timestamp'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "FileShares": {
                                    "value": "[parameters('FileShares')]"
                                  },
                                  "Location": {
                                    "value": "[parameters('Location')]"
                                  },
                                  "ProtectionContainerName": {
                                    "value": "[format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('ResourceGroupStorage'), parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0'))]"
                                  },
                                  "PolicyId": {
                                    "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyStorage')]"
                                  },
                                  "SourceResourceId": {
                                    "value": "[resourceId(parameters('ResourceGroupStorage'), 'Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[copyIndex()], parameters('StorageIndex')), 2, '0')))]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('TagsRecoveryServicesVault')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1224541537206597376"
                                    }
                                  },
                                  "parameters": {
                                    "FileShares": {
                                      "type": "array"
                                    },
                                    "Location": {
                                      "type": "string"
                                    },
                                    "PolicyId": {
                                      "type": "string"
                                    },
                                    "ProtectionContainerName": {
                                      "type": "string"
                                    },
                                    "SourceResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "copy": {
                                        "name": "protectedItems_FileShare",
                                        "count": "[length(parameters('FileShares'))]"
                                      },
                                      "condition": "[contains(parameters('FileShares')[copyIndex()], 'profile')]",
                                      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                                      "apiVersion": "2022-03-01",
                                      "name": "[format('{0}/AzureFileShare;{1}', parameters('ProtectionContainerName'), parameters('FileShares')[copyIndex()])]",
                                      "location": "[parameters('Location')]",
                                      "tags": "[parameters('Tags')]",
                                      "properties": {
                                        "protectedItemType": "AzureFileShareProtectedItem",
                                        "policyId": "[parameters('PolicyId')]",
                                        "sourceResourceId": "[parameters('SourceResourceId')]"
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers', split(format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('ResourceGroupStorage'), parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), '/')[0], split(format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('ResourceGroupStorage'), parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), '/')[1], split(format('{0}/Azure/storagecontainer;Storage;{1};{2}{3}', parameters('RecoveryServicesVaultName'), parameters('ResourceGroupStorage'), parameters('StorageAccountNamePrefix'), padLeft(add(range(0, parameters('StorageCount'))[range(0, parameters('StorageCount'))[copyIndex()]], parameters('StorageIndex')), 2, '0')), '/')[2])]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "condition": "[and(contains(parameters('FslogixStorage'), 'AzureStorageAccount Premium'), greater(parameters('StorageCount'), 0))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AutoIncreasePremiumFileShareQuota_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "ArtifactsLocation": {
                            "value": "[parameters('ArtifactsLocation')]"
                          },
                          "AutomationAccountName": {
                            "value": "[parameters('AutomationAccountName')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "StorageAccountNamePrefix": {
                            "value": "[parameters('StorageAccountNamePrefix')]"
                          },
                          "StorageCount": {
                            "value": "[parameters('StorageCount')]"
                          },
                          "StorageIndex": {
                            "value": "[parameters('StorageIndex')]"
                          },
                          "StorageResourceGroupName": {
                            "value": "[parameters('ResourceGroupStorage')]"
                          },
                          "Tags": {
                            "value": "[parameters('TagsAutomationAccounts')]"
                          },
                          "Timestamp": {
                            "value": "[parameters('Timestamp')]"
                          },
                          "TimeZone": {
                            "value": "[parameters('TimeZone')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "8009148943158134498"
                            }
                          },
                          "parameters": {
                            "ArtifactsLocation": {
                              "type": "string"
                            },
                            "AutomationAccountName": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "StorageAccountNamePrefix": {
                              "type": "string"
                            },
                            "StorageCount": {
                              "type": "int"
                            },
                            "StorageIndex": {
                              "type": "int"
                            },
                            "StorageResourceGroupName": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string"
                            },
                            "TimeZone": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "RunbookName": "Auto-Increase-Premium-File-Share-Quota",
                            "SubscriptionId": "[subscription().subscriptionId]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Automation/automationAccounts/runbooks",
                              "apiVersion": "2019-06-01",
                              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('RunbookName'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "runbookType": "PowerShell",
                                "logProgress": false,
                                "logVerbose": false,
                                "publishContentLink": {
                                  "uri": "[format('{0}Set-FileShareScaling.ps1', parameters('ArtifactsLocation'))]",
                                  "version": "1.0.0.0"
                                }
                              }
                            },
                            {
                              "copy": {
                                "name": "schedules",
                                "count": "[length(range(parameters('StorageIndex'), parameters('StorageCount')))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Schedules_{0}_{1}', range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "AutomationAccountName": {
                                    "value": "[parameters('AutomationAccountName')]"
                                  },
                                  "StorageAccountName": {
                                    "value": "[format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], 2, '0'))]"
                                  },
                                  "TimeZone": {
                                    "value": "[parameters('TimeZone')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "11753962359551665378"
                                    }
                                  },
                                  "parameters": {
                                    "AutomationAccountName": {
                                      "type": "string"
                                    },
                                    "StorageAccountName": {
                                      "type": "string"
                                    },
                                    "Time": {
                                      "type": "string",
                                      "defaultValue": "[utcNow()]"
                                    },
                                    "TimeZone": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "copy": {
                                        "name": "schedules_ProfileContainers",
                                        "count": "[length(range(0, 4))]"
                                      },
                                      "type": "Microsoft.Automation/automationAccounts/schedules",
                                      "apiVersion": "2022-08-08",
                                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_ProfileContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                                      "properties": {
                                        "advancedSchedule": {},
                                        "description": null,
                                        "expiryTime": null,
                                        "frequency": "Hour",
                                        "interval": 1,
                                        "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                                        "timeZone": "[parameters('TimeZone')]"
                                      }
                                    },
                                    {
                                      "copy": {
                                        "name": "schedules_OfficeContainers",
                                        "count": "[length(range(0, 4))]"
                                      },
                                      "type": "Microsoft.Automation/automationAccounts/schedules",
                                      "apiVersion": "2022-08-08",
                                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_OfficeContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                                      "properties": {
                                        "advancedSchedule": {},
                                        "description": null,
                                        "expiryTime": null,
                                        "frequency": "Hour",
                                        "interval": 1,
                                        "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                                        "timeZone": "[parameters('TimeZone')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "copy": {
                                "name": "jobSchedules",
                                "count": "[length(range(parameters('StorageIndex'), parameters('StorageCount')))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('JobSchedules_{0}_{1}', range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], parameters('Timestamp'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "AutomationAccountName": {
                                    "value": "[parameters('AutomationAccountName')]"
                                  },
                                  "Environment": {
                                    "value": "[environment().name]"
                                  },
                                  "RunbookName": {
                                    "value": "[variables('RunbookName')]"
                                  },
                                  "ResourceGroupName": {
                                    "value": "[parameters('StorageResourceGroupName')]"
                                  },
                                  "StorageAccountName": {
                                    "value": "[format('{0}{1}', parameters('StorageAccountNamePrefix'), padLeft(range(parameters('StorageIndex'), parameters('StorageCount'))[copyIndex()], 2, '0'))]"
                                  },
                                  "SubscriptionId": {
                                    "value": "[variables('SubscriptionId')]"
                                  },
                                  "Timestamp": {
                                    "value": "[parameters('Timestamp')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "347643499261182550"
                                    }
                                  },
                                  "parameters": {
                                    "AutomationAccountName": {
                                      "type": "string"
                                    },
                                    "Environment": {
                                      "type": "string"
                                    },
                                    "ResourceGroupName": {
                                      "type": "string"
                                    },
                                    "RunbookName": {
                                      "type": "string"
                                    },
                                    "StorageAccountName": {
                                      "type": "string"
                                    },
                                    "SubscriptionId": {
                                      "type": "string"
                                    },
                                    "Timestamp": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "copy": {
                                        "name": "jobSchedules_ProfileContainers",
                                        "count": "[length(range(0, 4))]"
                                      },
                                      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                                      "apiVersion": "2022-08-08",
                                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Timestamp'), parameters('RunbookName'), parameters('StorageAccountName'), 'ProfileContainers', string(range(0, 4)[copyIndex()])))]",
                                      "properties": {
                                        "parameters": {
                                          "Environment": "[parameters('Environment')]",
                                          "FileShareName": "profilecontainers",
                                          "ResourceGroupName": "[parameters('ResourceGroupName')]",
                                          "StorageAccountName": "[parameters('StorageAccountName')]",
                                          "SubscriptionId": "[parameters('SubscriptionId')]"
                                        },
                                        "runbook": {
                                          "name": "[parameters('RunbookName')]"
                                        },
                                        "runOn": null,
                                        "schedule": {
                                          "name": "[format('{0}_ProfileContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15))]"
                                        }
                                      }
                                    },
                                    {
                                      "copy": {
                                        "name": "jobSchedules_OfficeContainers",
                                        "count": "[length(range(0, 4))]"
                                      },
                                      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                                      "apiVersion": "2022-08-08",
                                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Timestamp'), parameters('RunbookName'), parameters('StorageAccountName'), 'OfficeContainers', string(range(0, 4)[copyIndex()])))]",
                                      "properties": {
                                        "parameters": {
                                          "Environment": "[parameters('Environment')]",
                                          "FileShareName": "officecontainers",
                                          "ResourceGroupName": "[parameters('ResourceGroupName')]",
                                          "StorageAccountName": "[parameters('StorageAccountName')]",
                                          "SubscriptionId": "[parameters('SubscriptionId')]"
                                        },
                                        "runbook": {
                                          "name": "[parameters('RunbookName')]"
                                        },
                                        "runOn": null,
                                        "schedule": {
                                          "name": "[format('{0}_OfficeContainers_{1}min', parameters('StorageAccountName'), mul(add(range(0, 4)[copyIndex()], 1), 15))]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), variables('RunbookName'))]",
                                "schedules"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('RoleAssignment_{0}_{1}', parameters('StorageResourceGroupName'), parameters('Timestamp'))]",
                              "resourceGroup": "[parameters('StorageResourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "PrincipalId": {
                                    "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2022-08-08', 'full').identity.principalId]"
                                  },
                                  "PrincipalType": {
                                    "value": "ServicePrincipal"
                                  },
                                  "RoleDefinitionId": {
                                    "value": "17d1049b-9a84-46fb-8f53-869881c3d3ab"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "3512679634413550227"
                                    }
                                  },
                                  "parameters": {
                                    "PrincipalId": {
                                      "type": "string"
                                    },
                                    "PrincipalType": {
                                      "type": "string"
                                    },
                                    "RoleDefinitionId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2022-04-01",
                                      "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                                      "properties": {
                                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                                        "principalId": "[parameters('PrincipalId')]",
                                        "principalType": "[parameters('PrincipalType')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "netAppShares": {
              "type": "array",
              "value": "[if(equals(parameters('StorageSolution'), 'AzureNetAppFiles'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupStorage')), 'Microsoft.Resources/deployments', format('AzureNetAppFiles_{0}', parameters('Timestamp'))), '2022-09-01').outputs.fileShares.value, createArray('None'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('SessionHosts_{0}', parameters('Timestamp'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AcceleratedNetworking": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ValidateAcceleratedNetworking.value]"
          },
          "ArtifactsLocation": {
            "value": "[parameters('ArtifactsLocation')]"
          },
          "AutomationAccountName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.AutomationAccountName.value]"
          },
          "Availability": {
            "value": "[parameters('Availability')]"
          },
          "AvailabilitySetNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.AvailabilitySetNamePrefix.value]"
          },
          "AvailabilitySetsCount": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.AvailabilitySetsCount.value]"
          },
          "AvailabilitySetsIndex": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.BeginAvSetRange.value]"
          },
          "AvailabilityZones": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ValidateAvailabilityZones.value]"
          },
          "DiskEncryption": {
            "value": "[parameters('DiskEncryption')]"
          },
          "DiskEncryptionSetResourceId": "[if(parameters('DiskEncryption'), createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.DiskEncryptionSetResourceId.value), createObject('value', ''))]",
          "DiskNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.DiskNamePrefix.value]"
          },
          "DiskSku": {
            "value": "[parameters('DiskSku')]"
          },
          "DivisionRemainderValue": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.DivisionRemainderValue.value]"
          },
          "DomainJoinPassword": {
            "value": "[parameters('DomainJoinPassword')]"
          },
          "DomainJoinUserPrincipalName": {
            "value": "[parameters('DomainJoinUserPrincipalName')]"
          },
          "DomainName": {
            "value": "[parameters('DomainName')]"
          },
          "ActiveDirectorySolution": {
            "value": "[parameters('ActiveDirectorySolution')]"
          },
          "DrainMode": {
            "value": "[parameters('DrainMode')]"
          },
          "Fslogix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Fslogix.value]"
          },
          "FslogixSolution": {
            "value": "[parameters('FslogixSolution')]"
          },
          "HostPoolName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value]"
          },
          "HostPoolType": {
            "value": "[parameters('HostPoolType')]"
          },
          "ImageOffer": {
            "value": "[parameters('ImageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('ImagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "ImageVersionResourceId": {
            "value": "[parameters('ImageVersionResourceId')]"
          },
          "Location": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('SubnetResourceId'), '/')[2], split(parameters('SubnetResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('SubnetResourceId'), '/')[8]), '2023-04-01', 'full').location]"
          },
          "LogAnalyticsWorkspaceName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.LogAnalyticsWorkspaceName.value]"
          },
          "ManagementVMName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VirtualMachineName.value]"
          },
          "MaxResourcesPerTemplateDeployment": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.MaxResourcesPerTemplateDeployment.value]"
          },
          "Monitoring": {
            "value": "[parameters('Monitoring')]"
          },
          "NetAppFileShares": "[if(reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.Fslogix.value, createObject('value', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('FSLogix_{0}', parameters('Timestamp'))), '2022-09-01').outputs.netAppShares.value), createObject('value', createArray('None')))]",
          "NetworkInterfaceNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.NetworkInterfaceNamePrefix.value]"
          },
          "OuPath": {
            "value": "[parameters('OuPath')]"
          },
          "PooledHostPool": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.PooledHostPool.value]"
          },
          "RecoveryServices": {
            "value": "[parameters('RecoveryServices')]"
          },
          "RecoveryServicesVaultName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.RecoveryServicesVaultName.value]"
          },
          "ResourceGroupControlPlane": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupControlPlane.value]"
          },
          "ResourceGroupHosts": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupHosts.value]"
          },
          "ResourceGroupManagement": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value]"
          },
          "RoleDefinitions": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.RoleDefinitions.value]"
          },
          "ScalingBeginPeakTime": {
            "value": "[parameters('ScalingBeginPeakTime')]"
          },
          "ScalingEndPeakTime": {
            "value": "[parameters('ScalingEndPeakTime')]"
          },
          "ScalingLimitSecondsToForceLogOffUser": {
            "value": "[parameters('ScalingLimitSecondsToForceLogOffUser')]"
          },
          "ScalingMinimumNumberOfRdsh": {
            "value": "[parameters('ScalingMinimumNumberOfRdsh')]"
          },
          "ScalingSessionThresholdPerCPU": {
            "value": "[parameters('ScalingSessionThresholdPerCPU')]"
          },
          "ScalingTool": {
            "value": "[parameters('ScalingTool')]"
          },
          "SecurityPrincipalObjectIds": {
            "value": "[map(parameters('SecurityPrincipals'), lambda('item', lambdaVariables('item').objectId))]"
          },
          "SecurityLogAnalyticsWorkspaceResourceId": {
            "value": "[parameters('SecurityLogAnalyticsWorkspaceResourceId')]"
          },
          "SessionHostBatchCount": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.SessionHostBatchCount.value]"
          },
          "SessionHostIndex": {
            "value": "[parameters('SessionHostIndex')]"
          },
          "StorageAccountPrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageAccountNamePrefix.value]"
          },
          "StorageCount": {
            "value": "[parameters('StorageCount')]"
          },
          "StorageIndex": {
            "value": "[parameters('StorageIndex')]"
          },
          "StorageSolution": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageSolution.value]"
          },
          "StorageSuffix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.StorageSuffix.value]"
          },
          "Subnet": {
            "value": "[split(parameters('SubnetResourceId'), '/')[10]]"
          },
          "TagsAutomationAccounts": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Automation/automationAccounts'), parameters('Tags')['Microsoft.Automation/automationAccounts'], createObject()))]"
          },
          "TagsAvailabilitySets": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Compute/availabilitySets'), parameters('Tags')['Microsoft.Compute/availabilitySets'], createObject()))]"
          },
          "TagsNetworkInterfaces": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Network/networkInterfaces'), parameters('Tags')['Microsoft.Network/networkInterfaces'], createObject()))]"
          },
          "TagsRecoveryServicesVault": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.RecoveryServices/vaults'), parameters('Tags')['Microsoft.RecoveryServices/vaults'], createObject()))]"
          },
          "TagsVirtualMachines": {
            "value": "[union(createObject('cm-resource-parent', format('{0}}}/resourceGroups/{1}/providers/Microsoft.DesktopVirtualization/hostpools/{2}', subscription().id, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ResourceGroupManagement.value, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.HostPoolName.value)), if(contains(parameters('Tags'), 'Microsoft.Compute/virtualMachines'), parameters('Tags')['Microsoft.Compute/virtualMachines'], createObject()))]"
          },
          "TimeDifference": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.TimeDifference.value]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "TimeZone": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp'))), '2022-09-01').outputs.TimeZone.value]"
          },
          "TrustedLaunch": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.ValidateTrustedLaunch.value]"
          },
          "UserAssignedIdentityClientId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp'))), '2022-09-01').outputs.UserAssignedIdentityClientId.value]"
          },
          "VirtualMachineNamePrefix": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp'))), '2022-09-01').outputs.VirtualMachineNamePrefix.value]"
          },
          "VirtualMachinePassword": {
            "value": "[parameters('VirtualMachinePassword')]"
          },
          "VirtualMachineSize": {
            "value": "[parameters('VirtualMachineSize')]"
          },
          "VirtualMachineUsername": {
            "value": "[parameters('VirtualMachineUsername')]"
          },
          "VirtualNetwork": {
            "value": "[split(parameters('SubnetResourceId'), '/')[8]]"
          },
          "VirtualNetworkResourceGroup": {
            "value": "[split(parameters('SubnetResourceId'), '/')[4]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "7282166505637254562"
            }
          },
          "parameters": {
            "AcceleratedNetworking": {
              "type": "string"
            },
            "ActiveDirectorySolution": {
              "type": "string"
            },
            "ArtifactsLocation": {
              "type": "string"
            },
            "AutomationAccountName": {
              "type": "string"
            },
            "Availability": {
              "type": "string"
            },
            "AvailabilitySetNamePrefix": {
              "type": "string"
            },
            "AvailabilitySetsCount": {
              "type": "int"
            },
            "AvailabilitySetsIndex": {
              "type": "int"
            },
            "AvailabilityZones": {
              "type": "array"
            },
            "DiskEncryption": {
              "type": "bool"
            },
            "DiskEncryptionSetResourceId": {
              "type": "string"
            },
            "DiskNamePrefix": {
              "type": "string"
            },
            "DiskSku": {
              "type": "string"
            },
            "DivisionRemainderValue": {
              "type": "int"
            },
            "DomainJoinPassword": {
              "type": "securestring"
            },
            "DomainJoinUserPrincipalName": {
              "type": "string"
            },
            "DomainName": {
              "type": "string"
            },
            "DrainMode": {
              "type": "bool"
            },
            "FslogixSolution": {
              "type": "string"
            },
            "Fslogix": {
              "type": "bool"
            },
            "HostPoolName": {
              "type": "string"
            },
            "HostPoolType": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "ImageVersionResourceId": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceName": {
              "type": "string"
            },
            "ManagementVMName": {
              "type": "string"
            },
            "MaxResourcesPerTemplateDeployment": {
              "type": "int"
            },
            "Monitoring": {
              "type": "bool"
            },
            "NetAppFileShares": {
              "type": "array"
            },
            "NetworkInterfaceNamePrefix": {
              "type": "string"
            },
            "OuPath": {
              "type": "string"
            },
            "PooledHostPool": {
              "type": "bool"
            },
            "RecoveryServices": {
              "type": "bool"
            },
            "RecoveryServicesVaultName": {
              "type": "string"
            },
            "ResourceGroupControlPlane": {
              "type": "string"
            },
            "ResourceGroupHosts": {
              "type": "string"
            },
            "ResourceGroupManagement": {
              "type": "string"
            },
            "RoleDefinitions": {
              "type": "object"
            },
            "ScalingBeginPeakTime": {
              "type": "string"
            },
            "ScalingEndPeakTime": {
              "type": "string"
            },
            "ScalingLimitSecondsToForceLogOffUser": {
              "type": "string"
            },
            "ScalingMinimumNumberOfRdsh": {
              "type": "string"
            },
            "ScalingSessionThresholdPerCPU": {
              "type": "string"
            },
            "ScalingTool": {
              "type": "bool"
            },
            "SecurityPrincipalObjectIds": {
              "type": "array"
            },
            "SecurityLogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "SessionHostBatchCount": {
              "type": "int"
            },
            "SessionHostIndex": {
              "type": "int"
            },
            "StorageAccountPrefix": {
              "type": "string"
            },
            "StorageCount": {
              "type": "int"
            },
            "StorageIndex": {
              "type": "int"
            },
            "StorageSolution": {
              "type": "string"
            },
            "StorageSuffix": {
              "type": "string"
            },
            "Subnet": {
              "type": "string"
            },
            "TagsAutomationAccounts": {
              "type": "object"
            },
            "TagsAvailabilitySets": {
              "type": "object"
            },
            "TagsNetworkInterfaces": {
              "type": "object"
            },
            "TagsRecoveryServicesVault": {
              "type": "object"
            },
            "TagsVirtualMachines": {
              "type": "object"
            },
            "TimeDifference": {
              "type": "string"
            },
            "Timestamp": {
              "type": "string"
            },
            "TimeZone": {
              "type": "string"
            },
            "TrustedLaunch": {
              "type": "string"
            },
            "UserAssignedIdentityClientId": {
              "type": "string"
            },
            "VirtualMachineNamePrefix": {
              "type": "string"
            },
            "VirtualMachinePassword": {
              "type": "securestring"
            },
            "VirtualMachineSize": {
              "type": "string"
            },
            "VirtualMachineUsername": {
              "type": "string"
            },
            "VirtualNetwork": {
              "type": "string"
            },
            "VirtualNetworkResourceGroup": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[and(parameters('PooledHostPool'), equals(parameters('Availability'), 'AvailabilitySets'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AvailabilitySets_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupHosts')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AvailabilitySetNamePrefix": {
                    "value": "[parameters('AvailabilitySetNamePrefix')]"
                  },
                  "AvailabilitySetsCount": {
                    "value": "[parameters('AvailabilitySetsCount')]"
                  },
                  "AvailabilitySetsIndex": {
                    "value": "[parameters('AvailabilitySetsIndex')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "TagsAvailabilitySets": {
                    "value": "[parameters('TagsAvailabilitySets')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17326180399426609221"
                    }
                  },
                  "parameters": {
                    "AvailabilitySetNamePrefix": {
                      "type": "string"
                    },
                    "AvailabilitySetsCount": {
                      "type": "int"
                    },
                    "AvailabilitySetsIndex": {
                      "type": "int"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "TagsAvailabilitySets": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "availabilitySets",
                        "count": "[length(range(0, parameters('AvailabilitySetsCount')))]"
                      },
                      "type": "Microsoft.Compute/availabilitySets",
                      "apiVersion": "2019-07-01",
                      "name": "[format('{0}{1}', parameters('AvailabilitySetNamePrefix'), padLeft(add(range(0, parameters('AvailabilitySetsCount'))[copyIndex()], parameters('AvailabilitySetsIndex')), 2, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsAvailabilitySets')]",
                      "sku": {
                        "name": "Aligned"
                      },
                      "properties": {
                        "platformUpdateDomainCount": 5,
                        "platformFaultDomainCount": 2
                      }
                    }
                  ]
                }
              }
            },
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(range(0, length(parameters('SecurityPrincipalObjectIds'))))]"
              },
              "condition": "[not(contains(parameters('ActiveDirectorySolution'), 'DomainServices'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RoleAssignments_{0}_{1}', range(0, length(parameters('SecurityPrincipalObjectIds')))[copyIndex()], parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupHosts')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "PrincipalId": {
                    "value": "[parameters('SecurityPrincipalObjectIds')[range(0, length(parameters('SecurityPrincipalObjectIds')))[copyIndex()]]]"
                  },
                  "PrincipalType": {
                    "value": "Group"
                  },
                  "RoleDefinitionId": {
                    "value": "[parameters('RoleDefinitions').VirtualMachineUserLogin]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "3512679634413550227"
                    }
                  },
                  "parameters": {
                    "PrincipalId": {
                      "type": "string"
                    },
                    "PrincipalType": {
                      "type": "string"
                    },
                    "RoleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                        "principalId": "[parameters('PrincipalId')]",
                        "principalType": "[parameters('PrincipalType')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "copy": {
                "name": "virtualMachines",
                "count": "[length(range(1, parameters('SessionHostBatchCount')))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VirtualMachines_{0}_{1}', sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupHosts')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AcceleratedNetworking": {
                    "value": "[parameters('AcceleratedNetworking')]"
                  },
                  "ActiveDirectorySolution": {
                    "value": "[parameters('ActiveDirectorySolution')]"
                  },
                  "ArtifactsLocation": {
                    "value": "[parameters('ArtifactsLocation')]"
                  },
                  "Availability": {
                    "value": "[parameters('Availability')]"
                  },
                  "AvailabilityZones": {
                    "value": "[parameters('AvailabilityZones')]"
                  },
                  "AvailabilitySetNamePrefix": {
                    "value": "[parameters('AvailabilitySetNamePrefix')]"
                  },
                  "DiskEncryption": {
                    "value": "[parameters('DiskEncryption')]"
                  },
                  "DiskEncryptionSetResourceId": {
                    "value": "[parameters('DiskEncryptionSetResourceId')]"
                  },
                  "DiskNamePrefix": {
                    "value": "[parameters('DiskNamePrefix')]"
                  },
                  "DiskSku": {
                    "value": "[parameters('DiskSku')]"
                  },
                  "DomainJoinPassword": {
                    "value": "[parameters('DomainJoinPassword')]"
                  },
                  "DomainJoinUserPrincipalName": {
                    "value": "[parameters('DomainJoinUserPrincipalName')]"
                  },
                  "DomainName": {
                    "value": "[parameters('DomainName')]"
                  },
                  "DrainMode": {
                    "value": "[parameters('DrainMode')]"
                  },
                  "Fslogix": {
                    "value": "[parameters('Fslogix')]"
                  },
                  "FslogixSolution": {
                    "value": "[parameters('FslogixSolution')]"
                  },
                  "HostPoolName": {
                    "value": "[parameters('HostPoolName')]"
                  },
                  "HostPoolType": {
                    "value": "[parameters('HostPoolType')]"
                  },
                  "ImageOffer": {
                    "value": "[parameters('ImageOffer')]"
                  },
                  "ImagePublisher": {
                    "value": "[parameters('ImagePublisher')]"
                  },
                  "ImageSku": {
                    "value": "[parameters('ImageSku')]"
                  },
                  "ImageVersionResourceId": {
                    "value": "[parameters('ImageVersionResourceId')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "LogAnalyticsWorkspaceName": {
                    "value": "[parameters('LogAnalyticsWorkspaceName')]"
                  },
                  "ManagementVMName": {
                    "value": "[parameters('ManagementVMName')]"
                  },
                  "Monitoring": {
                    "value": "[parameters('Monitoring')]"
                  },
                  "NetAppFileShares": {
                    "value": "[parameters('NetAppFileShares')]"
                  },
                  "NetworkInterfaceNamePrefix": {
                    "value": "[parameters('NetworkInterfaceNamePrefix')]"
                  },
                  "OuPath": {
                    "value": "[parameters('OuPath')]"
                  },
                  "ResourceGroupControlPlane": {
                    "value": "[parameters('ResourceGroupControlPlane')]"
                  },
                  "ResourceGroupManagement": {
                    "value": "[parameters('ResourceGroupManagement')]"
                  },
                  "SecurityLogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('SecurityLogAnalyticsWorkspaceResourceId')]"
                  },
                  "SessionHostCount": "[if(and(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], parameters('SessionHostBatchCount')), greater(parameters('DivisionRemainderValue'), 0)), createObject('value', parameters('DivisionRemainderValue')), createObject('value', parameters('MaxResourcesPerTemplateDeployment')))]",
                  "SessionHostIndex": "[if(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), createObject('value', parameters('SessionHostIndex')), createObject('value', add(mul(sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('MaxResourcesPerTemplateDeployment')), parameters('SessionHostIndex'))))]",
                  "StorageAccountPrefix": {
                    "value": "[parameters('StorageAccountPrefix')]"
                  },
                  "StorageCount": {
                    "value": "[parameters('StorageCount')]"
                  },
                  "StorageIndex": {
                    "value": "[parameters('StorageIndex')]"
                  },
                  "StorageSolution": {
                    "value": "[parameters('StorageSolution')]"
                  },
                  "StorageSuffix": {
                    "value": "[parameters('StorageSuffix')]"
                  },
                  "Subnet": {
                    "value": "[parameters('Subnet')]"
                  },
                  "TagsNetworkInterfaces": {
                    "value": "[parameters('TagsNetworkInterfaces')]"
                  },
                  "TagsVirtualMachines": {
                    "value": "[parameters('TagsVirtualMachines')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "TrustedLaunch": {
                    "value": "[parameters('TrustedLaunch')]"
                  },
                  "UserAssignedIdentityClientId": {
                    "value": "[parameters('UserAssignedIdentityClientId')]"
                  },
                  "VirtualMachineNamePrefix": {
                    "value": "[parameters('VirtualMachineNamePrefix')]"
                  },
                  "VirtualMachinePassword": {
                    "value": "[parameters('VirtualMachinePassword')]"
                  },
                  "VirtualMachineSize": {
                    "value": "[parameters('VirtualMachineSize')]"
                  },
                  "VirtualMachineUsername": {
                    "value": "[parameters('VirtualMachineUsername')]"
                  },
                  "VirtualNetwork": {
                    "value": "[parameters('VirtualNetwork')]"
                  },
                  "VirtualNetworkResourceGroup": {
                    "value": "[parameters('VirtualNetworkResourceGroup')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5896762063845582367"
                    }
                  },
                  "parameters": {
                    "ArtifactsLocation": {
                      "type": "string"
                    },
                    "AcceleratedNetworking": {
                      "type": "string"
                    },
                    "ActiveDirectorySolution": {
                      "type": "string"
                    },
                    "Availability": {
                      "type": "string"
                    },
                    "AvailabilitySetNamePrefix": {
                      "type": "string"
                    },
                    "AvailabilityZones": {
                      "type": "array"
                    },
                    "DiskEncryption": {
                      "type": "bool"
                    },
                    "DiskEncryptionSetResourceId": {
                      "type": "string"
                    },
                    "DiskNamePrefix": {
                      "type": "string"
                    },
                    "DiskSku": {
                      "type": "string"
                    },
                    "DomainJoinPassword": {
                      "type": "securestring"
                    },
                    "DomainJoinUserPrincipalName": {
                      "type": "string"
                    },
                    "DomainName": {
                      "type": "string"
                    },
                    "DrainMode": {
                      "type": "bool"
                    },
                    "Fslogix": {
                      "type": "bool"
                    },
                    "FslogixSolution": {
                      "type": "string"
                    },
                    "HostPoolName": {
                      "type": "string"
                    },
                    "HostPoolType": {
                      "type": "string"
                    },
                    "ImageOffer": {
                      "type": "string"
                    },
                    "ImagePublisher": {
                      "type": "string"
                    },
                    "ImageSku": {
                      "type": "string"
                    },
                    "ImageVersionResourceId": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceName": {
                      "type": "string"
                    },
                    "ManagementVMName": {
                      "type": "string"
                    },
                    "Monitoring": {
                      "type": "bool"
                    },
                    "NetAppFileShares": {
                      "type": "array"
                    },
                    "NetworkInterfaceNamePrefix": {
                      "type": "string"
                    },
                    "OuPath": {
                      "type": "string"
                    },
                    "ResourceGroupControlPlane": {
                      "type": "string"
                    },
                    "ResourceGroupManagement": {
                      "type": "string"
                    },
                    "SecurityLogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "SessionHostCount": {
                      "type": "int"
                    },
                    "SessionHostIndex": {
                      "type": "int"
                    },
                    "StorageAccountPrefix": {
                      "type": "string"
                    },
                    "StorageCount": {
                      "type": "int"
                    },
                    "StorageIndex": {
                      "type": "int"
                    },
                    "StorageSolution": {
                      "type": "string"
                    },
                    "StorageSuffix": {
                      "type": "string"
                    },
                    "Subnet": {
                      "type": "string"
                    },
                    "TagsNetworkInterfaces": {
                      "type": "object"
                    },
                    "TagsVirtualMachines": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "TrustedLaunch": {
                      "type": "string"
                    },
                    "UserAssignedIdentityClientId": {
                      "type": "string"
                    },
                    "VirtualMachineNamePrefix": {
                      "type": "string"
                    },
                    "VirtualMachinePassword": {
                      "type": "securestring"
                    },
                    "VirtualMachineSize": {
                      "type": "string"
                    },
                    "VirtualMachineUsername": {
                      "type": "string"
                    },
                    "VirtualNetwork": {
                      "type": "string"
                    },
                    "VirtualNetworkResourceGroup": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "AmdVmSize": "[contains(variables('AmdVmSizes'), parameters('VirtualMachineSize'))]",
                    "AmdVmSizes": [
                      "Standard_NV4as_v4",
                      "Standard_NV8as_v4",
                      "Standard_NV16as_v4",
                      "Standard_NV32as_v4"
                    ],
                    "FslogixExclusions": "[format('\"%TEMP%\\*\\*.VHDX\";\"%Windir%\\TEMP\\*\\*.VHDX\"{0}{1}{2}', variables('FslogixExclusionsCloudCache'), variables('FslogixExclusionsProfileContainers'), variables('FslogixExclusionsOfficeContainers'))]",
                    "FslogixExclusionsCloudCache": "[if(contains(parameters('FslogixSolution'), 'CloudCache'), ';\"%ProgramData%\\FSLogix\\Cache\\*\";\"%ProgramData%\\FSLogix\\Proxy\\*\"', '')]",
                    "FslogixExclusionsOfficeContainers": "[if(contains(parameters('FslogixSolution'), 'Office'), format(';\"{0}\";\"{1}.lock\";\"{2}.meta\";\"{3}.metadata\"', variables('FslogixOfficeShare'), variables('FslogixOfficeShare'), variables('FslogixOfficeShare'), variables('FslogixOfficeShare')), '')]",
                    "FslogixExclusionsProfileContainers": "[format(';\"{0}\";\"{1}.lock\";\"{2}.meta\";\"{3}.metadata\"', variables('FslogixProfileShare'), variables('FslogixProfileShare'), variables('FslogixProfileShare'), variables('FslogixProfileShare'))]",
                    "FslogixOfficeShare": "[format('\\\\{0}??.file.{1}\\office-containers\\*\\*.VHDX', parameters('StorageAccountPrefix'), parameters('StorageSuffix'))]",
                    "FslogixProfileShare": "[format('\\\\{0}??.file.{1}\\profile-containers\\*\\*.VHDX', parameters('StorageAccountPrefix'), parameters('StorageSuffix'))]",
                    "Identity": "[if(not(contains(parameters('ActiveDirectorySolution'), 'DomainServices')), createObject('type', 'SystemAssigned'), null())]",
                    "ImageReference": "[if(empty(parameters('ImageVersionResourceId')), createObject('publisher', parameters('ImagePublisher'), 'offer', parameters('ImageOffer'), 'sku', parameters('ImageSku'), 'version', 'latest'), createObject('id', parameters('ImageVersionResourceId')))]",
                    "Intune": "[contains(parameters('ActiveDirectorySolution'), 'IntuneEnrollment')]",
                    "NvidiaVmSize": "[contains(variables('NvidiaVmSizes'), parameters('VirtualMachineSize'))]",
                    "NvidiaVmSizes": [
                      "Standard_NV6",
                      "Standard_NV12",
                      "Standard_NV24",
                      "Standard_NV12s_v3",
                      "Standard_NV24s_v3",
                      "Standard_NV48s_v3",
                      "Standard_NC4as_T4_v3",
                      "Standard_NC8as_T4_v3",
                      "Standard_NC16as_T4_v3",
                      "Standard_NC64as_T4_v3",
                      "Standard_NV6ads_A10_v5",
                      "Standard_NV12ads_A10_v5",
                      "Standard_NV18ads_A10_v5",
                      "Standard_NV36ads_A10_v5",
                      "Standard_NV36adms_A10_v5",
                      "Standard_NV72ads_A10_v5"
                    ],
                    "PooledHostPool": "[equals(split(parameters('HostPoolType'), ' ')[0], 'Pooled')]",
                    "SecurityLogAnalyticsWorkspaceName": "[if(variables('SecurityMonitoring'), split(parameters('SecurityLogAnalyticsWorkspaceResourceId'), '/')[8], '')]",
                    "SecurityLogAnalyticsWorkspaceResourceGroupName": "[if(variables('SecurityMonitoring'), split(parameters('SecurityLogAnalyticsWorkspaceResourceId'), '/')[4], resourceGroup().name)]",
                    "SecurityLogAnalyticsWorkspaceSubscriptionId": "[if(variables('SecurityMonitoring'), split(parameters('SecurityLogAnalyticsWorkspaceResourceId'), '/')[2], subscription().subscriptionId)]",
                    "SecurityMonitoring": "[if(empty(parameters('SecurityLogAnalyticsWorkspaceResourceId')), false(), true())]"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "networkInterface",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2020-05-01",
                      "name": "[format('{0}{1}', parameters('NetworkInterfaceNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsNetworkInterfaces')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[resourceId(subscription().subscriptionId, parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[if(equals(parameters('AcceleratedNetworking'), 'True'), true(), false())]",
                        "enableIPForwarding": false
                      }
                    },
                    {
                      "copy": {
                        "name": "virtualMachine",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "zones": "[if(equals(parameters('Availability'), 'AvailabilityZones'), createArray(parameters('AvailabilityZones')[mod(range(0, parameters('SessionHostCount'))[copyIndex()], length(parameters('AvailabilityZones')))]), null())]",
                      "identity": "[variables('Identity')]",
                      "properties": {
                        "availabilitySet": "[if(equals(parameters('Availability'), 'AvailabilitySets'), createObject('id', resourceId('Microsoft.Compute/availabilitySets', format('{0}-{1}', parameters('AvailabilitySetNamePrefix'), div(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 200)))), null())]",
                        "hardwareProfile": {
                          "vmSize": "[parameters('VirtualMachineSize')]"
                        },
                        "storageProfile": {
                          "imageReference": "[variables('ImageReference')]",
                          "osDisk": {
                            "name": "[format('{0}{1}', parameters('DiskNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                            "osType": "Windows",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "deleteOption": "Delete",
                            "managedDisk": {
                              "diskEncryptionSet": "[if(parameters('DiskEncryption'), createObject('id', parameters('DiskEncryptionSetResourceId')), null())]",
                              "storageAccountType": "[parameters('DiskSku')]"
                            }
                          },
                          "dataDisks": []
                        },
                        "osProfile": {
                          "computerName": "[format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                          "adminUsername": "[parameters('VirtualMachineUsername')]",
                          "adminPassword": "[parameters('VirtualMachinePassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": false
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', parameters('NetworkInterfaceNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0')))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "securityProfile": {
                          "uefiSettings": "[if(equals(parameters('TrustedLaunch'), 'true'), createObject('secureBootEnabled', true(), 'vTpmEnabled', true()), null())]",
                          "securityType": "[if(equals(parameters('TrustedLaunch'), 'true'), 'TrustedLaunch', null())]",
                          "encryptionAtHost": "[parameters('DiskEncryption')]"
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": false
                          }
                        },
                        "licenseType": "[if(equals(parameters('ImagePublisher'), 'MicrosoftWindowsDesktop'), 'Windows_Client', 'Windows_Server')]"
                      },
                      "dependsOn": [
                        "networkInterface"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_IaasAntimalware",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'IaaSAntimalware')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "enableAutomaticUpgrade": false,
                        "settings": {
                          "AntimalwareEnabled": true,
                          "RealtimeProtectionEnabled": "true",
                          "ScheduledScanSettings": {
                            "isEnabled": "true",
                            "day": "7",
                            "time": "120",
                            "scanType": "Quick"
                          },
                          "Exclusions": "[if(parameters('Fslogix'), createObject('Paths', variables('FslogixExclusions')), createObject())]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_MicrosoftMonitoringAgent",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[parameters('Monitoring')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'MicrosoftMonitoringAgent')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "workspaceId": "[if(parameters('Monitoring'), reference(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName')), '2015-03-20').customerId, null())]"
                        },
                        "protectedSettings": {
                          "workspaceKey": "[if(parameters('Monitoring'), listKeys(resourceId(parameters('ResourceGroupManagement'), 'Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName')), '2015-03-20').primarySharedKey, null())]"
                        }
                      },
                      "dependsOn": [
                        "extension_IaasAntimalware",
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_CustomScriptExtension",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'CustomScriptExtension')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [
                            "[format('{0}Set-SessionHostConfiguration.ps1', parameters('ArtifactsLocation'))]"
                          ],
                          "timestamp": "[parameters('Timestamp')]"
                        },
                        "protectedSettings": {
                          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File Set-SessionHostConfiguration.ps1 -AmdVmSize {0} -ActiveDirectorySolution {1} -Environment {2} -FSLogix {3} -FslogixSolution {4} -HostPoolName {5} -HostPoolRegistrationToken {6} -ImageOffer {7} -ImagePublisher {8} -NetAppFileShares {9} -NvidiaVmSize {10} -PooledHostPool {11} -SecurityMonitoring {12} -SecurityWorkspaceId {13} -SecurityWorkspaceKey {14} -StorageAccountPrefix {15} -StorageCount {16} -StorageIndex {17} -StorageSolution {18} -StorageSuffix {19}', variables('AmdVmSize'), parameters('ActiveDirectorySolution'), environment().name, parameters('Fslogix'), parameters('FslogixSolution'), parameters('HostPoolName'), reference(resourceId(parameters('ResourceGroupControlPlane'), 'Microsoft.DesktopVirtualization/hostpools', parameters('HostPoolName')), '2019-12-10-preview').registrationInfo.token, parameters('ImageOffer'), parameters('ImagePublisher'), parameters('NetAppFileShares'), variables('NvidiaVmSize'), variables('PooledHostPool'), variables('SecurityMonitoring'), if(variables('SecurityMonitoring'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('SecurityLogAnalyticsWorkspaceSubscriptionId'), variables('SecurityLogAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', variables('SecurityLogAnalyticsWorkspaceName')), '2021-06-01').customerId, 'NotApplicable'), if(variables('SecurityMonitoring'), listKeys(parameters('SecurityLogAnalyticsWorkspaceResourceId'), '2021-06-01').primarySharedKey, 'NotApplicable'), parameters('StorageAccountPrefix'), parameters('StorageCount'), parameters('StorageIndex'), parameters('StorageSolution'), parameters('StorageSuffix'))]"
                        }
                      },
                      "dependsOn": [
                        "extension_MicrosoftMonitoringAgent",
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_JsonADDomainExtension",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[contains(parameters('ActiveDirectorySolution'), 'DomainServices')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'JsonADDomainExtension')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "Name": "[parameters('DomainName')]",
                          "User": "[parameters('DomainJoinUserPrincipalName')]",
                          "Restart": "true",
                          "Options": "3",
                          "OUPath": "[parameters('OuPath')]"
                        },
                        "protectedSettings": {
                          "Password": "[parameters('DomainJoinPassword')]"
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('CSE_DrainMode_{0}', parameters('Timestamp')))]",
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_AADLoginForWindows",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[not(contains(parameters('ActiveDirectorySolution'), 'DomainServices'))]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'AADLoginForWindows')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.ActiveDirectory",
                        "type": "AADLoginForWindows",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": "[if(variables('Intune'), createObject('mdmId', '0000000a-0000-0000-c000-000000000000'), null())]"
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('CSE_DrainMode_{0}', parameters('Timestamp')))]",
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_AmdGpuDriverWindows",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[variables('AmdVmSize')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'AmdGpuDriverWindows')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "publisher": "Microsoft.HpcCompute",
                        "type": "AmdGpuDriverWindows",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {}
                      },
                      "dependsOn": [
                        "extension_AADLoginForWindows",
                        "extension_JsonADDomainExtension",
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "extension_NvidiaGpuDriverWindows",
                        "count": "[length(range(0, parameters('SessionHostCount')))]"
                      },
                      "condition": "[variables('NvidiaVmSize')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')), 'NvidiaGpuDriverWindows')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('TagsVirtualMachines')]",
                      "properties": {
                        "publisher": "Microsoft.HpcCompute",
                        "type": "NvidiaGpuDriverWindows",
                        "typeHandlerVersion": "1.2",
                        "autoUpgradeMinorVersion": true,
                        "settings": {}
                      },
                      "dependsOn": [
                        "extension_AADLoginForWindows",
                        "extension_JsonADDomainExtension",
                        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[range(0, parameters('SessionHostCount'))[copyIndex()]], parameters('SessionHostIndex')), 4, '0')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('DrainMode')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('CSE_DrainMode_{0}', parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "ArtifactsLocation": {
                            "value": "[parameters('ArtifactsLocation')]"
                          },
                          "File": {
                            "value": "Set-AvdDrainMode.ps1"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Parameters": {
                            "value": "[format('-Environment {0} -HostPoolName {1} -HostPoolResourceGroupName {2} -SubscriptionId {3} -TenantId {4} -UserAssignedIdentityClientId {5}', environment().name, parameters('HostPoolName'), parameters('ResourceGroupManagement'), subscription().subscriptionId, tenant().tenantId, parameters('UserAssignedIdentityClientId'))]"
                          },
                          "Tags": {
                            "value": "[parameters('TagsVirtualMachines')]"
                          },
                          "UserAssignedIdentityClientId": {
                            "value": "[parameters('UserAssignedIdentityClientId')]"
                          },
                          "VirtualMachineName": {
                            "value": "[parameters('ManagementVMName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "9729081366734116244"
                            }
                          },
                          "parameters": {
                            "ArtifactsLocation": {
                              "type": "string"
                            },
                            "File": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Parameters": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "Timestamp": {
                              "type": "string",
                              "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
                            },
                            "UserAssignedIdentityClientId": {
                              "type": "string"
                            },
                            "VirtualMachineName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "CommandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} {1}', parameters('File'), parameters('Parameters'))]",
                            "FileUri": "[format('{0}{1}', parameters('ArtifactsLocation'), parameters('File'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2021-03-01",
                              "name": "[format('{0}/{1}', parameters('VirtualMachineName'), 'CustomScriptExtension')]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "CustomScriptExtension",
                                "typeHandlerVersion": "1.10",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "timestamp": "[parameters('Timestamp')]"
                                },
                                "protectedSettings": "[if(contains(parameters('File'), environment().suffixes.storage), createObject('commandToExecute', variables('CommandToExecute'), 'fileUris', createArray(variables('FileUri')), 'managedIdentity', createObject('clientId', parameters('UserAssignedIdentityClientId'))), createObject('commandToExecute', variables('CommandToExecute'), 'fileUris', createArray(variables('FileUri'))))]"
                              }
                            }
                          ],
                          "outputs": {
                            "value": {
                              "type": "object",
                              "value": "[json(filter(reference(resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VirtualMachineName'), 'CustomScriptExtension'), '2021-03-01').instanceView.substatuses, lambda('item', equals(lambdaVariables('item').code, 'ComponentStatus/StdOut/succeeded')))[0].message)]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "extension_CustomScriptExtension"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupHosts')), 'Microsoft.Resources/deployments', format('AvailabilitySets_{0}', parameters('Timestamp')))]"
              ]
            },
            {
              "condition": "[parameters('RecoveryServices')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('RecoveryServices_VirtualMachines_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "DivisionRemainderValue": {
                    "value": "[parameters('DivisionRemainderValue')]"
                  },
                  "Fslogix": {
                    "value": "[parameters('Fslogix')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "MaxResourcesPerTemplateDeployment": {
                    "value": "[parameters('MaxResourcesPerTemplateDeployment')]"
                  },
                  "RecoveryServicesVaultName": {
                    "value": "[parameters('RecoveryServicesVaultName')]"
                  },
                  "ResourceGroupHosts": {
                    "value": "[parameters('ResourceGroupHosts')]"
                  },
                  "ResourceGroupManagement": {
                    "value": "[parameters('ResourceGroupManagement')]"
                  },
                  "SessionHostBatchCount": {
                    "value": "[parameters('SessionHostBatchCount')]"
                  },
                  "SessionHostIndex": {
                    "value": "[parameters('SessionHostIndex')]"
                  },
                  "TagsRecoveryServicesVault": {
                    "value": "[parameters('TagsRecoveryServicesVault')]"
                  },
                  "Timestamp": {
                    "value": "[parameters('Timestamp')]"
                  },
                  "VirtualMachineNamePrefix": {
                    "value": "[parameters('VirtualMachineNamePrefix')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5631606630632053025"
                    }
                  },
                  "parameters": {
                    "DivisionRemainderValue": {
                      "type": "int"
                    },
                    "Fslogix": {
                      "type": "bool"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "MaxResourcesPerTemplateDeployment": {
                      "type": "int"
                    },
                    "RecoveryServicesVaultName": {
                      "type": "string"
                    },
                    "ResourceGroupHosts": {
                      "type": "string"
                    },
                    "ResourceGroupManagement": {
                      "type": "string"
                    },
                    "SessionHostBatchCount": {
                      "type": "int"
                    },
                    "SessionHostIndex": {
                      "type": "int"
                    },
                    "TagsRecoveryServicesVault": {
                      "type": "object"
                    },
                    "Timestamp": {
                      "type": "string"
                    },
                    "VirtualMachineNamePrefix": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "protectedItems_Vm",
                        "count": "[length(range(1, parameters('SessionHostBatchCount')))]"
                      },
                      "condition": "[not(parameters('Fslogix'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('BackupProtectedItems_VirtualMachines_{0}_{1}', sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('Timestamp'))]",
                      "resourceGroup": "[parameters('ResourceGroupManagement')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "PolicyId": {
                            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicyVm')]"
                          },
                          "RecoveryServicesVaultName": {
                            "value": "[parameters('RecoveryServicesVaultName')]"
                          },
                          "SessionHostCount": "[if(and(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], parameters('SessionHostBatchCount')), greater(parameters('DivisionRemainderValue'), 0)), createObject('value', parameters('DivisionRemainderValue')), createObject('value', parameters('MaxResourcesPerTemplateDeployment')))]",
                          "SessionHostIndex": "[if(equals(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), createObject('value', parameters('SessionHostIndex')), createObject('value', add(mul(sub(range(1, parameters('SessionHostBatchCount'))[copyIndex()], 1), parameters('MaxResourcesPerTemplateDeployment')), parameters('SessionHostIndex'))))]",
                          "Tags": {
                            "value": "[parameters('TagsRecoveryServicesVault')]"
                          },
                          "VirtualMachineNamePrefix": {
                            "value": "[parameters('VirtualMachineNamePrefix')]"
                          },
                          "VirtualMachineResourceGroupName": {
                            "value": "[parameters('ResourceGroupHosts')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "4274432455811829828"
                            }
                          },
                          "parameters": {
                            "Location": {
                              "type": "string"
                            },
                            "PolicyId": {
                              "type": "string"
                            },
                            "RecoveryServicesVaultName": {
                              "type": "string"
                            },
                            "SessionHostCount": {
                              "type": "int"
                            },
                            "SessionHostIndex": {
                              "type": "int"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "VirtualMachineNamePrefix": {
                              "type": "string"
                            },
                            "VirtualMachineResourceGroupName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                            "v2Vm": "vm;iaasvmcontainerv2;"
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "protectedItems_Vm",
                                "count": "[length(range(0, parameters('SessionHostCount')))]"
                              },
                              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                              "apiVersion": "2021-08-01",
                              "name": "[format('{0}/Azure/{1}{2};{3}{4}/{5}{6};{7}{8}', parameters('RecoveryServicesVaultName'), variables('v2VmContainer'), parameters('VirtualMachineResourceGroupName'), parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'), variables('v2Vm'), parameters('VirtualMachineResourceGroupName'), parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0'))]",
                              "location": "[parameters('Location')]",
                              "tags": "[parameters('Tags')]",
                              "properties": {
                                "protectedItemType": "Microsoft.Compute/virtualMachines",
                                "policyId": "[parameters('PolicyId')]",
                                "sourceResourceId": "[resourceId(parameters('VirtualMachineResourceGroupName'), 'Microsoft.Compute/virtualMachines', format('{0}{1}', parameters('VirtualMachineNamePrefix'), padLeft(add(range(0, parameters('SessionHostCount'))[copyIndex()], parameters('SessionHostIndex')), 4, '0')))]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "virtualMachines"
              ]
            },
            {
              "condition": "[and(parameters('ScalingTool'), parameters('PooledHostPool'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ScalingTool_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('ResourceGroupManagement')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ArtifactsLocation": {
                    "value": "[parameters('ArtifactsLocation')]"
                  },
                  "AutomationAccountName": {
                    "value": "[parameters('AutomationAccountName')]"
                  },
                  "BeginPeakTime": {
                    "value": "[parameters('ScalingBeginPeakTime')]"
                  },
                  "EndPeakTime": {
                    "value": "[parameters('ScalingEndPeakTime')]"
                  },
                  "HostPoolName": {
                    "value": "[parameters('HostPoolName')]"
                  },
                  "HostPoolResourceGroupName": {
                    "value": "[parameters('ResourceGroupManagement')]"
                  },
                  "LimitSecondsToForceLogOffUser": {
                    "value": "[parameters('ScalingLimitSecondsToForceLogOffUser')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "MinimumNumberOfRdsh": {
                    "value": "[parameters('ScalingMinimumNumberOfRdsh')]"
                  },
                  "ResourceGroupControlPlane": {
                    "value": "[parameters('ResourceGroupControlPlane')]"
                  },
                  "ResourceGroupHosts": {
                    "value": "[parameters('ResourceGroupHosts')]"
                  },
                  "SessionThresholdPerCPU": {
                    "value": "[parameters('ScalingSessionThresholdPerCPU')]"
                  },
                  "Tags": {
                    "value": "[parameters('TagsAutomationAccounts')]"
                  },
                  "TimeDifference": {
                    "value": "[parameters('TimeDifference')]"
                  },
                  "TimeZone": {
                    "value": "[parameters('TimeZone')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5393549782601896762"
                    }
                  },
                  "parameters": {
                    "ArtifactsLocation": {
                      "type": "string"
                    },
                    "AutomationAccountName": {
                      "type": "string"
                    },
                    "BeginPeakTime": {
                      "type": "string"
                    },
                    "EndPeakTime": {
                      "type": "string"
                    },
                    "HostPoolName": {
                      "type": "string"
                    },
                    "HostPoolResourceGroupName": {
                      "type": "string"
                    },
                    "LimitSecondsToForceLogOffUser": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "MinimumNumberOfRdsh": {
                      "type": "string"
                    },
                    "ResourceGroupControlPlane": {
                      "type": "string"
                    },
                    "ResourceGroupHosts": {
                      "type": "string"
                    },
                    "SessionThresholdPerCPU": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "TimeDifference": {
                      "type": "string"
                    },
                    "Time": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]"
                    },
                    "TimeZone": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RoleAssignments": [
                      "[parameters('ResourceGroupControlPlane')]",
                      "[parameters('ResourceGroupHosts')]"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Automation/automationAccounts/runbooks",
                      "apiVersion": "2019-06-01",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), 'Scaling-Tool')]",
                      "location": "[parameters('Location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                          "uri": "[format('{0}Set-HostPoolScaling.ps1', parameters('ArtifactsLocation'))]",
                          "version": "1.0.0.0"
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "schedules",
                        "count": "[length(range(0, 4))]"
                      },
                      "type": "Microsoft.Automation/automationAccounts/schedules",
                      "apiVersion": "2022-08-08",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                      "properties": {
                        "advancedSchedule": {},
                        "description": null,
                        "expiryTime": null,
                        "frequency": "Hour",
                        "interval": 1,
                        "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
                        "timeZone": "[parameters('TimeZone')]"
                      }
                    },
                    {
                      "copy": {
                        "name": "jobSchedules",
                        "count": "[length(range(0, 4))]"
                      },
                      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                      "apiVersion": "2022-08-08",
                      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Time'), 'Scaling-Tool', parameters('HostPoolName'), string(range(0, 4)[copyIndex()])))]",
                      "properties": {
                        "parameters": {
                          "BeginPeakTime": "[parameters('BeginPeakTime')]",
                          "EndPeakTime": "[parameters('EndPeakTime')]",
                          "EnvironmentName": "[environment().name]",
                          "HostPoolName": "[parameters('HostPoolName')]",
                          "LimitSecondsToForceLogOffUser": "[parameters('LimitSecondsToForceLogOffUser')]",
                          "LogOffMessageBody": "Your session will be logged off. Please save and close everything.",
                          "LogOffMessageTitle": "Machine is about to shutdown.",
                          "MaintenanceTagName": "Maintenance",
                          "MinimumNumberOfRDSH": "[parameters('MinimumNumberOfRdsh')]",
                          "ResourceGroupName": "[parameters('HostPoolResourceGroupName')]",
                          "SessionThresholdPerCPU": "[parameters('SessionThresholdPerCPU')]",
                          "SubscriptionId": "[subscription().subscriptionId]",
                          "TenantId": "[subscription().tenantId]",
                          "TimeDifference": "[parameters('TimeDifference')]"
                        },
                        "runbook": {
                          "name": "Scaling-Tool"
                        },
                        "runOn": null,
                        "schedule": {
                          "name": "[format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[range(0, 4)[copyIndex()]], 1), 15))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), 'Scaling-Tool')]",
                        "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('AutomationAccountName'), format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[range(0, 4)[copyIndex()]], 1), 15)))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(range(0, length(variables('RoleAssignments'))))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('RoleAssignment_{0}_{1}', range(0, length(variables('RoleAssignments')))[copyIndex()], variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]])]",
                      "resourceGroup": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "PrincipalId": {
                            "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2022-08-08', 'full').identity.principalId]"
                          },
                          "PrincipalType": {
                            "value": "ServicePrincipal"
                          },
                          "RoleDefinitionId": {
                            "value": "40c5ff49-9181-41f8-ae61-143b0e78555e"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "3512679634413550227"
                            }
                          },
                          "parameters": {
                            "PrincipalId": {
                              "type": "string"
                            },
                            "PrincipalType": {
                              "type": "string"
                            },
                            "RoleDefinitionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                                "principalId": "[parameters('PrincipalId')]",
                                "principalType": "[parameters('PrincipalType')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupManagement')), 'Microsoft.Resources/deployments', format('RecoveryServices_VirtualMachines_{0}', parameters('Timestamp')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('FSLogix_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Logic_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('Management_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceNames_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('ResourceGroups_{0}', parameters('Timestamp')))]"
      ]
    }
  ]
}